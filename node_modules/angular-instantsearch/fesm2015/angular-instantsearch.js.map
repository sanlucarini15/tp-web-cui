{"version":3,"file":"angular-instantsearch.js","sources":["../../src/utils.ts","../../src/typed-base-widget.ts","../../src/version.ts","../../src/instantsearch/instantsearch.ts","../../src/index-widget/index-widget.ts","../../src/breadcrumb/breadcrumb.ts","../../src/breadcrumb/breadcrumb.module.ts","../../src/clear-refinements/clear-refinements.ts","../../src/clear-refinements/clear-refinements.module.ts","../../src/current-refinements/current-refinements.ts","../../src/current-refinements/current-refinements.module.ts","../../src/hierarchical-menu/hierarchical-menu.ts","../../src/hierarchical-menu/hierarchical-menu-item.ts","../../src/hierarchical-menu/hierarchical-menu.module.ts","../../src/hits-per-page/hits-per-page.ts","../../src/hits-per-page/hits-per-page.module.ts","../../src/highlight/highlight.ts","../../src/highlight/highlight.module.ts","../../src/hits/hits.ts","../../src/hits/hits.module.ts","../../src/index-widget/index-widget.module.ts","../../src/infinite-hits/infinite-hits.ts","../../src/infinite-hits/infinite-hits.module.ts","../../src/instantsearch/instantsearch.module.ts","../../src/menu/menu.ts","../../src/menu/menu.module.ts","../../src/numeric-menu/numeric-menu.ts","../../src/numeric-menu/numeric-menu.module.ts","../../src/pagination/pagination.ts","../../src/pagination/pagination.module.ts","../../src/range-slider/range-slider.ts","../../src/range-slider/range-slider.module.ts","../../src/refinement-list/refinement-list.ts","../../src/refinement-list/facets-search.ts","../../src/refinement-list/refinement-list.module.ts","../../src/search-box/search-box.ts","../../src/search-box/search-box.module.ts","../../src/sort-by/sort-by.ts","../../src/sort-by/sort-by.module.ts","../../src/rating-menu/rating-menu.ts","../../src/rating-menu/rating-menu.module.ts","../../src/stats/stats.ts","../../src/stats/stats.module.ts","../../src/toggle/toggle.ts","../../src/toggle/toggle.module.ts","../../src/reverse-highlight/reverse-highlight.ts","../../src/reverse-highlight/reverse-highlight.module.ts","../../src/snippet/snippet.ts","../../src/snippet/snippet.module.ts","../../src/reverse-snippet/reverse-snippet.ts","../../src/reverse-snippet/reverse-snippet.module.ts","../../src/range-input/range-input.ts","../../src/range-input/range-input.module.ts","../../src/panel/panel.ts","../../src/panel/panel.module.ts","../../src/configure/configure.ts","../../src/configure/configure.module.ts","../../src/configure-related-items/configure-related-items.ts","../../src/configure-related-items/configure-related-items.module.ts","../../src/query-rule-custom-data/query-rule-custom-data.ts","../../src/query-rule-custom-data/query-rule-custom-data.module.ts","../../src/query-rule-context/query-rule-context.ts","../../src/query-rule-context/query-rule-context.module.ts","../../src/voice-search/voice-search.ts","../../src/voice-search/voice-search.module.ts","../../src/create-ssr-search-client.ts","../../src/base-widget.ts","../../src/index.ts","../../src/angular-instantsearch.ts"],"sourcesContent":["export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    let cssClass = `ais-${widgetName}`;\n    if (element) {\n      cssClass += `-${element}`;\n    }\n    if (subElement) {\n      cssClass += `--${subElement}`;\n    }\n    return cssClass;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n\n// See https://github.com/algolia/instantsearch.js/blob/9296022fecadfbf82f15e837c215a1356eac4bc5/src/lib/utils/range.ts\nexport function range({\n  start = 0,\n  end,\n  step = 1,\n}: {\n  start?: number;\n  end: number;\n  step?: number;\n}): number[] {\n  // We can't divide by 0 so we re-assign the step to 1 if it happens.\n  const limitStep = step === 0 ? 1 : step;\n\n  // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n  const arrayLength = Math.round((end - start) / limitStep);\n\n  return [...Array(arrayLength)].map(\n    (_, current) => start + current * limitStep\n  );\n}\n\n// See https://github.com/algolia/react-instantsearch/blob/86dfe8674d566124af55a8f044051d0062786c1a/packages/react-instantsearch-core/src/core/utils.ts#L138-L142\nexport function getPropertyByPath(object: object, path: string): any {\n  return path\n    .replace(/\\[(\\d+)]/g, '.$1')\n    .split('.')\n    .reduce((current, key) => (current ? current[key] : undefined), object);\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nimport { NgAisIndex } from './index-widget/index-widget';\nimport {\n  Widget,\n  WidgetDescription,\n  Connector,\n  Unmounter,\n  Renderer,\n  UnknownWidgetParams,\n} from 'instantsearch.js/es/types';\n\nexport { Widget, Connector };\n\ntype AdditionalWidgetProperties = Partial<Widget<WidgetDescription>>;\n\nexport abstract class TypedBaseWidget<\n  TWidgetDescription extends WidgetDescription,\n  TConnectorParams extends UnknownWidgetParams\n> implements OnInit, OnDestroy {\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: TWidgetDescription['renderState'];\n  public cx: ReturnType<typeof bem>;\n  public abstract instantSearchInstance: NgAisInstantSearch;\n  public abstract parentIndex?: NgAisIndex;\n\n  protected constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  public createWidget(\n    connector: Connector<TWidgetDescription, TConnectorParams>,\n    options: TConnectorParams,\n    additionalWidgetProperties: AdditionalWidgetProperties = {}\n  ) {\n    this.widget = {\n      ...connector(this.updateState, noop as Unmounter)(options),\n      ...additionalWidgetProperties,\n    };\n  }\n\n  public ngOnInit() {\n    this.parent.addWidgets([this.widget]);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n\n  public updateState: Renderer<\n    TWidgetDescription['renderState'],\n    TConnectorParams\n  > = (state, isFirstRendering) => {\n    if (isFirstRendering) {\n      Promise.resolve().then(() => {\n        this.state = state;\n      });\n    } else {\n      this.state = state;\n    }\n  };\n\n  /**\n   * Helper to generate class names for an item\n   * @param item element to generate a class name for\n   */\n  public getItemClass(item: { isRefined?: boolean }): string {\n    const className = this.cx('item');\n\n    if (item.isRefined) {\n      return `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = '4.4.1';\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  VERSION as AngularVersion,\n} from '@angular/core';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\nimport instantsearch from 'instantsearch.js/es';\n\nimport { Widget } from '../typed-base-widget';\nimport { VERSION } from '../version';\nimport { InstantSearchOptions, InstantSearch } from 'instantsearch.js/es/types';\nexport { SearchClient, Hit } from 'instantsearch.js/es/types';\nexport {\n  PlainSearchParameters as SearchParameters,\n} from 'algoliasearch-helper';\n\n// this is needed for different webpack/typescript configurations\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type FacetSortByStringOptions =\n  | 'count'\n  | 'count:asc'\n  | 'count:desc'\n  | 'name'\n  | 'name:asc'\n  | 'name:desc'\n  | 'isRefined';\n\nexport type InstantSearchConfig = InstantSearchOptions;\nexport type InstantSearchInstance = InstantSearch;\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: '<ng-content></ng-content>',\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public ngOnInit() {\n    if (typeof this.config.searchClient.addAlgoliaAgent === 'function') {\n      this.config.searchClient.addAlgoliaAgent(\n        `angular (${AngularVersion.full})`\n      );\n      this.config.searchClient.addAlgoliaAgent(\n        `angular-instantsearch (${VERSION})`\n      );\n    }\n\n    this.instantSearchInstance = instantsearch(this.config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    if (this.instantSearchInstance) {\n      this.instantSearchInstance.removeListener('render', this.onRender);\n      this.instantSearchInstance.dispose();\n    }\n  }\n\n  public addWidgets(widgets: Widget[]) {\n    this.instantSearchInstance.addWidgets(widgets);\n  }\n\n  public removeWidgets(widgets: Widget[]) {\n    this.instantSearchInstance.removeWidgets(widgets);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  Optional,\n  SkipSelf,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Widget } from 'instantsearch.js/es/types';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport indexWidget, {\n  IndexWidget,\n  IndexWidgetParams,\n} from 'instantsearch.js/es/widgets/index/index';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'ais-index',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisIndex implements OnInit, OnDestroy {\n  @Input() public indexName: IndexWidgetParams['indexName'];\n  @Input() public indexId?: IndexWidgetParams['indexId'];\n\n  public widget?: IndexWidget;\n\n  constructor(\n    // public API does not include SkipSelf, but the index widget should accept parents, avoiding itself.\n    @SkipSelf()\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {}\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  createWidget() {\n    this.widget = {\n      ...indexWidget({\n        indexName: this.indexName,\n        indexId: this.indexId,\n      }),\n      $$widgetType: 'ais.index',\n    };\n  }\n\n  public addWidgets(widgets: Widget[]) {\n    this.widget.addWidgets(widgets);\n  }\n\n  public removeWidgets(widgets: Widget[]) {\n    this.widget.removeWidgets(widgets);\n  }\n\n  ngOnInit() {\n    this.createWidget();\n    this.parent.addWidgets([this.widget]);\n  }\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport {\n  BreadcrumbConnectorParams,\n  BreadcrumbWidgetDescription,\n  BreadcrumbRenderState,\n  BreadcrumbConnectorParamsItem,\n} from 'instantsearch.js/es/connectors/breadcrumb/connectBreadcrumb';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [ngClass]=\"[cx('item'), item.isLast ? cx('item', 'selected') : '']\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.label}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.label}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends TypedBaseWidget<\n  BreadcrumbWidgetDescription,\n  BreadcrumbConnectorParams\n> {\n  // instance options\n  @Input() public attributes: BreadcrumbConnectorParams['attributes'];\n  @Input() public rootPath?: BreadcrumbConnectorParams['rootPath'];\n  @Input() public separator?: BreadcrumbConnectorParams['separator'];\n  @Input() public transformItems?: BreadcrumbConnectorParams['transformItems'];\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n      // FIXME: get rid of this. We can use `last` local variable\n      // https://angular.io/api/common/NgForOf#local-variables\n    }));\n  }\n\n  public state: BreadcrumbRenderState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n    canRefine: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectBreadcrumb,\n      {\n        attributes: this.attributes,\n        rootPath: this.rootPath,\n        separator: this.separator,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.breadcrumb',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  public handleClick(\n    event: MouseEvent,\n    item: BreadcrumbConnectorParamsItem\n  ): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport {\n  ClearRefinementsConnectorParams,\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsRenderState,\n} from 'instantsearch.js/es/connectors/clear-refinements/connectClearRefinements';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{resetLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends TypedBaseWidget<\n  ClearRefinementsWidgetDescription,\n  ClearRefinementsConnectorParams\n> {\n  // rendering options\n  @Input() public resetLabel: string = 'Clear refinements';\n\n  // instance options\n  @Input()\n  public includedAttributes: ClearRefinementsConnectorParams['includedAttributes'];\n  @Input()\n  public excludedAttributes: ClearRefinementsConnectorParams['excludedAttributes'];\n  @Input()\n  public transformItems?: ClearRefinementsConnectorParams['transformItems'];\n\n  public state: ClearRefinementsRenderState = {\n    hasRefinements: false,\n    canRefine: false,\n    refine: noop,\n    createURL: () => '#',\n  };\n\n  get isHidden(): boolean {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectClearRefinements,\n      {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.clearRefinements',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport {\n  CurrentRefinementsConnectorParams,\n  CurrentRefinementsConnectorParamsRefinement,\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsRenderState,\n} from 'instantsearch.js/es/connectors/current-refinements/connectCurrentRefinements';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let item of state.items\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{item.label | titlecase}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let refinement of item.refinements\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{refinement.label}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, refinement)\">✕</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends TypedBaseWidget<\n  CurrentRefinementsWidgetDescription,\n  CurrentRefinementsConnectorParams\n> {\n  // instance options\n  @Input()\n  public includedAttributes?: CurrentRefinementsConnectorParams['includedAttributes'];\n  @Input()\n  public excludedAttributes?: CurrentRefinementsConnectorParams['excludedAttributes'];\n  @Input()\n  public transformItems?: CurrentRefinementsConnectorParams['transformItems'];\n\n  public state: CurrentRefinementsRenderState = {\n    createURL: () => '#',\n    refine: noop,\n    items: [],\n    canRefine: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectCurrentRefinements,\n      {\n        includedAttributes: this.includedAttributes,\n        excludedAttributes: this.excludedAttributes,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.currentRefinements',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public handleClick(\n    event: MouseEvent,\n    refinement: CurrentRefinementsConnectorParamsRefinement\n  ) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport {\n  HierarchicalMenuConnectorParams,\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuRenderState,\n} from 'instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of state.items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends TypedBaseWidget<\n  HierarchicalMenuWidgetDescription,\n  HierarchicalMenuConnectorParams\n> {\n  @Input() public attributes: HierarchicalMenuConnectorParams['attributes'];\n  @Input() public separator?: HierarchicalMenuConnectorParams['separator'];\n  @Input() public rootPath?: HierarchicalMenuConnectorParams['rootPath'];\n  @Input()\n  public showParentLevel?: HierarchicalMenuConnectorParams['showParentLevel'];\n  @Input() public limit?: HierarchicalMenuConnectorParams['limit'];\n  @Input() public sortBy?: HierarchicalMenuConnectorParams['sortBy'];\n\n  @Input()\n  public transformItems?: HierarchicalMenuConnectorParams['transformItems'];\n\n  public state: HierarchicalMenuRenderState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n    canRefine: false,\n    isShowingMore: false,\n    toggleShowMore: noop,\n    canToggleShowMore: false,\n    sendEvent: noop,\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectHierarchicalMenu,\n      {\n        limit: parseNumberInput(this.limit),\n        attributes: this.attributes,\n        rootPath: this.rootPath,\n        separator: this.separator,\n        showParentLevel: this.showParentLevel,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.hierarchicalMenu',\n      }\n    );\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\nimport {\n  HierarchicalMenuRenderState,\n  HierarchicalMenuItem,\n} from 'instantsearch.js/es/connectors/hierarchical-menu/connectHierarchicalMenu';\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass()\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: HierarchicalMenuRenderState['refine'];\n  @Input() public createURL: HierarchicalMenuRenderState['createURL'];\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item): string {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(): string {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any): boolean {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport {\n  HitsPerPageConnectorParams,\n  HitsPerPageWidgetDescription,\n  HitsPerPageRenderState,\n} from 'instantsearch.js/es/connectors/hits-per-page/connectHitsPerPage';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends TypedBaseWidget<\n  HitsPerPageWidgetDescription,\n  HitsPerPageConnectorParams\n> {\n  @Input() public items: HitsPerPageConnectorParams['items'];\n  @Input() public transformItems?: HitsPerPageConnectorParams['transformItems'];\n\n  public state: HitsPerPageRenderState = {\n    items: [],\n    refine: noop,\n    hasNoResults: true, // TODO: disable <select> when true\n    canRefine: false,\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectHitsPerPage,\n      {\n        items: this.items,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.hitsPerPage',\n      }\n    );\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Hit } from 'instantsearch.js';\n\nimport { highlight } from 'instantsearch.js/es/helpers';\nimport { getPropertyByPath } from 'instantsearch.js/es/lib/utils';\n\n@Component({\n  selector: 'ais-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<span class=\"ais-Highlight\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: Partial<Hit>;\n  @Input() tagName: string = 'mark';\n\n  get content() {\n    const highlightAttributeResult = getPropertyByPath(\n      this.hit._highlightResult,\n      this.attribute\n    );\n    const fallback = getPropertyByPath(this.hit, this.attribute);\n\n    // @MAJOR drop this custom fallback once it is implemented directly in instantsearch.js v5\n    if (!highlightAttributeResult && fallback) {\n      return fallback;\n    }\n\n    return highlight({\n      attribute: this.attribute,\n      highlightedTagName: this.tagName,\n      hit: this.hit,\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport {\n  HitsConnectorParams,\n  HitsWidgetDescription,\n  HitsRenderState,\n} from 'instantsearch.js/es/connectors/hits/connectHits';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends TypedBaseWidget<\n  HitsWidgetDescription,\n  HitsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template?: TemplateRef<any>;\n\n  @Input() public escapeHTML?: HitsConnectorParams['escapeHTML'];\n  @Input() public transformItems?: HitsConnectorParams['transformItems'];\n\n  public state: HitsRenderState = {\n    hits: [],\n    results: undefined,\n    bindEvent: undefined,\n    sendEvent: undefined,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Hits');\n  }\n\n  ngOnInit() {\n    this.createWidget(\n      connectHitsWithInsights,\n      {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.hits',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public updateState = (state: HitsRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisIndex } from './index-widget';\n\n@NgModule({\n  declarations: [NgAisIndex],\n  entryComponents: [NgAisIndex],\n  exports: [NgAisIndex],\n  imports: [CommonModule],\n})\nexport class NgAisIndexModule {\n  public static forRoot(): ModuleWithProviders<NgAisIndexModule> {\n    return {\n      ngModule: NgAisIndexModule,\n      providers: [],\n    };\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport {\n  InfiniteHitsConnectorParams,\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsRenderState,\n} from 'instantsearch.js/es/connectors/infinite-hits/connectInfiniteHits';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <button\n        [ngClass]=\"[cx('loadPrevious'), this.state.isFirstPage ? cx('loadPrevious', 'disabled') : '']\"\n        (click)=\"showPreviousHandler($event)\"\n        [disabled]=\"state.isFirstPage\"\n        *ngIf=\"showPrevious && !template\"\n      >\n        {{showPreviousLabel}}\n      </button>\n\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [ngClass]=\"[cx('loadMore'), this.state.isLastPage ? cx('loadMore', 'disabled') : '']\"\n        (click)=\"showMoreHandler($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends TypedBaseWidget<\n  InfiniteHitsWidgetDescription,\n  InfiniteHitsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template?: any;\n\n  // rendering options\n  @Input() public escapeHTML: InfiniteHitsConnectorParams['escapeHTML'];\n  @Input()\n  public showPrevious: InfiniteHitsConnectorParams['showPrevious'] = false;\n  @Input() public showPreviousLabel: string = 'Show previous results';\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input()\n  public transformItems?: InfiniteHitsConnectorParams['transformItems'];\n\n  public state: InfiniteHitsRenderState = {\n    hits: [],\n    results: undefined,\n    currentPageHits: [],\n    isFirstPage: false,\n    isLastPage: false,\n    showMore: noop,\n    showPrevious: noop,\n    sendEvent: noop,\n    bindEvent: () => '',\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('InfiniteHits');\n  }\n\n  ngOnInit() {\n    this.createWidget(\n      connectInfiniteHitsWithInsights,\n      {\n        escapeHTML: this.escapeHTML,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.infiniteHits',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public showMoreHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  public showPreviousHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showPrevious();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders<NgAisInstantSearchModule> {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  MenuConnectorParams,\n  MenuWidgetDescription,\n  MenuRenderState,\n  MenuItem,\n} from 'instantsearch.js/es/connectors/menu/connectMenu';\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends TypedBaseWidget<\n  MenuWidgetDescription,\n  MenuConnectorParams\n> {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n\n  // instance options\n  @Input() public attribute: MenuConnectorParams['attribute'];\n  @Input() public showMore?: MenuConnectorParams['showMore'];\n  @Input() public limit?: MenuConnectorParams['limit'];\n  @Input() public showMoreLimit?: MenuConnectorParams['showMoreLimit'];\n  @Input() public sortBy?: MenuConnectorParams['sortBy'];\n  @Input() public transformItems?: MenuConnectorParams['transformItems'];\n\n  public state: MenuRenderState = {\n    items: [],\n    refine: noop,\n    createURL: () => '#',\n    canRefine: false,\n    isShowingMore: false,\n    canToggleShowMore: false,\n    toggleShowMore: noop,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectMenu,\n      {\n        attribute: this.attribute,\n        showMore: this.showMore,\n        limit: this.limit,\n        showMoreLimit: this.showMoreLimit,\n        sortBy: this.sortBy,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.menu',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: MenuItem['value']) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  NumericMenuConnectorParams,\n  NumericMenuWidgetDescription,\n  NumericMenuRenderState,\n} from 'instantsearch.js/es/connectors/numeric-menu/connectNumericMenu';\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n              (change)=\"refine($event, item)\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends TypedBaseWidget<\n  NumericMenuWidgetDescription,\n  NumericMenuConnectorParams\n> {\n  @Input() public attribute: NumericMenuConnectorParams['attribute'];\n  @Input() public items: NumericMenuConnectorParams['items'];\n  @Input() public transformItems?: NumericMenuConnectorParams['transformItems'];\n\n  public state: NumericMenuRenderState = {\n    items: [],\n    refine: noop,\n    createURL: () => '#',\n    hasNoResults: true,\n    sendEvent: noop,\n    canRefine: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectNumericMenu,\n      {\n        attribute: this.attribute,\n        items: this.items,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.numericMenu',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public refine(event: Event, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop, range } from '../utils';\nimport {\n  PaginationConnectorParams,\n  PaginationWidgetDescription,\n  PaginationRenderState,\n} from 'instantsearch.js/es/connectors/pagination/connectPagination';\n\nexport { PaginationConnectorParams, PaginationRenderState };\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [ngClass]=\"[cx(), state.nbPages <= 1 ? cx('', 'noRefinement') : '']\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            ‹‹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            ‹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of state.pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            ›\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            ››\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends TypedBaseWidget<\n  PaginationWidgetDescription,\n  PaginationConnectorParams\n> {\n  // rendering options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = true;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n\n  // instance options\n  @Input() public padding?: PaginationConnectorParams['padding'];\n  @Input() public totalPages?: PaginationConnectorParams['totalPages'];\n  // TODO: check if this works, padding and totalPages are most likely strings when passed to the template\n\n  public state: PaginationRenderState = {\n    createURL: () => '#',\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n    pages: [],\n    canRefine: false,\n    isFirstPage: false,\n    isLastPage: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectPagination,\n      {\n        padding: parseNumberInput(this.padding),\n        totalPages: parseNumberInput(this.totalPages),\n      },\n      {\n        $$widgetType: 'ais.pagination',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\nimport {\n  RangeBoundaries,\n  RangeConnectorParams,\n  RangeWidgetDescription,\n  RangeRenderState,\n} from 'instantsearch.js/es/connectors/range/connectRange';\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends TypedBaseWidget<\n  RangeWidgetDescription,\n  RangeConnectorParams\n> {\n  @ViewChild('sliderContainer', { static: false })\n  public sliderContainer: any;\n\n  // rendering options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // instance options\n  @Input() public attribute: RangeConnectorParams['attribute'];\n  @Input() public min?: RangeConnectorParams['min'];\n  @Input() public max?: RangeConnectorParams['max'];\n  @Input() public precision?: RangeConnectorParams['precision'];\n\n  public state: RangeRenderState = {\n    canRefine: false,\n    format: {\n      from: () => '',\n      to: () => '',\n    },\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n    sendEvent: noop,\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectRange,\n      {\n        attribute: this.attribute,\n        max: parseNumberInput(this.max),\n        min: parseNumberInput(this.min),\n        precision: parseNumberInput(this.precision),\n      },\n      {\n        $$widgetType: 'ais.rangeSlider',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state: RangeRenderState, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      // tslint:disable-next-line: no-boolean-literal-compare (pips is @Input, so could be not a boolean)\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    // TODO: test this as we're nolonger passing disable\n    // it seems the API has changed: slider.setAttribute('disabled', true) / slider.removeAttribute('disabled');\n    // see: https://refreshless.com/nouislider/more/#section-disable\n    this.slider.updateOptions({ range, start });\n  };\n\n  public handleChange = (values: RangeBoundaries) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop, parseNumberInput } from '../utils';\nimport {\n  RefinementListConnectorParams,\n  RefinementListWidgetDescription,\n  RefinementListRenderState,\n  RefinementListItem,\n} from 'instantsearch.js/es/connectors/refinement-list/connectRefinementList';\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('showMore')\"\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends TypedBaseWidget<\n  RefinementListWidgetDescription,\n  RefinementListConnectorParams\n> {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // instance options\n  @Input() public attribute: RefinementListConnectorParams['attribute'];\n  @Input() public operator: RefinementListConnectorParams['operator'];\n  @Input() public limit: RefinementListConnectorParams['limit'];\n  @Input() public showMore: RefinementListConnectorParams['showMore'];\n  @Input() public showMoreLimit: RefinementListConnectorParams['showMoreLimit'];\n  @Input() public sortBy: RefinementListConnectorParams['sortBy'];\n  @Input()\n  public transformItems?: RefinementListConnectorParams['transformItems'];\n\n  public state: RefinementListRenderState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: () => '',\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFromSearch: false,\n    hasExhaustiveItems: false,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RefinementList');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectRefinementList,\n      {\n        showMore: this.showMore,\n        limit: parseNumberInput(this.limit),\n        showMoreLimit: parseNumberInput(this.showMoreLimit),\n        attribute: this.attribute,\n        operator: this.operator,\n        sortBy: this.sortBy,\n        escapeFacetValues: true,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.refinementList',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: RefinementListItem) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n  Optional,\n  DoCheck,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  SearchBoxConnectorParams,\n  SearchBoxWidgetDescription,\n  SearchBoxRenderState,\n} from 'instantsearch.js/es/connectors/search-box/connectSearchBox';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim()) || (state.isSearchStalled && showLoadingIndicator)\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n\n        <span\n          [class]=\"cx('loadingIndicator')\"\n          [hidden]=\"!showLoadingIndicator || !state.isSearchStalled\"\n        >\n          <svg\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 38 38\"\n            stroke=\"#444\"\n            [ngClass]=\"cx('loadingIcon')\"\n          >\n            <g fill=\"none\" fillRule=\"evenodd\">\n              <g transform=\"translate(1 1)\" strokeWidth=\"2\">\n                <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\n                <path d=\"M36 18c0-9.94-8.06-18-18-18\">\n                  <animateTransform\n                    attributeName=\"transform\"\n                    type=\"rotate\"\n                    from=\"0 18 18\"\n                    to=\"360 18 18\"\n                    dur=\"1s\"\n                    repeatCount=\"indefinite\"\n                  />\n                </path>\n              </g>\n            </g>\n          </svg>\n        </span>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox\n  extends TypedBaseWidget<SearchBoxWidgetDescription, SearchBoxConnectorParams>\n  implements AfterViewInit, DoCheck {\n  @ViewChild('searchBox', { static: false })\n  searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n  @Input() public showLoadingIndicator: boolean = true;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public query = '';\n\n  public state: SearchBoxRenderState = {\n    query: '',\n    refine: noop,\n    clear: noop,\n    isSearchStalled: false,\n  };\n\n  private document: Document;\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch,\n    @Inject(DOCUMENT) private injectedDocument: Document\n  ) {\n    super('SearchBox');\n    this.createWidget(\n      connectSearchBox,\n      {},\n      {\n        $$widgetType: 'ais.searchBox',\n      }\n    );\n    this.document = injectedDocument;\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public ngDoCheck() {\n    // We bypass the state update if the input is focused to avoid concurrent\n    // updates when typing.\n    if (\n      this.query !== this.state.query &&\n      this.searchBox &&\n      this.searchBox.nativeElement &&\n      this.document.activeElement !== this.searchBox.nativeElement\n    ) {\n      this.query = this.state.query;\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.searchBox.nativeElement.value);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  SortByConnector,\n  SortByConnectorParams,\n  SortByWidgetDescription,\n  SortByRenderState,\n  SortByItem,\n} from 'instantsearch.js/es/connectors/sort-by/connectSortBy';\n\nexport {\n  SortByConnector,\n  SortByConnectorParams,\n  SortByWidgetDescription,\n  SortByRenderState,\n  SortByItem,\n};\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends TypedBaseWidget<\n  SortByWidgetDescription,\n  SortByConnectorParams\n> {\n  @Input() public items: SortByItem[];\n  @Input()\n  public transformItems?: <U extends SortByItem>(items: SortByItem[]) => U[];\n\n  public state: SortByRenderState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n    hasNoResults: false,\n    canRefine: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectSortBy,\n      {\n        items: this.items,\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.sortBy',\n      }\n    );\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop, parseNumberInput } from '../utils';\nimport {\n  RatingMenuConnectorParams,\n  RatingMenuWidgetDescription,\n  RatingMenuRenderState,\n} from 'instantsearch.js/es/connectors/rating-menu/connectRatingMenu';\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [ngClass]=\"[\n        cx(),\n        state.items.length === 0 ? cx('', 'noRefinement') : ''\n      ]\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon') + ' ' + (star ? cx('starIcon', 'full') : cx('starIcon', 'empty'))\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends TypedBaseWidget<\n  RatingMenuWidgetDescription,\n  RatingMenuConnectorParams\n> {\n  // rendering options\n  @Input() public andUpLabel: string = '& Up';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public max?: number;\n\n  public state: RatingMenuRenderState = {\n    createURL: () => '#',\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n    canRefine: false,\n    sendEvent: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectRatingMenu,\n      {\n        attribute: this.attribute,\n        max: parseNumberInput(this.max),\n      },\n      {\n        $$widgetType: 'ais.ratingMenu',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Optional,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  StatsConnectorParams,\n  StatsWidgetDescription,\n  StatsRenderState,\n} from 'instantsearch.js/es/connectors/stats/connectStats';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends TypedBaseWidget<\n  StatsWidgetDescription,\n  StatsConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template: any;\n\n  public state: StatsRenderState = {\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n    areHitsSorted: false,\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Stats');\n    this.createWidget(\n      connectStats,\n      {},\n      {\n        $$widgetType: 'ais.stats',\n      }\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  ToggleRefinementConnectorParams,\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementRenderState,\n} from 'instantsearch.js/es/connectors/toggle-refinement/connectToggleRefinement';\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]='cx()'>\n      <label [class]=\"cx('label')\">\n        <input\n          [class]=\"cx('checkbox')\"\n          type='checkbox'\n          value='{{state.value.name}}'\n          [checked]='state.value.isRefined'\n          (change)='handleChange($event)'\n        />\n\n        <span [class]=\"cx('labelText')\">\n          {{label || state.value.name}}\n        </span>\n\n        <span [class]=\"cx('count')\">{{state.value.count}}</span>\n      </label>\n    </div>\n  `,\n})\nexport class NgAisToggle extends TypedBaseWidget<\n  ToggleRefinementWidgetDescription,\n  ToggleRefinementConnectorParams\n> {\n  // rendering options\n  @Input() public label: string;\n\n  // instance options\n  @Input() public attribute: ToggleRefinementConnectorParams['attribute'];\n  @Input() public on?: ToggleRefinementConnectorParams['on'];\n  @Input() public off?: ToggleRefinementConnectorParams['off'];\n\n  public state: ToggleRefinementRenderState = {\n    canRefine: false,\n    sendEvent: undefined,\n    value: {\n      count: undefined,\n      isRefined: false,\n      name: '',\n      offFacetValue: undefined,\n      onFacetValue: undefined,\n    },\n    createURL: () => '#',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectToggleRefinement,\n      {\n        attribute: this.attribute,\n        on: this.on,\n        off: this.off,\n      },\n      {\n        $$widgetType: 'ais.toggleRefinement',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public handleChange(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Hit } from 'instantsearch.js';\nimport { reverseHighlight } from 'instantsearch.js/es/helpers';\n\n@Component({\n  selector: 'ais-reverse-highlight',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<span class=\"ais-ReverseHighlight\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisReverseHighlight {\n  @Input() attribute: string;\n  @Input() hit: Partial<Hit>;\n  @Input() highlightedTagName: string = 'mark';\n\n  get content() {\n    return reverseHighlight({\n      attribute: this.attribute,\n      hit: this.hit,\n      highlightedTagName: this.highlightedTagName,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgAisReverseHighlight } from './reverse-highlight';\n\n@NgModule({\n  declarations: [NgAisReverseHighlight],\n  exports: [NgAisReverseHighlight],\n})\nexport class NgAisReverseHighlightModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Hit } from 'instantsearch.js';\nimport { snippet } from 'instantsearch.js/es/helpers';\n\n@Component({\n  selector: 'ais-snippet',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<span class=\"ais-Snippet\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisSnippet {\n  @Input() attribute: string;\n  @Input() hit: Partial<Hit>;\n  @Input() highlightedTagName: string = 'mark';\n\n  get content() {\n    return snippet({\n      attribute: this.attribute,\n      hit: this.hit,\n      highlightedTagName: this.highlightedTagName,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgAisSnippet } from './snippet';\n\n@NgModule({\n  declarations: [NgAisSnippet],\n  exports: [NgAisSnippet],\n})\nexport class NgAisSnippetModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { Hit } from 'instantsearch.js';\nimport { reverseSnippet } from 'instantsearch.js/es/helpers';\n\n@Component({\n  selector: 'ais-reverse-snippet',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `<span class=\"ais-ReverseSnippet\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisReverseSnippet {\n  @Input() attribute: string;\n  @Input() hit: Partial<Hit>;\n  @Input() highlightedTagName: string = 'mark';\n\n  get content() {\n    return reverseSnippet({\n      attribute: this.attribute,\n      hit: this.hit,\n      highlightedTagName: this.highlightedTagName,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgAisReverseSnippet } from './reverse-snippet';\n\n@NgModule({\n  declarations: [NgAisReverseSnippet],\n  exports: [NgAisReverseSnippet],\n})\nexport class NgAisReverseSnippetModule {}\n","import { Inject, Component, Input, forwardRef, Optional } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport {\n  RangeConnectorParams,\n  RangeWidgetDescription,\n  RangeRenderState,\n} from 'instantsearch.js/es/connectors/range/connectRange';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [ngClass]=\"[\n        cx(),\n        !canRefine ? cx('', 'noRefinement') : ''\n      ]\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'min')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'max')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends TypedBaseWidget<\n  RangeWidgetDescription,\n  RangeConnectorParams\n> {\n  // rendering options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // instance options\n  @Input() public attribute: RangeConnectorParams['attribute'];\n  @Input() public min?: RangeConnectorParams['min'];\n  @Input() public max?: RangeConnectorParams['max'];\n  @Input() public precision?: RangeConnectorParams['precision'] = 0;\n\n  // inner state\n  public minInputValue?: number;\n  public maxInputValue?: number;\n\n  get step() {\n    const precision = parseNumberInput(this.precision);\n    return 1 / Math.pow(10, precision);\n  }\n\n  get canRefine() {\n    return this.state.range.min !== this.state.range.max;\n  }\n\n  public state: RangeRenderState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n    // TODO: use canRefine & format\n    canRefine: false,\n    format: {\n      from: () => '',\n      to: () => '',\n    },\n    sendEvent: undefined,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectRange,\n      {\n        attribute: this.attribute,\n        max: parseNumberInput(this.max),\n        min: parseNumberInput(this.min),\n        precision: parseNumberInput(this.precision),\n      },\n      {\n        $$widgetType: 'ais.rangeInput',\n      }\n    );\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n  Optional,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport {\n  ConfigureWidgetDescription,\n  ConfigureRenderState,\n  ConfigureConnectorParams,\n} from 'instantsearch.js/es/connectors/configure/connectConfigure';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends TypedBaseWidget<\n  ConfigureWidgetDescription,\n  ConfigureConnectorParams\n> {\n  // instance options\n  private internalSearchParameters: ConfigureConnectorParams['searchParameters'];\n\n  private differ: KeyValueDiffer<string, any>;\n\n  public state: ConfigureRenderState = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: ConfigureConnectorParams['searchParameters']) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectConfigure,\n      {\n        searchParameters: this.internalSearchParameters,\n      },\n      {\n        $$widgetType: 'ais.configure',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import { Component, forwardRef, Inject, Input, Optional } from '@angular/core';\n\nimport { EXPERIMENTAL_connectConfigureRelatedItems } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  ConfigureRelatedItemsConnectorParams,\n  ConfigureRelatedItemsWidgetDescription,\n} from 'instantsearch.js/es/connectors/configure-related-items/connectConfigureRelatedItems';\n\n@Component({\n  selector: 'ais-experimental-configure-related-items',\n  template: '',\n})\nexport class NgAisConfigureRelatedItems extends TypedBaseWidget<\n  ConfigureRelatedItemsWidgetDescription,\n  ConfigureRelatedItemsConnectorParams\n> {\n  @Input() hit: ConfigureRelatedItemsConnectorParams['hit'];\n  @Input()\n  public matchingPatterns: ConfigureRelatedItemsConnectorParams['matchingPatterns'];\n  @Input()\n  public transformSearchParameters: ConfigureRelatedItemsConnectorParams['transformSearchParameters'];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('ExperimentalConfigureRelatedItems');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      EXPERIMENTAL_connectConfigureRelatedItems,\n      {\n        hit: this.hit,\n        matchingPatterns: this.matchingPatterns,\n        transformSearchParameters: this.transformSearchParameters,\n      },\n      {\n        $$widgetType: 'ais.configureRelatedItems',\n      }\n    );\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigureRelatedItems } from './configure-related-items';\n\n@NgModule({\n  declarations: [NgAisConfigureRelatedItems],\n  entryComponents: [NgAisConfigureRelatedItems],\n  exports: [NgAisConfigureRelatedItems],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureRelatedItemsModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Input,\n  Optional,\n} from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport {\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n  QueryRulesRenderState,\n} from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';\n\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\n\n@Component({\n  selector: 'ais-query-rule-custom-data',\n  template: `\n    <div [class]='cx()'>\n      <ng-container *ngTemplateOutlet='template; context: templateContext'>\n      </ng-container>\n\n      <div *ngIf='!template'>\n        <div *ngFor='let item of state.items'>\n          <pre>{{ item | json }}</pre>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisQueryRuleCustomData extends TypedBaseWidget<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n> {\n  @ContentChild(TemplateRef, { static: false })\n  public template: any;\n\n  @Input() public transformItems?: QueryRulesConnectorParams['transformItems'];\n\n  public state: QueryRulesRenderState = {\n    items: [],\n  };\n\n  get templateContext() {\n    return {\n      items: this.state.items,\n    };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('QueryRuleCustomData');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectQueryRules,\n      {\n        transformItems: this.transformItems,\n      },\n      {\n        $$widgetType: 'ais.queryRuleCustomData',\n      }\n    );\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleCustomData } from './query-rule-custom-data';\n\n@NgModule({\n  declarations: [NgAisQueryRuleCustomData],\n  entryComponents: [NgAisQueryRuleCustomData],\n  exports: [NgAisQueryRuleCustomData],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleCustomDataModule {}\n","import { Component, Input, Inject, forwardRef, Optional } from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport {\n  QueryRulesConnectorParams,\n  QueryRulesWidgetDescription,\n} from 'instantsearch.js/es/connectors/query-rules/connectQueryRules';\n\n@Component({\n  selector: 'ais-query-rule-context',\n  template: '',\n})\nexport class NgAisQueryRuleContext extends TypedBaseWidget<\n  QueryRulesWidgetDescription,\n  QueryRulesConnectorParams\n> {\n  @Input() public trackedFilters: QueryRulesConnectorParams['trackedFilters'];\n  @Input()\n  public transformRuleContexts?: QueryRulesConnectorParams['transformRuleContexts'];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch\n  ) {\n    super('QueryRuleContext');\n  }\n\n  public ngOnInit() {\n    this.createWidget(\n      connectQueryRules,\n      {\n        trackedFilters: this.trackedFilters,\n        transformRuleContexts: this.transformRuleContexts,\n      },\n      {\n        $$widgetType: 'ais.queryRuleContext',\n      }\n    );\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleContext } from './query-rule-context';\n\n@NgModule({\n  declarations: [NgAisQueryRuleContext],\n  entryComponents: [NgAisQueryRuleContext],\n  exports: [NgAisQueryRuleContext],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleContextModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  NgZone,\n  ContentChild,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n  Optional,\n} from '@angular/core';\n\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { TypedBaseWidget } from '../typed-base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { NgAisIndex } from '../index-widget/index-widget';\nimport { noop } from '../utils';\nimport {\n  VoiceSearchConnectorParams,\n  VoiceSearchWidgetDescription,\n  VoiceSearchRenderState,\n} from 'instantsearch.js/es/connectors/voice-search/connectVoiceSearch';\n\n@Component({\n  selector: 'ais-voice-search',\n  template: `\n    <div [class]=\"cx()\">\n      <button\n        type=\"button\"\n        [class]=\"cx('button')\"\n        [title]=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        [disabled]=\"!state.isBrowserSupported\"\n        (click)=\"handleClick($event)\"\n      >\n        <ng-container *ngTemplateOutlet=\"button ? button : defaultButton; context: templateContext\"></ng-container>\n      </button>\n      <div [class]=\"cx('status')\">\n        <ng-container *ngTemplateOutlet=\"status ? status : defaultStatus; context: templateContext\"></ng-container>\n      </div>\n    </div>\n\n    <ng-template #defaultButton let-status=\"status\" let-errorCode=\"errorCode\" let-isListening=\"isListening\">\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 24 24'\n        fill='none'\n        stroke='currentColor'\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      >\n        <ng-container *ngIf=\"isNotAllowedError(); then errorSvgContent else normalSvgContent\">\n        </ng-container>\n        <ng-template #errorSvgContent>\n          <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n          <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n          <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n        <ng-template #normalSvgContent>\n          <path\n            d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n            [attr.fill]=\"isListening ? 'currentColor' : 'none'\"\n          ></path>\n          <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n      </svg>\n    </ng-template>\n    <ng-template #defaultStatus let-transcript=\"transcript\">\n      <p>{{transcript}}</p>\n    </ng-template>\n  `,\n})\nexport class NgAisVoiceSearch\n  extends TypedBaseWidget<\n    VoiceSearchWidgetDescription,\n    VoiceSearchConnectorParams\n  >\n  implements OnInit {\n  @ContentChild('button', { static: false })\n  button: TemplateRef<ElementRef>;\n  @ContentChild('status', { static: false })\n  status: TemplateRef<ElementRef>;\n\n  // rendering options\n  @Input() public buttonTitle: string = 'Search by voice';\n  @Input()\n  public disabledButtonTitle: string =\n    'Search by voice (not supported on this browser)';\n\n  // instance option\n  @Input()\n  public searchAsYouSpeak?: VoiceSearchConnectorParams['searchAsYouSpeak'];\n\n  public state: VoiceSearchRenderState = {\n    isBrowserSupported: undefined,\n    isListening: undefined,\n    toggleListening: noop,\n    voiceListeningState: {\n      status: 'initial',\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    },\n  };\n\n  public templateContext: VoiceSearchRenderState['voiceListeningState'] & {\n    isListening: boolean;\n    isBrowserSupported: boolean;\n  } = {\n    status: 'initial',\n    errorCode: undefined,\n    transcript: '',\n    isSpeechFinal: false,\n    isListening: false,\n    isBrowserSupported: false,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisIndex))\n    @Optional()\n    public parentIndex: NgAisIndex,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchInstance: NgAisInstantSearch,\n    private zone: NgZone\n  ) {\n    super('VoiceSearch');\n  }\n\n  ngOnInit() {\n    this.createWidget(\n      connectVoiceSearch,\n      {\n        searchAsYouSpeak: this.searchAsYouSpeak,\n      },\n      {\n        $$widgetType: 'ais.voiceSearch',\n      }\n    );\n    super.ngOnInit();\n  }\n\n  public handleClick = (event: MouseEvent): void => {\n    (event.currentTarget as HTMLElement).blur();\n    this.state.toggleListening();\n  };\n\n  public isNotAllowedError = (): boolean =>\n    this.state.voiceListeningState.status === 'error' &&\n    this.state.voiceListeningState.errorCode === 'not-allowed';\n\n  public updateState = (state: VoiceSearchRenderState): void => {\n    this.zone.run(() => {\n      this.templateContext = {\n        status: state.voiceListeningState.status,\n        errorCode: state.voiceListeningState.errorCode,\n        transcript: state.voiceListeningState.transcript,\n        isSpeechFinal: state.voiceListeningState.isSpeechFinal,\n        isListening: state.isListening,\n        isBrowserSupported: state.isBrowserSupported,\n      };\n      this.state = state;\n    });\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisVoiceSearch } from './voice-search';\n\n@NgModule({\n  declarations: [NgAisVoiceSearch],\n  entryComponents: [NgAisVoiceSearch],\n  exports: [NgAisVoiceSearch],\n  imports: [CommonModule],\n})\nexport class NgAisVoiceSearchModule {}\n","import * as algoliasearchProxy from 'algoliasearch/lite';\nimport * as encodeProxy from 'querystring-es3/encode';\nimport { VERSION as AngularVersion } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TransferState, StateKey } from '@angular/platform-browser';\nimport { VERSION } from './version';\n\ntype SSRSearchClientOptions = {\n  appId: string;\n  apiKey: string;\n  httpClient: HttpClient;\n  HttpHeaders: typeof HttpHeaders;\n  transferState: TransferState;\n  options?: object;\n  makeStateKey<T = void>(key: string): StateKey<T>;\n};\n\ntype RequestOptions = {\n  // Algolia only uses GET and POST methods for searching.\n  // See: https://www.algolia.com/doc/rest-api/search/#search-endpoints\n  method: 'GET' | 'POST';\n  headers: string;\n  body: string;\n};\n\n// compatibility with different typescript settings:\n// - esModuleInterop\n// - allowSyntheticDefaultImports\nconst algoliasearch = (typeof algoliasearchProxy.default === 'function'\n  ? algoliasearchProxy.default\n  : algoliasearchProxy) as typeof algoliasearchProxy.default extends Function\n  ? typeof algoliasearchProxy.default\n  : typeof algoliasearchProxy;\n\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n  options = {},\n}: SSRSearchClientOptions) {\n  // A custom network request needs to be done, using TransferState of Angular.\n  // This is done to make sure the request done backend for SSR doesn't get\n  // made again frontend during hydration.\n  // For compatibility with both v3 and v4 of algoliasearch, we are overriding the\n  // network request function in two places:\n  // v4: custom \"requester\"\n  // v3: override \"_request\" on the prototype\n  // since neither v3 uses the requester argument, and v4 use the _request, we\n  // can safely do this without checking the version\n  const searchClient = algoliasearch(appId, apiKey, {\n    ...options,\n    requester: {\n      send({ headers, method, url, data }) {\n        const transferStateKey = makeStateKey<string>(`ngais(${data})`);\n\n        if (transferState.hasKey(transferStateKey)) {\n          const response = JSON.parse(\n            transferState.get(transferStateKey, JSON.stringify({}))\n          );\n\n          return Promise.resolve({\n            status: response.status,\n            content: JSON.stringify(response.body),\n            isTimedOut: false,\n          });\n        }\n\n        return new Promise((resolve, reject) => {\n          httpClient\n            .request(method, url, {\n              headers,\n              body: data,\n              observe: 'response',\n            })\n            .subscribe(\n              response => {\n                transferState.set(transferStateKey, JSON.stringify(response));\n\n                resolve({\n                  status: response.status,\n                  content: JSON.stringify(response.body),\n                  isTimedOut: false,\n                });\n              },\n              response =>\n                reject({\n                  status: response.status,\n                  body: response.body,\n                })\n            );\n        });\n      },\n    },\n  });\n\n  searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch-server (${VERSION})`);\n\n  (searchClient as any)._request = (\n    rawUrl: string,\n    options: RequestOptions\n  ) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      options.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(options.headers);\n\n    const transferStateKey = makeStateKey<string>(`ngais(${options.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const response = JSON.parse(\n        transferState.get(transferStateKey, JSON.stringify({}))\n      );\n\n      return Promise.resolve({\n        statusCode: response.status,\n        body: response.body,\n        headers: response.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(options.method, url, {\n          headers,\n          body: options.body,\n          observe: 'response',\n        })\n        .subscribe(\n          response => {\n            transferState.set(transferStateKey, JSON.stringify(response));\n\n            resolve({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            });\n          },\n          response =>\n            reject({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            })\n        );\n    });\n  };\n\n  return searchClient;\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nimport { NgAisIndex } from './index-widget/index-widget';\nimport { Widget as W } from 'instantsearch.js/es/types';\nimport { IndexWidget } from 'instantsearch.js/es/widgets/index/index';\n\nexport type Widget = W | IndexWidget;\n\n// TODO: use Connector type from InstantSearch. Not yet possible now,\n// since non-ts connectors can't have generics like Connector has,\n// as well as sometimes being not accurate enough / missing keys.\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport abstract class BaseWidget<TState extends Record<string, unknown> = {}>\n  implements OnInit, OnDestroy {\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: TState = {} as TState;\n  public cx: ReturnType<typeof bem>;\n  public abstract instantSearchInstance: NgAisInstantSearch;\n  public abstract parentIndex?: NgAisIndex;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  get parent() {\n    if (this.parentIndex) {\n      return this.parentIndex;\n    }\n    return this.instantSearchInstance;\n  }\n\n  public createWidget(\n    connector: Connector,\n    options: object = {},\n    additionalWidgetProperties: object = {}\n  ) {\n    this.widget = {\n      ...connector(this.updateState, noop)(options),\n      ...additionalWidgetProperties,\n    };\n  }\n\n  public ngOnInit() {\n    this.parent.addWidgets([this.widget]);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchInstance.platformId)) {\n      this.parent.removeWidgets([this.widget]);\n    }\n  }\n\n  public updateState = (\n    state: TState,\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  /**\n   * Helper to generate class names for an item\n   * @param item element to generate a class name for\n   */\n  public getItemClass(item: { isRefined?: boolean }) {\n    const className = this.cx('item');\n\n    if (item.isRefined) {\n      return `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\n\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\n\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\n\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\n\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\n\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\n\nimport { NgAisIndexModule } from './index-widget/index-widget.module';\nexport { NgAisIndexModule };\n\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\n\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\n\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\n\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\n\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\n\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\n\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\n\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\n\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\n\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\n\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\n\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\n\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\n\nimport { NgAisReverseHighlightModule } from './reverse-highlight/reverse-highlight.module';\nexport { NgAisReverseHighlightModule };\n\nimport { NgAisSnippetModule } from './snippet/snippet.module';\nexport { NgAisSnippetModule };\n\nimport { NgAisReverseSnippetModule } from './reverse-snippet/reverse-snippet.module';\nexport { NgAisReverseSnippetModule };\n\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\n\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\n\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\n\nimport { NgAisConfigureRelatedItemsModule } from './configure-related-items/configure-related-items.module';\nexport { NgAisConfigureRelatedItemsModule };\n\nimport { NgAisQueryRuleCustomDataModule } from './query-rule-custom-data/query-rule-custom-data.module';\nexport { NgAisQueryRuleCustomDataModule };\n\nimport { NgAisQueryRuleContextModule } from './query-rule-context/query-rule-context.module';\nexport { NgAisQueryRuleContextModule };\n\nimport { NgAisVoiceSearchModule } from './voice-search/voice-search.module';\nexport { NgAisVoiceSearchModule };\n\n// Server-side rendering\nexport { createSSRSearchClient } from './create-ssr-search-client';\n\n// Custom widget with BaseWidget class\nexport { BaseWidget, Widget, Connector } from './base-widget';\nexport { TypedBaseWidget } from './typed-base-widget';\n\nexport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisIndex } from './index-widget/index-widget';\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisIndexModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisReverseHighlightModule,\n  NgAisSnippetModule,\n  NgAisReverseSnippetModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n  NgAisConfigureRelatedItemsModule,\n  NgAisQueryRuleCustomDataModule,\n  NgAisQueryRuleContextModule,\n  NgAisVoiceSearchModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders<NgAisRootModule> {\n    return { ngModule: NgAisRootModule };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {NgAisBreadcrumb as ɵb} from './breadcrumb/breadcrumb';\nexport {NgAisClearRefinements as ɵc} from './clear-refinements/clear-refinements';\nexport {NgAisConfigureRelatedItems as ɵba} from './configure-related-items/configure-related-items';\nexport {NgAisConfigure as ɵz} from './configure/configure';\nexport {NgAisCurrentRefinements as ɵd} from './current-refinements/current-refinements';\nexport {NgAisHierarchicalMenu as ɵe} from './hierarchical-menu/hierarchical-menu';\nexport {NgAisHierarchicalMenuItem as ɵf} from './hierarchical-menu/hierarchical-menu-item';\nexport {NgAisHighlight as ɵi} from './highlight/highlight';\nexport {NgAisHitsPerPage as ɵg} from './hits-per-page/hits-per-page';\nexport {NgAisHits as ɵh} from './hits/hits';\nexport {NgAisInfiniteHits as ɵj} from './infinite-hits/infinite-hits';\nexport {NgAisMenu as ɵk} from './menu/menu';\nexport {NgAisNumericMenu as ɵl} from './numeric-menu/numeric-menu';\nexport {NgAisPagination as ɵm} from './pagination/pagination';\nexport {NgAisPanel as ɵa} from './panel/panel';\nexport {NgAisQueryRuleContext as ɵbc} from './query-rule-context/query-rule-context';\nexport {NgAisQueryRuleCustomData as ɵbb} from './query-rule-custom-data/query-rule-custom-data';\nexport {NgAisRangeInput as ɵy} from './range-input/range-input';\nexport {NgAisRangeSlider as ɵn} from './range-slider/range-slider';\nexport {NgAisRatingMenu as ɵs} from './rating-menu/rating-menu';\nexport {NgAisFacetsSearch as ɵp} from './refinement-list/facets-search';\nexport {NgAisRefinementList as ɵo} from './refinement-list/refinement-list';\nexport {NgAisReverseHighlight as ɵv} from './reverse-highlight/reverse-highlight';\nexport {NgAisReverseSnippet as ɵx} from './reverse-snippet/reverse-snippet';\nexport {NgAisSearchBox as ɵq} from './search-box/search-box';\nexport {NgAisSnippet as ɵw} from './snippet/snippet';\nexport {NgAisSortBy as ɵr} from './sort-by/sort-by';\nexport {NgAisStats as ɵt} from './stats/stats';\nexport {NgAisToggle as ɵu} from './toggle/toggle';\nexport {NgAisVoiceSearch as ɵbd} from './voice-search/voice-search';"],"names":["algoliasearch","AngularVersion","getPropertyByPath"],"mappings":"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"}