/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input } from '@angular/core';
import { bem } from '../utils';
export class NgAisHierarchicalMenuItem {
    constructor() {
        this.lvl = 1;
        this.cx = bem('HierarchicalMenu');
    }
    /**
     * @param {?} item
     * @return {?}
     */
    getItemClass(item) {
        /** @type {?} */
        let className = this.cx('item');
        if (item.isRefined) {
            className = `${className} ${this.cx('item', 'selected')}`;
        }
        if (this.isArray(item.data) && item.data.length > 0) {
            className = `${className} ${this.cx('item', 'parent')}`;
        }
        return className;
    }
    /**
     * @return {?}
     */
    getListClass() {
        return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx('list', `lvl${this.lvl}`)}`;
    }
    /**
     * @param {?} potentialArray
     * @return {?}
     */
    isArray(potentialArray) {
        return Array.isArray(potentialArray);
    }
    /**
     * @param {?} event
     * @param {?} item
     * @return {?}
     */
    handleClick(event, item) {
        event.preventDefault();
        event.stopPropagation();
        this.refine(item.value);
    }
}
NgAisHierarchicalMenuItem.decorators = [
    { type: Component, args: [{
                selector: 'ais-hierarchical-menu-item',
                template: `
    <li
      [class]="getItemClass(item)"
      (click)="handleClick($event, item)"
    >
      <a
        [class]="cx('link')"
        href="{{createURL(item.value)}}"
        (click)="handleClick($event, item)"
      >
        <span [class]="cx('label')">{{item.label}}</span>
        <span [class]="cx('count')">{{item.count}}</span>
      </a>

      <ul
        [class]="getListClass()"
        *ngIf="item.isRefined && isArray(item.data) && item.data.length > 0"
      >
        <ais-hierarchical-menu-item
          *ngFor="let child of item.data"
          [item]="child"
          [createURL]="createURL"
          [refine]="refine"
          [lvl]="lvl + 1"
        >
        </ais-hierarchical-menu-item>
      </ul>
    </li>
  `
            }] }
];
NgAisHierarchicalMenuItem.propDecorators = {
    lvl: [{ type: Input }],
    refine: [{ type: Input }],
    createURL: [{ type: Input }],
    item: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    NgAisHierarchicalMenuItem.prototype.lvl;
    /** @type {?} */
    NgAisHierarchicalMenuItem.prototype.refine;
    /** @type {?} */
    NgAisHierarchicalMenuItem.prototype.createURL;
    /** @type {?} */
    NgAisHierarchicalMenuItem.prototype.item;
    /** @type {?} */
    NgAisHierarchicalMenuItem.prototype.cx;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGllcmFyY2hpY2FsLW1lbnUtaXRlbS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItaW5zdGFudHNlYXJjaC8iLCJzb3VyY2VzIjpbImhpZXJhcmNoaWNhbC1tZW51L2hpZXJhcmNoaWNhbC1tZW51LWl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFzQy9CLE1BQU0sT0FBTyx5QkFBeUI7SUFoQ3RDO1FBaUNrQixRQUFHLEdBQVcsQ0FBQyxDQUFDO1FBS3pCLE9BQUUsR0FBRyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztJQWlDdEMsQ0FBQzs7Ozs7SUEvQlEsWUFBWSxDQUFDLElBQUk7O1lBQ2xCLFNBQVMsR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQztRQUUvQixJQUFJLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDbEIsU0FBUyxHQUFHLEdBQUcsU0FBUyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxFQUFFLENBQUM7U0FDM0Q7UUFFRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuRCxTQUFTLEdBQUcsR0FBRyxTQUFTLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLEVBQUUsQ0FBQztTQUN6RDtRQUVELE9BQU8sU0FBUyxDQUFDO0lBQ25CLENBQUM7Ozs7SUFFTSxZQUFZO1FBQ2pCLE9BQU8sR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQzlELE1BQU0sRUFDTixNQUFNLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FDakIsRUFBRSxDQUFDO0lBQ04sQ0FBQzs7Ozs7SUFFTSxPQUFPLENBQUMsY0FBbUI7UUFDaEMsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Ozs7OztJQUVNLFdBQVcsQ0FBQyxLQUFpQixFQUFFLElBQTBCO1FBQzlELEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixLQUFLLENBQUMsZUFBZSxFQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDMUIsQ0FBQzs7O1lBdEVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0E0QlQ7YUFDRjs7O2tCQUVFLEtBQUs7cUJBQ0wsS0FBSzt3QkFDTCxLQUFLO21CQUNMLEtBQUs7Ozs7SUFITix3Q0FBZ0M7O0lBQ2hDLDJDQUF3RDs7SUFDeEQsOENBQThEOztJQUM5RCx5Q0FBMkM7O0lBRTNDLHVDQUFvQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGJlbSB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB7XG4gIEhpZXJhcmNoaWNhbE1lbnVJdGVtLFxuICBIaWVyYXJjaGljYWxNZW51U3RhdGUsXG59IGZyb20gJy4vaGllcmFyY2hpY2FsLW1lbnUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhaXMtaGllcmFyY2hpY2FsLW1lbnUtaXRlbScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGxpXG4gICAgICBbY2xhc3NdPVwiZ2V0SXRlbUNsYXNzKGl0ZW0pXCJcbiAgICAgIChjbGljayk9XCJoYW5kbGVDbGljaygkZXZlbnQsIGl0ZW0pXCJcbiAgICA+XG4gICAgICA8YVxuICAgICAgICBbY2xhc3NdPVwiY3goJ2xpbmsnKVwiXG4gICAgICAgIGhyZWY9XCJ7e2NyZWF0ZVVSTChpdGVtLnZhbHVlKX19XCJcbiAgICAgICAgKGNsaWNrKT1cImhhbmRsZUNsaWNrKCRldmVudCwgaXRlbSlcIlxuICAgICAgPlxuICAgICAgICA8c3BhbiBbY2xhc3NdPVwiY3goJ2xhYmVsJylcIj57e2l0ZW0ubGFiZWx9fTwvc3Bhbj5cbiAgICAgICAgPHNwYW4gW2NsYXNzXT1cImN4KCdjb3VudCcpXCI+e3tpdGVtLmNvdW50fX08L3NwYW4+XG4gICAgICA8L2E+XG5cbiAgICAgIDx1bFxuICAgICAgICBbY2xhc3NdPVwiZ2V0TGlzdENsYXNzKClcIlxuICAgICAgICAqbmdJZj1cIml0ZW0uaXNSZWZpbmVkICYmIGlzQXJyYXkoaXRlbS5kYXRhKSAmJiBpdGVtLmRhdGEubGVuZ3RoID4gMFwiXG4gICAgICA+XG4gICAgICAgIDxhaXMtaGllcmFyY2hpY2FsLW1lbnUtaXRlbVxuICAgICAgICAgICpuZ0Zvcj1cImxldCBjaGlsZCBvZiBpdGVtLmRhdGFcIlxuICAgICAgICAgIFtpdGVtXT1cImNoaWxkXCJcbiAgICAgICAgICBbY3JlYXRlVVJMXT1cImNyZWF0ZVVSTFwiXG4gICAgICAgICAgW3JlZmluZV09XCJyZWZpbmVcIlxuICAgICAgICAgIFtsdmxdPVwibHZsICsgMVwiXG4gICAgICAgID5cbiAgICAgICAgPC9haXMtaGllcmFyY2hpY2FsLW1lbnUtaXRlbT5cbiAgICAgIDwvdWw+XG4gICAgPC9saT5cbiAgYCxcbn0pXG5leHBvcnQgY2xhc3MgTmdBaXNIaWVyYXJjaGljYWxNZW51SXRlbSB7XG4gIEBJbnB1dCgpIHB1YmxpYyBsdmw6IG51bWJlciA9IDE7XG4gIEBJbnB1dCgpIHB1YmxpYyByZWZpbmU6IEhpZXJhcmNoaWNhbE1lbnVTdGF0ZVsncmVmaW5lJ107XG4gIEBJbnB1dCgpIHB1YmxpYyBjcmVhdGVVUkw6IEhpZXJhcmNoaWNhbE1lbnVTdGF0ZVsnY3JlYXRlVVJMJ107XG4gIEBJbnB1dCgpIHB1YmxpYyBpdGVtOiBIaWVyYXJjaGljYWxNZW51SXRlbTtcblxuICBwdWJsaWMgY3ggPSBiZW0oJ0hpZXJhcmNoaWNhbE1lbnUnKTtcblxuICBwdWJsaWMgZ2V0SXRlbUNsYXNzKGl0ZW0pOiBzdHJpbmcge1xuICAgIGxldCBjbGFzc05hbWUgPSB0aGlzLmN4KCdpdGVtJyk7XG5cbiAgICBpZiAoaXRlbS5pc1JlZmluZWQpIHtcbiAgICAgIGNsYXNzTmFtZSA9IGAke2NsYXNzTmFtZX0gJHt0aGlzLmN4KCdpdGVtJywgJ3NlbGVjdGVkJyl9YDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc0FycmF5KGl0ZW0uZGF0YSkgJiYgaXRlbS5kYXRhLmxlbmd0aCA+IDApIHtcbiAgICAgIGNsYXNzTmFtZSA9IGAke2NsYXNzTmFtZX0gJHt0aGlzLmN4KCdpdGVtJywgJ3BhcmVudCcpfWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNsYXNzTmFtZTtcbiAgfVxuXG4gIHB1YmxpYyBnZXRMaXN0Q2xhc3MoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7dGhpcy5jeCgnbGlzdCcpfSAke3RoaXMuY3goJ2xpc3QnLCAnY2hpbGQnKX0gJHt0aGlzLmN4KFxuICAgICAgJ2xpc3QnLFxuICAgICAgYGx2bCR7dGhpcy5sdmx9YFxuICAgICl9YDtcbiAgfVxuXG4gIHB1YmxpYyBpc0FycmF5KHBvdGVudGlhbEFycmF5OiBhbnkpOiBib29sZWFuIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShwb3RlbnRpYWxBcnJheSk7XG4gIH1cblxuICBwdWJsaWMgaGFuZGxlQ2xpY2soZXZlbnQ6IE1vdXNlRXZlbnQsIGl0ZW06IEhpZXJhcmNoaWNhbE1lbnVJdGVtKTogdm9pZCB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIHRoaXMucmVmaW5lKGl0ZW0udmFsdWUpO1xuICB9XG59XG4iXX0=