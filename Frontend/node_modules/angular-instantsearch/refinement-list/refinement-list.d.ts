import { BaseWidget } from '../base-widget';
import { FacetSortByStringOptions } from '../instantsearch/instantsearch';
export declare type RefinementListItem = {
    value: string;
    label: string;
    count: number;
    isRefined: boolean;
};
export declare type RefinementListState = {
    canRefine: boolean;
    canToggleShowMore: boolean;
    createURL: Function;
    isShowingMore: boolean;
    items: RefinementListItem[];
    refine: Function;
    toggleShowMore: Function;
    searchForItems: Function;
    isFormSearch: boolean;
};
export declare class NgAisRefinementList extends BaseWidget {
    instantSearchParent: any;
    showMoreLabel: string;
    showLessLabel: string;
    searchable?: boolean;
    searchPlaceholder: string;
    attribute: string;
    operator: 'or' | 'and';
    limit: number;
    showMore: boolean;
    showMoreLimit: number;
    sortBy: FacetSortByStringOptions[] | ((a: RefinementListItem, b: RefinementListItem) => number);
    transformItems?: <U extends RefinementListItem>(items: RefinementListItem[]) => U[];
    state: RefinementListState;
    readonly isHidden: boolean;
    constructor(instantSearchParent: any);
    ngOnInit(): void;
    refine(event: MouseEvent, item: {
        isRefined: boolean;
        value: string;
    }): void;
}
