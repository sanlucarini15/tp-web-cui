/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, Inject, forwardRef } from '@angular/core';
import { connectQueryRules } from 'instantsearch.js/es/connectors';
import { BaseWidget } from '../base-widget';
import { NgAisInstantSearch } from '../instantsearch/instantsearch';
var NgAisQueryRuleContext = /** @class */ (function (_super) {
    tslib_1.__extends(NgAisQueryRuleContext, _super);
    function NgAisQueryRuleContext(instantSearchParent) {
        var _this = _super.call(this, 'QueryRuleContext') || this;
        _this.instantSearchParent = instantSearchParent;
        return _this;
    }
    /**
     * @return {?}
     */
    NgAisQueryRuleContext.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.createWidget(connectQueryRules, {
            trackedFilters: this.trackedFilters,
            transformRuleContexts: this.transformRuleContexts,
        });
        _super.prototype.ngOnInit.call(this);
    };
    NgAisQueryRuleContext.decorators = [
        { type: Component, args: [{
                    selector: 'ais-query-rule-context',
                    template: ''
                }] }
    ];
    /** @nocollapse */
    NgAisQueryRuleContext.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [forwardRef((/**
                         * @return {?}
                         */
                        function () { return NgAisInstantSearch; })),] }] }
    ]; };
    NgAisQueryRuleContext.propDecorators = {
        trackedFilters: [{ type: Input }],
        transformRuleContexts: [{ type: Input }]
    };
    return NgAisQueryRuleContext;
}(BaseWidget));
export { NgAisQueryRuleContext };
if (false) {
    /** @type {?} */
    NgAisQueryRuleContext.prototype.trackedFilters;
    /** @type {?} */
    NgAisQueryRuleContext.prototype.transformRuleContexts;
    /** @type {?} */
    NgAisQueryRuleContext.prototype.instantSearchParent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnktcnVsZS1jb250ZXh0LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1pbnN0YW50c2VhcmNoLyIsInNvdXJjZXMiOlsicXVlcnktcnVsZS1jb250ZXh0L3F1ZXJ5LXJ1bGUtY29udGV4dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFckUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDbkUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBSXBFO0lBSTJDLGlEQUFVO0lBT25ELCtCQUVTLG1CQUF3QjtRQUZqQyxZQUlFLGtCQUFNLGtCQUFrQixDQUFDLFNBQzFCO1FBSFEseUJBQW1CLEdBQW5CLG1CQUFtQixDQUFLOztJQUdqQyxDQUFDOzs7O0lBRU0sd0NBQVE7OztJQUFmO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsRUFBRTtZQUNuQyxjQUFjLEVBQUUsSUFBSSxDQUFDLGNBQWM7WUFDbkMscUJBQXFCLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtTQUNsRCxDQUFDLENBQUM7UUFFSCxpQkFBTSxRQUFRLFdBQUUsQ0FBQztJQUNuQixDQUFDOztnQkF6QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFFBQVEsRUFBRSxFQUFFO2lCQUNiOzs7O2dEQVNJLE1BQU0sU0FBQyxVQUFVOzs7d0JBQUMsY0FBTSxPQUFBLGtCQUFrQixFQUFsQixDQUFrQixFQUFDOzs7aUNBUDdDLEtBQUs7d0NBSUwsS0FBSzs7SUFpQlIsNEJBQUM7Q0FBQSxBQTFCRCxDQUkyQyxVQUFVLEdBc0JwRDtTQXRCWSxxQkFBcUI7OztJQUNoQywrQ0FHRTs7SUFDRixzREFBc0U7O0lBR3BFLG9EQUMrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEluamVjdCwgZm9yd2FyZFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBjb25uZWN0UXVlcnlSdWxlcyB9IGZyb20gJ2luc3RhbnRzZWFyY2guanMvZXMvY29ubmVjdG9ycyc7XG5pbXBvcnQgeyBCYXNlV2lkZ2V0IH0gZnJvbSAnLi4vYmFzZS13aWRnZXQnO1xuaW1wb3J0IHsgTmdBaXNJbnN0YW50U2VhcmNoIH0gZnJvbSAnLi4vaW5zdGFudHNlYXJjaC9pbnN0YW50c2VhcmNoJztcblxudHlwZSBGYWNldFZhbHVlID0gc3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYWlzLXF1ZXJ5LXJ1bGUtY29udGV4dCcsXG4gIHRlbXBsYXRlOiAnJyxcbn0pXG5leHBvcnQgY2xhc3MgTmdBaXNRdWVyeVJ1bGVDb250ZXh0IGV4dGVuZHMgQmFzZVdpZGdldCB7XG4gIEBJbnB1dCgpXG4gIHB1YmxpYyB0cmFja2VkRmlsdGVyczoge1xuICAgIFtmYWNldE5hbWU6IHN0cmluZ106IChmYWNldFZhbHVlczogRmFjZXRWYWx1ZVtdKSA9PiBGYWNldFZhbHVlW107XG4gIH07XG4gIEBJbnB1dCgpIHB1YmxpYyB0cmFuc2Zvcm1SdWxlQ29udGV4dHM/OiAoaXRlbXM6IHN0cmluZ1tdKSA9PiBzdHJpbmdbXTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KGZvcndhcmRSZWYoKCkgPT4gTmdBaXNJbnN0YW50U2VhcmNoKSlcbiAgICBwdWJsaWMgaW5zdGFudFNlYXJjaFBhcmVudDogYW55XG4gICkge1xuICAgIHN1cGVyKCdRdWVyeVJ1bGVDb250ZXh0Jyk7XG4gIH1cblxuICBwdWJsaWMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5jcmVhdGVXaWRnZXQoY29ubmVjdFF1ZXJ5UnVsZXMsIHtcbiAgICAgIHRyYWNrZWRGaWx0ZXJzOiB0aGlzLnRyYWNrZWRGaWx0ZXJzLFxuICAgICAgdHJhbnNmb3JtUnVsZUNvbnRleHRzOiB0aGlzLnRyYW5zZm9ybVJ1bGVDb250ZXh0cyxcbiAgICB9KTtcblxuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gIH1cbn1cbiJdfQ==