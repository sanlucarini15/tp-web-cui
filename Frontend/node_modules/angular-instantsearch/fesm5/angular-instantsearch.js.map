{"version":3,"file":"angular-instantsearch.js.map","sources":["ng://angular-instantsearch/utils.ts","ng://angular-instantsearch/base-widget.ts","ng://angular-instantsearch/version.ts","ng://angular-instantsearch/instantsearch/instantsearch.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.module.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.module.ts","ng://angular-instantsearch/current-refinements/current-refinements.ts","ng://angular-instantsearch/current-refinements/current-refinements.module.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu-item.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.module.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.module.ts","ng://angular-instantsearch/highlight/highlight.ts","ng://angular-instantsearch/highlight/highlight.module.ts","ng://angular-instantsearch/hits/hits.ts","ng://angular-instantsearch/hits/hits.module.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.module.ts","ng://angular-instantsearch/instantsearch/instantsearch.module.ts","ng://angular-instantsearch/menu/menu.ts","ng://angular-instantsearch/menu/menu.module.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.module.ts","ng://angular-instantsearch/pagination/pagination.ts","ng://angular-instantsearch/pagination/pagination.module.ts","ng://angular-instantsearch/range-slider/range-slider.ts","ng://angular-instantsearch/range-slider/range-slider.module.ts","ng://angular-instantsearch/refinement-list/refinement-list.ts","ng://angular-instantsearch/refinement-list/facets-search.ts","ng://angular-instantsearch/refinement-list/refinement-list.module.ts","ng://angular-instantsearch/search-box/search-box.ts","ng://angular-instantsearch/search-box/search-box.module.ts","ng://angular-instantsearch/sort-by/sort-by.ts","ng://angular-instantsearch/sort-by/sort-by.module.ts","ng://angular-instantsearch/rating-menu/rating-menu.ts","ng://angular-instantsearch/rating-menu/rating-menu.module.ts","ng://angular-instantsearch/stats/stats.ts","ng://angular-instantsearch/stats/stats.module.ts","ng://angular-instantsearch/toggle/toggle.ts","ng://angular-instantsearch/toggle/toggle.module.ts","ng://angular-instantsearch/range-input/range-input.ts","ng://angular-instantsearch/range-input/range-input.module.ts","ng://angular-instantsearch/panel/panel.ts","ng://angular-instantsearch/panel/panel.module.ts","ng://angular-instantsearch/configure/configure.ts","ng://angular-instantsearch/configure/configure.module.ts","ng://angular-instantsearch/query-rule-custom-data/query-rule-custom-data.ts","ng://angular-instantsearch/query-rule-custom-data/query-rule-custom-data.module.ts","ng://angular-instantsearch/query-rule-context/query-rule-context.ts","ng://angular-instantsearch/query-rule-context/query-rule-context.module.ts","ng://angular-instantsearch/voice-search/voice-search.ts","ng://angular-instantsearch/voice-search/voice-search.module.ts","ng://angular-instantsearch/create-ssr-search-client.ts","ng://angular-instantsearch/parse-server-request.ts","ng://angular-instantsearch/index.ts"],"sourcesContent":["export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    let cssClass = `ais-${widgetName}`;\n    if (element) {\n      cssClass += `-${element}`;\n    }\n    if (subElement) {\n      cssClass += `--${subElement}`;\n    }\n    return cssClass;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\n\nexport class Widget {\n  public init: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: object[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public getConfiguration?: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  public instantSearchParent: any;\n\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: object = {};\n  public cx: Function;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    // add widget to the InstantSearch Instance\n    this.instantSearchParent.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchParent.platformId)) {\n      this.instantSearchParent.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  // helper method for genering item list className\n  public getItemClass(item: { isRefined?: boolean }) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = '3.0.0-beta.5';\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  VERSION as AngularVersion,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\nimport instantsearch from 'instantsearch.js/es';\nimport { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nimport { Widget } from '../base-widget';\nimport { VERSION } from '../version';\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type SearchRequest = {\n  indexName: string;\n  params: SearchRequestParameters;\n};\n\nexport type SearchForFacetValuesRequest = {\n  indexName: string;\n  params: SearchForFacetValuesRequestParameters;\n};\n\n// Documentation: https://www.algolia.com/doc/api-reference/search-api-parameters/\nexport type SearchParameters = {\n  // Attributes\n  attributesToRetrieve?: string[];\n  restrictSearchableAttributes?: string[];\n\n  // Filtering\n  filters?: string;\n  facetFilters?: string[];\n  optionalFilters?: string[];\n  numericFilters?: string[];\n  sumOrFiltersScores?: boolean;\n\n  // Faceting\n  facets?: string[];\n  maxValuesPerFacet?: number;\n  facetingAfterDistinct?: boolean;\n  sortFacetValuesBy?: string;\n\n  // Highlighting / Snippeting\n  attributesToHighlight?: string[];\n  attributesToSnippet?: string[];\n  highlightPreTag?: string;\n  highlightPostTag?: string;\n  snippetEllipsisText?: string;\n  restrictHighlightAndSnippetArrays?: boolean;\n\n  // Pagination\n  page?: number;\n  hitsPerPage?: number;\n  offset?: number;\n  length?: number;\n\n  // Typos\n  minWordSizefor1Typo?: number;\n  minWordSizefor2Typos?: number;\n  typoTolerance?: string | boolean;\n  allowTyposOnNumericTokens?: boolean;\n  ignorePlurals?: boolean | string[];\n  disableTypoToleranceOnAttributes?: string[];\n\n  // Geo-Search\n  aroundLatLng?: string;\n  aroundLatLngViaIP?: boolean;\n  aroundRadius?: number | 'all';\n  aroundPrecision?: number;\n  minimumAroundRadius?: number;\n  insideBoundingBox?: GeoRectangle | GeoRectangle[];\n  insidePolygon?: GeoPolygon | GeoPolygon[];\n\n  // Query Strategy\n  queryType?: string;\n  removeWordsIfNoResults?: string;\n  advancedSyntax?: boolean;\n  optionalWords?: string | string[];\n  removeStopWords?: boolean | string[];\n  disableExactOnAttributes?: string[];\n  exactOnSingleWordQuery?: string;\n  alternativesAsExact?: string[];\n\n  // Query Rules\n  enableRules?: boolean;\n  ruleContexts?: string[];\n\n  // Advanced\n  minProximity?: number;\n  responseFields?: string[];\n  maxFacetHits?: number;\n  percentileComputation?: boolean;\n  distinct?: number | boolean;\n  getRankingInfo?: boolean;\n  clickAnalytics?: boolean;\n  analytics?: boolean;\n  analyticsTags?: string[];\n  synonyms?: boolean;\n  replaceSynonymsInHighlight?: boolean;\n};\n\nexport interface SearchRequestParameters extends SearchParameters {\n  query: string;\n}\n\nexport interface SearchForFacetValuesRequestParameters\n  extends SearchParameters {\n  facetQuery: string;\n  facetName: string;\n}\n\nexport type GeoRectangle = [number, number, number, number];\nexport type GeoPolygon = [number, number, number, number, number, number];\n\nexport type FacetSortByStringOptions =\n  | 'count'\n  | 'count:asc'\n  | 'count:desc'\n  | 'name'\n  | 'name:asc'\n  | 'name:desc'\n  | 'isRefined';\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-multiple-indexes\nexport type SearchResponse = {\n  hits: Hit[];\n  page?: number;\n  nbHits?: number;\n  nbPages?: number;\n  hitsPerPage?: number;\n  processingTimeMS?: number;\n  query?: string;\n  params?: string;\n  index?: string;\n};\n\ntype HitAttributeHighlightResult = {\n  value: string;\n  matchLevel: 'none' | 'partial' | 'full';\n  matchedWords: string[];\n  fullyHighlighted?: boolean;\n};\n\ntype HitHighlightResult = {\n  [attribute: string]:\n    | HitAttributeHighlightResult\n    | HitAttributeHighlightResult[]\n    | HitHighlightResult;\n};\n\ntype HitAttributeSnippetResult = Pick<\n  HitAttributeHighlightResult,\n  'value' | 'matchLevel'\n>;\n\ntype HitSnippetResult = {\n  [attribute: string]:\n    | HitAttributeSnippetResult\n    | HitAttributeSnippetResult[]\n    | HitSnippetResult;\n};\n\nexport type Hit = {\n  [attribute: string]: any;\n  objectID: string;\n  _highlightResult?: HitHighlightResult;\n  _snippetResult?: HitSnippetResult;\n  _rankingInfo?: {\n    promoted: boolean;\n    nbTypos: number;\n    firstMatchedWord: number;\n    proximityDistance?: number;\n    geoDistance: number;\n    geoPrecision?: number;\n    nbExactWords: number;\n    words: number;\n    filters: number;\n    userScore: number;\n    matchedGeoLocation?: {\n      lat: number;\n      lng: number;\n      distance: number;\n    };\n  };\n  _distinctSeqID?: number;\n  __position: number;\n  __queryID?: string;\n};\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-for-facet-values\nexport type SearchForFacetValuesResponse = {\n  value: string;\n  highlighted?: string;\n  count?: number;\n};\n\nexport type SearchClient = {\n  addAlgoliaAgent?: (agent: string) => void;\n  search: (requests: SearchRequest[]) => Promise<{ results: SearchResponse[] }>;\n  searchForFacetValues?: (\n    requests: SearchForFacetValuesRequest[]\n  ) => Promise<{ facetHits: SearchForFacetValuesResponse[] }[]>;\n};\n\nexport type InstantSearchConfig = {\n  searchClient: SearchClient;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n  searchParameters?: SearchParameters | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n  routing?:\n    | boolean\n    | {\n        router?: {\n          onUpdate: (cb: (object) => void) => void;\n          read: () => object;\n          write: (routeState: object) => void;\n          createURL: (routeState: object) => string;\n          dispose: () => void;\n        };\n        stateMapping?: {\n          stateToRoute(object): object;\n          routeToState(object): object;\n        };\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public refresh: () => void;\n  public dispose: () => void;\n}\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener('render', this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: '__ais-highlight__',\n      highlightPostTag: '__/ais-highlight__',\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      if (typeof config.urlSync !== 'undefined') delete config.urlSync;\n      if (typeof config.routing !== 'undefined') delete config.routing;\n    }\n\n    if (typeof config.searchClient.addAlgoliaAgent === 'function') {\n      config.searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n      config.searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type BreadcrumbState = {\n  createURL: (value: string) => string;\n  items: BreadcrumbItem[];\n  refine: (value: string) => void;\n};\n\nexport type BreadcrumbItem = {\n  name: string;\n  value: string;\n};\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [ngClass]=\"[cx('item'), item.isLast ? cx('item', 'selected') : '']\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.label}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.label}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends BaseWidget {\n  // instance options\n  @Input() public attributes: string[];\n  @Input() public rootPath?: string;\n  @Input() public separator?: string;\n  @Input()\n  public transformItems?: <U extends BreadcrumbItem>(\n    items: BreadcrumbItem[]\n  ) => U[];\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n      // FIXME: get rid of this. We can use `last` local variable\n      // https://angular.io/api/common/NgForOf#local-variables\n    }));\n  }\n\n  public state: BreadcrumbState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, item: BreadcrumbItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\ntype ClearRefinementsState = {\n  hasRefinements: boolean;\n  refine: () => void;\n  createURL: () => string;\n};\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{resetLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends BaseWidget {\n  // rendering options\n  @Input() public resetLabel: string = 'Clear refinements';\n\n  // instance options\n  @Input() public includedAttributes: string[];\n  @Input() public excludedAttributes: string[];\n  @Input() public transformItems?: (items: string[]) => string[];\n\n  public state: ClearRefinementsState = {\n    hasRefinements: false,\n    refine: noop,\n    createURL: () => '#',\n  };\n\n  get isHidden(): boolean {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectClearRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type CurrentRefinementsItem = {\n  attribute: string;\n  label: string;\n  refine: Function;\n  refinements: {\n    type: string;\n    // TODO: create multiple types for each of the available refinement\n    // https://github.com/algolia/angular-instantsearch/pull/463#discussion_r255911232\n    attribute: string;\n    label: string;\n    value: string;\n    operator?: string;\n    exhaustive?: boolean;\n    count?: number;\n  }[];\n};\n\nexport type CurrentRefinementsState = {\n  createURL: Function;\n  refine: Function;\n  items: CurrentRefinementsItem[];\n};\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let item of state.items\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{item.label | titlecase}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let refinement of item.refinements\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{refinement.label}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, refinement)\">â</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // instance options\n  @Input() public includedAttributes?: string[];\n  @Input() public excludedAttributes?: string[];\n  @Input()\n  public transformItems?: <U extends CurrentRefinementsItem>(\n    items: CurrentRefinementsItem[]\n  ) => U[];\n\n  public state: CurrentRefinementsState = {\n    createURL: noop,\n    refine: noop,\n    items: [],\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type HierarchicalMenuState = {\n  createURL: (value: string) => string;\n  items: HierarchicalMenuItem[];\n  refine: (value: string) => void;\n};\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[] | null;\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of state.items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends BaseWidget {\n  @Input() public attributes: string[];\n  @Input() public separator?: string;\n  @Input() public rootPath?: string;\n  @Input() public showParentLevel?: boolean;\n  @Input() public limit?: number | string;\n  @Input()\n  public sortBy?:\n    | FacetSortByStringOptions[]\n    | ((a: HierarchicalMenuItem, b: HierarchicalMenuItem) => number);\n\n  @Input()\n  public transformItems?: <U extends HierarchicalMenuItem>(\n    items: HierarchicalMenuItem[]\n  ) => U[];\n\n  public state: HierarchicalMenuState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\nimport {\n  HierarchicalMenuItem,\n  HierarchicalMenuState,\n} from './hierarchical-menu';\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass()\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: HierarchicalMenuState['refine'];\n  @Input() public createURL: HierarchicalMenuState['createURL'];\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item): string {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(): string {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any): boolean {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type HitsPerPageState = {\n  items: HitsPerPageRenderingItem[];\n  refine: (value: number) => void;\n};\n\nexport type HitsPerPageInstanceItem = {\n  value: number;\n  label: string;\n  default?: boolean;\n};\n\nexport type HitsPerPageRenderingItem = {\n  value: number;\n  label: string;\n  isRefined: boolean;\n};\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends BaseWidget {\n  @Input() public items: HitsPerPageInstanceItem[];\n  @Input()\n  public transformItems?: <U extends HitsPerPageRenderingItem>(\n    items: HitsPerPageRenderingItem[]\n  ) => U[];\n\n  public state: HitsPerPageState = {\n    items: [],\n    refine: noop,\n    // TODO: add hasNoResults and disable <select> when true\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","const get = require('lodash/get');\nimport { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-highlight',\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = 'em';\n\n  cx = bem('Highlight');\n\n  get content() {\n    if (this.attribute === 'highlighted') {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty('_highlightResult')) {\n      const attributeHighlighted = get(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === 'string'\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = get(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return '';\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp('<em>', 'g'),\n        `<${this.tagName} class=\"${this.cx('highlighted')}\">`\n      )\n      .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch, Hit } from '../instantsearch/instantsearch';\n\nexport type HitsState = {\n  hits: Hit[];\n  results: {};\n};\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: TemplateRef<any>;\n\n  @Input() public escapeHTML?: boolean;\n  @Input() public transformItems?: <U extends Hit>(items: Hit[]) => U[];\n\n  public state: HitsState = {\n    hits: [],\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Hits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch, Hit } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type InfiniteHitsState = {\n  hits: Hit[];\n  results: any;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  showMore: Function;\n  showPrevious: Function;\n};\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <button\n        [ngClass]=\"[cx('loadPrevious'), this.state.isFirstPage ? cx('loadPrevious', 'disabled') : '']\"\n        (click)=\"showPreviousHandler($event)\"\n        [disabled]=\"state.isFirstPage\"\n        *ngIf=\"showPrevious && !template\"\n      >\n        {{showPreviousLabel}}\n      </button>\n\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [ngClass]=\"[cx('loadMore'), this.state.isLastPage ? cx('loadMore', 'disabled') : '']\"\n        (click)=\"showMoreHandler($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: any;\n\n  // rendering options\n  @Input() public escapeHTML: boolean;\n  @Input() public showPrevious: boolean = false;\n  @Input() public showPreviousLabel: string = 'Show previous results';\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input() public transformItems?: <U extends Hit>(items: Hit[]) => U[];\n\n  // inner widget state returned from connector\n  public state: InfiniteHitsState = {\n    hits: [],\n    isFirstPage: false,\n    isLastPage: false,\n    showMore: noop,\n    showPrevious: noop,\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('InfiniteHits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectInfiniteHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public showMoreHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  public showPreviousHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showPrevious();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type MenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n};\n\nexport type MenuState = {\n  items: MenuItem[];\n  refine: Function;\n  createURL: Function;\n  isShowingMore: boolean;\n  canToggleShowMore: boolean;\n  toggleShowMore: Function;\n};\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends BaseWidget {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public showMore?: boolean;\n  @Input() public limit?: number;\n  @Input() public showMoreLimit?: number;\n  @Input()\n  public sortBy?:\n    | FacetSortByStringOptions[]\n    | ((a: MenuItem, b: MenuItem) => number);\n  @Input()\n  public transformItems?: <U extends MenuItem>(items: MenuItem[]) => U[];\n\n  public state: MenuState = {\n    items: [],\n    refine: noop,\n    createURL: noop,\n    isShowingMore: false,\n    canToggleShowMore: false,\n    toggleShowMore: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      attribute: this.attribute,\n      showMore: this.showMore,\n      limit: this.limit,\n      showMoreLimit: this.showMoreLimit,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericMenuItem = {\n  label: string;\n  value: string;\n  isRefined: boolean;\n};\n\nexport type NumericMenuState = {\n  createURL: Function;\n  items: NumericMenuItem[];\n  refine: Function;\n  hasNoResults?: boolean;\n};\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n              (change)=\"refine($event, item)\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends BaseWidget {\n  @Input() public attribute: string;\n  @Input() public items: { label: string; start?: number; end?: number }[];\n  @Input()\n  public transformItems?: <U extends NumericMenuItem>(\n    items: NumericMenuItem[]\n  ) => U[];\n\n  public state: NumericMenuState = {\n    items: [],\n    refine: noop,\n    createURL: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericMenu, {\n      attribute: this.attribute,\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","const range = require('lodash/range');\nimport { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [ngClass]=\"[cx(), state.nbPages <= 1 ? cx('', 'noRefinement') : '']\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            â¹â¹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            â¹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            âº\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            âºâº\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends BaseWidget {\n  // rendering options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = true;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n  @Input() public padding: number | string = 3;\n\n  // instance options\n  @Input() public totalPages?: number | string;\n\n  public state = {\n    createURL: noop,\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === 'string'\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));\n      }\n\n      if (maxDelta > nbPages) {\n        return range(\n          currentRefinement - pagesPadding - (maxDelta - nbPages),\n          nbPages\n        );\n      }\n\n      return range(\n        currentRefinement - pagesPadding,\n        currentRefinement + pagesPadding + 1\n      );\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      maxPages: parseNumberInput(this.totalPages),\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import { Component, Input, ViewChild, Inject, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RangeSliderState = {\n  range: { min: number; max: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends BaseWidget {\n  @ViewChild('sliderContainer') public sliderContainer: any;\n\n  // rendering options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public min?: number;\n  @Input() public max?: number;\n  @Input() public precision?: number;\n\n  public state: RangeSliderState = {\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    this.slider.updateOptions({ disabled, range, start });\n  };\n\n  public handleChange = (values: string[] | number[]) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { noop, parseNumberInput } from '../utils';\n\nexport type RefinementListItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n};\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: RefinementListItem[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('showMore')\"\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends BaseWidget {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public operator: 'or' | 'and';\n  @Input() public limit: number;\n  @Input() public showMore: boolean;\n  @Input() public showMoreLimit: number;\n  @Input()\n  public sortBy:\n    | FacetSortByStringOptions[]\n    | ((a: RefinementListItem, b: RefinementListItem) => number);\n  @Input()\n  public transformItems?: <U extends RefinementListItem>(\n    items: RefinementListItem[]\n  ) => U[];\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RefinementList');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      showMore: this.showMore,\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attribute: this.attribute,\n      operator: this.operator,\n      sortBy: this.sortBy,\n      escapeFacetValues: true,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n} from '@angular/core';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox extends BaseWidget implements AfterViewInit {\n  @ViewChild('searchBox') searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state = {\n    query: '',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SearchBox');\n    this.createWidget(connectSearchBox);\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.searchBox.nativeElement.value);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type SortByItem = {\n  value: string;\n  label: string;\n};\n\nexport type SortByState = {\n  currentRefinement: string | null;\n  options: SortByItem[];\n  refine: Function;\n  // TODO: add hasNoResults: boolean;\n};\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends BaseWidget {\n  @Input() public items: SortByItem[];\n  @Input()\n  public transformItems?: <U extends SortByItem>(items: SortByItem[]) => U[];\n\n  public state: SortByState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n    // TODO: Add hasNoResults: null,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBy, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop, parseNumberInput } from '../utils';\n\nexport type RatingMenuItem = {\n  count: number;\n  isRefined: boolean;\n  name: string;\n  value: string;\n  stars: boolean[];\n};\n\nexport type RatingMenuState = {\n  createURL: Function;\n  hasNoResults: boolean;\n  items: RatingMenuItem[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [ngClass]=\"[\n        cx(),\n        state.items.length === 0 ? cx('', 'noRefinement') : ''\n      ]\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon') + ' ' + (star ? cx('starIcon', 'full') : cx('starIcon', 'empty'))\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends BaseWidget {\n  // rendering options\n  @Input() public andUpLabel: string = '& Up';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public max?: number;\n\n  public state: RatingMenuState = {\n    createURL: noop,\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRatingMenu, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Stats');\n    this.createWidget(connectStats);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ToggleState = {\n  createURL: Function;\n  refine: Function;\n  value: {\n    name?: string;\n    count?: number;\n    isRefined?: boolean;\n    onFacetValue?: {\n      isRefined: boolean;\n      count: number;\n    };\n    offFacetValue?: {\n      isRefined: boolean;\n      count: number;\n    };\n  };\n};\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]=\"cx()\">\n      <label [class]=\"cx('label')\">\n        <input\n          [class]=\"cx('checkbox')\"\n          type=\"checkbox\"\n          value=\"{{state.value.name}}\"\n          [checked]=\"state.value.isRefined\"\n          (change)=\"handleChange($event)\"\n        />\n\n        <span [class]=\"cx('labelText')\">\n          {{label || state.value.name}}\n        </span>\n\n        <span [class]=\"cx('count')\">{{state.value.count}}</span>\n      </label>\n    </div>\n  `,\n})\nexport class NgAisToggle extends BaseWidget {\n  // rendering options\n  @Input() public label: string;\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public on?: boolean | number | string;\n  @Input() public off?: boolean | number | string;\n\n  public state: ToggleState = {\n    createURL: noop,\n    refine: noop,\n    value: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggleRefinement, {\n      attribute: this.attribute,\n      on: this.on,\n      off: this.off,\n    });\n    super.ngOnInit();\n  }\n\n  public handleChange(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type NumericRangeState = {\n  start: number[];\n  range: { min?: number; max?: number };\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [ngClass]=\"[\n        cx(), \n        !canRefine ? cx('', 'noRefinement') : ''\n      ]\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'min')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'max')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends BaseWidget {\n  // rendering options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public min?: number;\n  @Input() public max?: number;\n  @Input() public precision?: number = 0;\n\n  // inner state\n  public minInputValue?: number | string = '';\n  public maxInputValue?: number | string = '';\n\n  get step() {\n    const precision = parseNumberInput(this.precision);\n    return 1 / Math.pow(10, precision);\n  }\n\n  get canRefine() {\n    return this.state.range.min !== this.state.range.max;\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  SearchParameters,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ConfigureState = {\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends BaseWidget {\n  // instance options\n  private internalSearchParameters: SearchParameters;\n\n  private differ: KeyValueDiffer<string, any>; // SearchParameters (I don't know how to get the values of the type)\n\n  public state: ConfigureState = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: SearchParameters) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.internalSearchParameters,\n    });\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Input,\n} from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-query-rule-custom-data',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <div *ngIf=\"!template\">\n        <div *ngFor=\"let item of state.items\">\n          <pre>{{ item | json }}</pre>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisQueryRuleCustomData extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  @Input() public transformItems?: (items: any[]) => any[];\n\n  public state = {\n    items: [],\n  };\n\n  get templateContext() {\n    return {\n      items: this.state.items,\n    };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('QueryRuleCustomData');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleCustomData } from './query-rule-custom-data';\n\n@NgModule({\n  declarations: [NgAisQueryRuleCustomData],\n  entryComponents: [NgAisQueryRuleCustomData],\n  exports: [NgAisQueryRuleCustomData],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleCustomDataModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\ntype FacetValue = string | number | boolean;\n\n@Component({\n  selector: 'ais-query-rule-context',\n  template: '',\n})\nexport class NgAisQueryRuleContext extends BaseWidget {\n  @Input()\n  public trackedFilters: {\n    [facetName: string]: (facetValues: FacetValue[]) => FacetValue[];\n  };\n  @Input() public transformRuleContexts?: (items: string[]) => string[];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('QueryRuleContext');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      trackedFilters: this.trackedFilters,\n      transformRuleContexts: this.transformRuleContexts,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleContext } from './query-rule-context';\n\n@NgModule({\n  declarations: [NgAisQueryRuleContext],\n  entryComponents: [NgAisQueryRuleContext],\n  exports: [NgAisQueryRuleContext],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleContextModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  NgZone,\n  ContentChild,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n} from '@angular/core';\n\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\ntype Status =\n  | 'initial'\n  | 'askingPermission'\n  | 'waiting'\n  | 'recognizing'\n  | 'finished'\n  | 'error';\n\ntype ErrorCode =\n  | 'no-speech'\n  | 'aborted'\n  | 'audio-capture'\n  | 'network'\n  | 'not-allowed'\n  | 'service-not-allowed'\n  | 'bad-grammar'\n  | 'language-not-supported';\n\ntype TemplateContext = {\n  status: Status;\n  transcript: string;\n  isSpeechFinal: boolean;\n  errorCode?: ErrorCode;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n};\n\ntype VoiceListeningState = {\n  status: Status;\n  transcript: string;\n  isSpeechFinal: boolean;\n  errorCode?: ErrorCode;\n};\n\ntype State = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templateContext: TemplateContext;\n};\n\n@Component({\n  selector: 'ais-voice-search',\n  template: `\n    <div [class]=\"cx()\">\n      <button\n        type=\"button\"\n        [class]=\"cx('button')\"\n        [title]=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        [disabled]=\"!state.isBrowserSupported\"\n        (click)=\"handleClick($event)\"\n      >\n        <ng-container *ngTemplateOutlet=\"button ? button : defaultButton; context: state.templateContext\"></ng-container>\n      </button>\n      <div [class]=\"cx('status')\">\n        <ng-container *ngTemplateOutlet=\"status ? status : defaultStatus; context: state.templateContext\"></ng-container>\n      </div>\n    </div>\n\n    <ng-template #defaultButton let-status=\"status\" let-errorCode=\"errorCode\" let-isListening=\"isListening\">\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 24 24'\n        fill='none'\n        stroke='currentColor'\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      >\n        <ng-container *ngIf=\"isNotAllowedError(); then errorSvgContent else normalSvgContent\">\n        </ng-container>\n        <ng-template #errorSvgContent>\n          <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n          <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n          <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n        <ng-template #normalSvgContent>\n          <path\n            d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n            [attr.fill]=\"isListening ? 'currentColor' : 'none'\"\n          ></path>\n          <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n      </svg>\n    </ng-template>\n    <ng-template #defaultStatus let-transcript=\"transcript\">\n      <p>{{transcript}}</p>\n    </ng-template>\n  `,\n})\nexport class NgAisVoiceSearch extends BaseWidget implements OnInit {\n  @ContentChild('button') button: TemplateRef<ElementRef>;\n  @ContentChild('status') status: TemplateRef<ElementRef>;\n\n  @Input() public searchAsYouSpeak?: boolean;\n  @Input() public buttonTitle: string = 'Search by voice';\n  @Input()\n  public disabledButtonTitle: string =\n    'Search by voice (not supported on this browser)';\n\n  public state: State = {\n    isBrowserSupported: undefined,\n    isListening: undefined,\n    toggleListening: noop,\n    voiceListeningState: {\n      status: 'initial',\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    },\n    templateContext: {\n      status: 'initial',\n      errorCode: undefined,\n      transcript: '',\n      isSpeechFinal: false,\n      isListening: false,\n      isBrowserSupported: false,\n    },\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any,\n    private zone: NgZone\n  ) {\n    super('VoiceSearch');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectVoiceSearch, {\n      searchAsYouSpeak: this.searchAsYouSpeak,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick = (event: MouseEvent): void => {\n    (event.currentTarget as HTMLElement).blur();\n    this.state.toggleListening();\n  };\n\n  public isNotAllowedError = (): boolean =>\n    this.state.voiceListeningState.status === 'error' &&\n    this.state.voiceListeningState.errorCode === 'not-allowed';\n\n  public updateState = (state: State): void => {\n    this.zone.run(() => {\n      this.state = {\n        ...state,\n        templateContext: {\n          status: state.voiceListeningState.status,\n          errorCode: state.voiceListeningState.errorCode,\n          transcript: state.voiceListeningState.transcript,\n          isSpeechFinal: state.voiceListeningState.isSpeechFinal,\n          isListening: state.isListening,\n          isBrowserSupported: state.isBrowserSupported,\n        },\n      };\n    });\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisVoiceSearch } from './voice-search';\n\n@NgModule({\n  declarations: [NgAisVoiceSearch],\n  entryComponents: [NgAisVoiceSearch],\n  exports: [NgAisVoiceSearch],\n  imports: [CommonModule],\n})\nexport class NgAisVoiceSearchModule {}\n","import * as algoliasearchProxy from 'algoliasearch';\nimport * as encodeProxy from 'querystring-es3/encode';\nimport { VERSION as AngularVersion } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TransferState, StateKey } from '@angular/platform-browser';\nimport { VERSION } from './version';\n\ntype SSRSearchClientOptions = {\n  appId: string;\n  apiKey: string;\n  httpClient: HttpClient;\n  HttpHeaders: typeof HttpHeaders;\n  transferState: TransferState;\n  options?: object;\n  makeStateKey<T = void>(key: string): StateKey<T>;\n};\n\ntype RequestOptions = {\n  // Algolia only uses GET and POST methods for searching.\n  // See: https://www.algolia.com/doc/rest-api/search/#search-endpoints\n  method: 'GET' | 'POST';\n  headers: string;\n  body: string;\n};\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n  options = {},\n}: SSRSearchClientOptions) {\n  const searchClient = algoliasearch(appId, apiKey, options);\n\n  searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch-server (${VERSION})`);\n\n  (searchClient as any)._request = (\n    rawUrl: string,\n    options: RequestOptions\n  ) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      options.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(options.headers);\n\n    const transferStateKey = makeStateKey(`ngais(${options.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const response = JSON.parse(\n        transferState.get(transferStateKey, JSON.stringify({}))\n      );\n\n      return Promise.resolve({\n        statusCode: response.status,\n        body: response.body,\n        headers: response.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(options.method, url, {\n          headers,\n          body: options.body,\n          observe: 'response',\n        })\n        .subscribe(\n          response => {\n            transferState.set(transferStateKey, JSON.stringify(response));\n\n            resolve({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            });\n          },\n          response =>\n            reject({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            })\n        );\n    });\n  };\n\n  return searchClient;\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\n// Transforms url query to SearchParameters\nexport function parseServerRequest(req: { url: string } | void) {\n  if (req && req.url && req.url.includes('?')) {\n    const query = req.url.split('?')[1];\n    return AlgoliaSearchHelper.getConfigurationFromQueryString(query);\n  }\n\n  return {};\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\nimport { NgAisQueryRuleCustomDataModule } from './query-rule-custom-data/query-rule-custom-data.module';\nexport { NgAisQueryRuleCustomDataModule };\nimport { NgAisQueryRuleContextModule } from './query-rule-context/query-rule-context.module';\nexport { NgAisQueryRuleContextModule };\nimport { NgAisVoiceSearchModule } from './voice-search/voice-search.module';\nexport { NgAisVoiceSearchModule };\n\n// Server-side rendering search client\nimport { createSSRSearchClient } from './create-ssr-search-client';\nexport { createSSRSearchClient };\n\nimport { parseServerRequest } from './parse-server-request';\nexport { parseServerRequest };\n\n// Custom widget with BaseWidget class\nimport { BaseWidget, Widget, Connector } from './base-widget';\nexport { BaseWidget, Widget, Connector };\n\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisInstantSearch };\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n  NgAisQueryRuleCustomDataModule,\n  NgAisQueryRuleContextModule,\n  NgAisVoiceSearchModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgAisRootModule };\n  }\n}\n"],"names":["VERSION","AngularVersion","tslib_1.__extends","noUiSlider.create","algoliasearch","algoliasearchProxy.default","encodeProxy.default"],"mappings":"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"}
