{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://angular-instantsearch/utils.ts","ng://angular-instantsearch/base-widget.ts","ng://angular-instantsearch/version.ts","ng://angular-instantsearch/instantsearch/instantsearch.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.ts","ng://angular-instantsearch/breadcrumb/breadcrumb.module.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.ts","ng://angular-instantsearch/clear-refinements/clear-refinements.module.ts","ng://angular-instantsearch/current-refinements/current-refinements.ts","ng://angular-instantsearch/current-refinements/current-refinements.module.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu-item.ts","ng://angular-instantsearch/hierarchical-menu/hierarchical-menu.module.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.ts","ng://angular-instantsearch/hits-per-page/hits-per-page.module.ts","ng://angular-instantsearch/highlight/highlight.ts","ng://angular-instantsearch/highlight/highlight.module.ts","ng://angular-instantsearch/hits/hits.ts","ng://angular-instantsearch/hits/hits.module.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.ts","ng://angular-instantsearch/infinite-hits/infinite-hits.module.ts","ng://angular-instantsearch/instantsearch/instantsearch.module.ts","ng://angular-instantsearch/menu/menu.ts","ng://angular-instantsearch/menu/menu.module.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.ts","ng://angular-instantsearch/numeric-menu/numeric-menu.module.ts","ng://angular-instantsearch/pagination/pagination.ts","ng://angular-instantsearch/pagination/pagination.module.ts","ng://angular-instantsearch/range-slider/range-slider.ts","ng://angular-instantsearch/range-slider/range-slider.module.ts","ng://angular-instantsearch/refinement-list/refinement-list.ts","ng://angular-instantsearch/refinement-list/facets-search.ts","ng://angular-instantsearch/refinement-list/refinement-list.module.ts","ng://angular-instantsearch/search-box/search-box.ts","ng://angular-instantsearch/search-box/search-box.module.ts","ng://angular-instantsearch/sort-by/sort-by.ts","ng://angular-instantsearch/sort-by/sort-by.module.ts","ng://angular-instantsearch/rating-menu/rating-menu.ts","ng://angular-instantsearch/rating-menu/rating-menu.module.ts","ng://angular-instantsearch/stats/stats.ts","ng://angular-instantsearch/stats/stats.module.ts","ng://angular-instantsearch/toggle/toggle.ts","ng://angular-instantsearch/toggle/toggle.module.ts","ng://angular-instantsearch/range-input/range-input.ts","ng://angular-instantsearch/range-input/range-input.module.ts","ng://angular-instantsearch/panel/panel.ts","ng://angular-instantsearch/panel/panel.module.ts","ng://angular-instantsearch/configure/configure.ts","ng://angular-instantsearch/configure/configure.module.ts","ng://angular-instantsearch/query-rule-custom-data/query-rule-custom-data.ts","ng://angular-instantsearch/query-rule-custom-data/query-rule-custom-data.module.ts","ng://angular-instantsearch/query-rule-context/query-rule-context.ts","ng://angular-instantsearch/query-rule-context/query-rule-context.module.ts","ng://angular-instantsearch/voice-search/voice-search.ts","ng://angular-instantsearch/voice-search/voice-search.module.ts","ng://angular-instantsearch/create-ssr-search-client.ts","ng://angular-instantsearch/index.ts","ng://angular-instantsearch/parse-server-request.ts"],"names":["extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","bem","widgetName","element","subElement","cssClass","parseNumberInput","input","parseInt","noop","args","_i","Widget","BaseWidget","_this","state","updateState","isFirstRendering","Promise","resolve","then","cx","createWidget","connector","options","widget","ngOnInit","instantSearchParent","addWidget","ngOnDestroy","isPlatformBrowser","platformId","removeWidget","getItemClass","item","className","isRefined","Input","VERSION","NgAisInstantSearch","instanceName","change","EventEmitter","onRender","emit","results","instantSearchInstance","helper","lastResults","createInstantSearchInstance","config","ngAfterViewInit","start","removeListener","dispose","searchParameters","highlightPreTag","highlightPostTag","urlSync","routing","searchClient","addAlgoliaAgent","AngularVersion","full","instantsearch","on","refresh","Component","selector","template","decorators","type","Inject","PLATFORM_ID","Output","NgAisBreadcrumb","_super","createURL","items","refine","tslib_1.__extends","defineProperty","autoHideContainer","map","idx","separator","isLast","connectBreadcrumb","attributes","rootPath","transformItems","handleClick","event","preventDefault","stopPropagation","value","forwardRef","NgAisBreadcrumbModule","NgModule","declarations","entryComponents","exports","imports","CommonModule","NgAisClearRefinements","resetLabel","hasRefinements","connectClearRefinements","includedAttributes","excludedAttributes","NgAisClearRefinementsModule","NgAisCurrentRefinements","connectCurrentRefinements","refinement","NgAisCurrentRefinementsModule","NgAisHierarchicalMenu","connectHierarchicalMenu","limit","showParentLevel","sortBy","NgAisHierarchicalMenuItem","lvl","isArray","data","getListClass","potentialArray","NgAisHierarchicalMenuModule","NgAisHitsPerPage","connectHitsPerPage","NgAisHitsPerPageModule","get","require","NgAisHighlight","tagName","attribute","hit","highlighted","replaceWithTagName","label","attributeHighlighted","_highlightResult","undefined","fallback","console","warn","replace","RegExp","NgAisHighlightModule","NgAisHits","hits","connectHitsWithInsights","escapeHTML","ContentChild","TemplateRef","NgAisHitsModule","NgAisInfiniteHits","showPrevious","showPreviousLabel","showMoreLabel","isFirstPage","isLastPage","showMore","connectInfiniteHitsWithInsights","showMoreHandler","showPreviousHandler","NgAisInfiniteHitsModule","NgAisInstantSearchModule","forRoot","ngModule","providers","NgAisMenu","showLessLabel","isShowingMore","canToggleShowMore","toggleShowMore","connectMenu","showMoreLimit","NgAisMenuModule","NgAisNumericMenu","connectNumericMenu","NgAisNumericMenuModule","range","NgAisPagination","showFirst","showLast","showNext","padding","currentRefinement","nbHits","nbPages","_a","pagesArray","apply","Number","pagesPadding","minDelta","maxDelta","Math","abs","connectPagination","maxPages","totalPages","page","NgAisPaginationModule","NgAisRangeSlider","pips","tooltips","min","max","animate","behaviour","connect","step","to","formatTooltip","density","mode","stepped","values","slider","noUiSlider.create","sliderContainer","nativeElement","noUiSlider","handleChange","disabled","updateOptions","toFixed","precision","pow","connectRange","ViewChild","NgAisRangeSliderModule","NgAisRefinementList","searchPlaceholder","canRefine","searchForItems","isFormSearch","connectRefinementList","operator","escapeFacetValues","NgAisFacetsSearch","searchQuery","search","handleSubmit","NgAisRefinementListModule","NgAisSearchBox","placeholder","submitTitle","resetTitle","searchAsYouType","autofocus","submit","reset","focus","blur","query","connectSearchBox","searchBox","handleReset","NgAisSearchBoxModule","NgAisSortBy","connectSortBy","NgAisSortByModule","NgAisRatingMenu","andUpLabel","hasNoResults","connectRatingMenu","NgAisRatingMenuModule","NgAisStats","hitPerPage","processingTimeMS","connectStats","NgAisStatsModule","NgAisToggle","connectToggleRefinement","off","NgAisToggleModule","NgAisRangeInput","currency","submitLabel","minInputValue","maxInputValue","target","NgAisRangeInputModule","NgAisPanel","NgAisPanelModule","NgAisConfigure","differs","internalSearchParameters","differ","find","connectConfigure","ngDoCheck","diff","KeyValueDiffers","NgAisConfigureModule","NgAisQueryRuleCustomData","connectQueryRules","NgAisQueryRuleCustomDataModule","NgAisQueryRuleContext","trackedFilters","transformRuleContexts","NgAisQueryRuleContextModule","NgAisVoiceSearch","zone","buttonTitle","disabledButtonTitle","isBrowserSupported","isListening","toggleListening","voiceListeningState","status","transcript","isSpeechFinal","errorCode","templateContext","isNotAllowedError","run","connectVoiceSearch","searchAsYouSpeak","NgZone","NgAisVoiceSearchModule","algoliasearch","algoliasearchProxy.default","algoliasearchProxy","encode","encodeProxy.default","encodeProxy","NGIS_MODULES","NgAisRootModule","NgAisModule","createSSRSearchClient","appId","apiKey","httpClient","HttpHeaders","transferState","makeStateKey","_b","_request","rawUrl","headers","set","method","url","includes","transferStateKey","body","hasKey","response","JSON","parse","stringify","statusCode","reject","request","observe","subscribe","parseServerRequest","req","split","AlgoliaSearchHelper","getConfigurationFromQueryString"],"mappings":"+9BAgBIA,EAAgBC,OAAOC,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIC,KAAKD,EAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,KAEzE,SAAgBE,EAAUJ,EAAGC,GAEzB,SAASI,IAAOC,KAAKC,YAAcP,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEQ,UAAkB,OAANP,EAAaL,OAAOa,OAAOR,IAAMI,EAAGG,UAAYP,EAAEO,UAAW,IAAIH,GAG5E,IAAIK,EAAWd,OAAOe,QAAU,SAASD,EAASE,GACrD,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOlB,OAAOY,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,GC/BX,SAAgBO,EAAIC,GAWlB,OAVQ,SAAYC,EAAkBC,OAChCC,EAAW,OAAOH,EAOtB,OANIC,IACFE,GAAY,IAAIF,GAEdC,IACFC,GAAY,KAAKD,GAEZC,GAKX,SAAgBC,EAAiBC,GAC/B,MAAwB,iBAAVA,EAAqBC,SAASD,EAAO,IAAMA,EAG3D,SAAgBE,QAAK,IAAAC,EAAA,GAAAC,EAAA,EAAAA,EAAAb,UAAAC,OAAAY,IAAAD,EAAAC,GAAAb,UAAAa,GClBrB,IAAAC,EAIA,SAAAA,oBA0CE,SAAAC,EAAYX,GAAZ,IAAAY,EAAA1B,KAHOA,KAAA2B,MAAiB,GAsBjB3B,KAAA4B,YAAW,SAChBD,EACAE,GAEA,GAAIA,EACF,OAAOC,QAAQC,UAAUC,KAAI,WAC3BN,EAAKC,MAAQA,IAIjBD,EAAKC,MAAQA,GA5Bb3B,KAAKiC,GAAKpB,EAAIC,GAyClB,OAtCSW,EAAAvB,UAAAgC,aAAP,SAAoBC,EAAsBC,QAAA,IAAAA,IAAAA,EAAA,IACxCpC,KAAKqC,OAASF,EAAUnC,KAAK4B,YAAaP,EAA5Bc,CAAkCC,IAG3CX,EAAAvB,UAAAoC,SAAP,WAEEtC,KAAKuC,oBAAoBC,UAAUxC,KAAKqC,SAGnCZ,EAAAvB,UAAAuC,YAAP,WACMC,EAAAA,kBAAkB1C,KAAKuC,oBAAoBI,aAC7C3C,KAAKuC,oBAAoBK,aAAa5C,KAAKqC,SAkBxCZ,EAAAvB,UAAA2C,aAAP,SAAoBC,OACdC,EAAY/C,KAAKiC,GAAG,QAMxB,OAJIa,EAAKE,YACPD,EAAeA,EAAS,IAAI/C,KAAKiC,GAAG,OAAQ,aAGvCc,8CA9CRE,EAAAA,SAgDHxB,KCxFayB,EAAU,eCAvBC,EAAA,WA6RE,SAAAA,EAAyCR,GAAzC,IAAAjB,EAAA1B,KAAyCA,KAAA2C,WAAAA,EAVzB3C,KAAAoD,aAAuB,UAGvCpD,KAAAqD,OAAmD,IAAIC,EAAAA,aAyDvDtD,KAAAuD,SAAQ,WACN7B,EAAK2B,OAAOG,KAAK,CACfC,QAAS/B,EAAKgC,sBAAsBC,OAAOC,YAC3CjC,MAAOD,EAAKgC,sBAAsBC,OAAOhC,SAG/C,OAtDSwB,EAAAjD,UAAAoC,SAAP,WACEtC,KAAK6D,4BAA4B7D,KAAK8D,SAGjCX,EAAAjD,UAAA6D,gBAAP,WACE/D,KAAK0D,sBAAsBM,SAGtBb,EAAAjD,UAAAuC,YAAP,WACEzC,KAAK0D,sBAAsBO,eAAe,SAAUjE,KAAKuD,UACzDvD,KAAK0D,sBAAsBQ,WAGtBf,EAAAjD,UAAA2D,4BAAP,SAAmCC,GAE5BA,EAAOK,mBAAkBL,EAAOK,iBAAmB,IACxD7E,OAAOe,OAAOyD,EAAOK,iBAAkB,CACrCC,gBAAiB,oBACjBC,iBAAkB,uBAIf3B,EAAAA,kBAAkB1C,KAAK2C,cACI,oBAAnBmB,EAAOQ,gBAAgCR,EAAOQ,QAC3B,oBAAnBR,EAAOS,gBAAgCT,EAAOS,SAGR,mBAAxCT,EAAOU,aAAaC,kBAC7BX,EAAOU,aAAaC,gBAAgB,YAAYC,EAAAA,QAAeC,KAAI,KACnEb,EAAOU,aAAaC,gBAAgB,0BAA0BvB,EAAO,MAGvElD,KAAK0D,sBAAwBkB,EAAcd,GAC3C9D,KAAK0D,sBAAsBmB,GAAG,SAAU7E,KAAKuD,WAGxCJ,EAAAjD,UAAAsC,UAAP,SAAiBH,GACfrC,KAAK0D,sBAAsBlB,UAAUH,IAGhCc,EAAAjD,UAAA0C,aAAP,SAAoBP,GAClBrC,KAAK0D,sBAAsBd,aAAaP,IAGnCc,EAAAjD,UAAA4E,QAAP,WACE9E,KAAK0D,sBAAsBoB,+BA/D9BC,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,oBACVC,SAAU,yEAc2C3F,OAAM4F,WAAA,CAAA,CAAAC,KAA9CC,EAAAA,OAAM9D,KAAA,CAAC+D,EAAAA,kDAXnBpC,EAAAA,4BACAA,EAAAA,sBAEAqC,EAAAA,UAgEHnC,EArVA,iBCoFE,SAAAoC,EAEShD,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,eAAaA,YAFZ0B,EAAAa,oBAAAA,EARFb,EAAAC,MAAyB,CAC9B8D,UAAS,WAAQ,MAAA,KACjBC,MAAO,GACPC,OAAQtE,KA6BZ,OAxDqCuE,EAAAA,EAAAA,GAUnCtG,OAAAuG,eAAIN,EAAArF,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAG/CxG,OAAAuG,eAAIN,EAAArF,UAAA,QAAK,KAAT,WAAA,IAAAwB,EAAA1B,KACE,OAAOA,KAAK2B,MAAM+D,MAAMK,IAAG,SAAEjD,EAAMkD,GAAQ,OAAA5F,EAAA,GACtC0C,EAAI,CACPmD,UAAmB,IAARD,EACXE,OAAQF,IAAQtE,EAAKC,MAAM+D,MAAM/E,OAAS,uCAmBvC4E,EAAArF,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaiE,EAAAA,kBAAmB,CACnCC,WAAYpG,KAAKoG,WACjBC,SAAUrG,KAAKqG,SACfJ,UAAWjG,KAAKiG,UAChBK,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGTuF,EAAArF,UAAAqG,YAAP,SAAmBC,EAAmB1D,GACpC0D,EAAMC,iBACND,EAAME,kBAEF5D,EAAK6D,OACP3G,KAAK2B,MAAMgE,OAAO7C,EAAK6D,4BA1F5B5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,iBACVC,SAAU,q5BAkEPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,8CA7B1BF,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,8BACAA,EAAAA,SAmDHsC,GAxDqC9D,GCtDrCoF,EAAA,WAKA,SAAAA,KAMoC,2BANnCC,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACxB,GACfyB,gBAAiB,CAACzB,GAClB0B,QAAS,CAAC1B,GACV2B,QAAS,CAACC,EAAAA,kBAEwBN,EAXpC,iBCgDE,SAAAO,EAES7E,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,qBAAmBA,YAFlB0B,EAAAa,oBAAAA,EAnBOb,EAAA2F,WAAqB,oBAO9B3F,EAAAC,MAA+B,CACpC2F,gBAAgB,EAChB3B,OAAQtE,EACRoE,UAAS,WAAQ,MAAA,QA+BrB,OA3C2CG,EAAAA,EAAAA,GAezCtG,OAAAuG,eAAIuB,EAAAlH,UAAA,WAAQ,KAAZ,WACE,OAAQF,KAAK2B,MAAM2F,gBAAkBtH,KAAK8F,mDAUrCsB,EAAAlH,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaqF,EAAAA,wBAAyB,CACzCC,mBAAoBxH,KAAKwH,mBACzBC,mBAAoBzH,KAAKyH,mBACzBnB,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGToH,EAAAlH,UAAAqG,YAAP,SAAmBC,GACjBA,EAAMC,iBAEFzG,KAAK2B,MAAM2F,gBACbtH,KAAK2B,MAAMgE,8BAzDhBZ,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,wBACVC,SAAU,4ZAmCPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,8CAlB1BF,EAAAA,kCAGAA,EAAAA,kCACAA,EAAAA,8BACAA,EAAAA,SAoCHmE,GA3C2C3F,GC7B3CiG,EAAA,WAKA,SAAAA,KAM0C,2BANzCZ,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACK,GACfJ,gBAAiB,CAACI,GAClBH,QAAS,CAACG,GACVF,QAAS,CAACC,EAAAA,kBAE8BO,EAX1C,iBC2EE,SAAAC,EAESpF,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,uBAAqBA,YAFpB0B,EAAAa,oBAAAA,EAZFb,EAAAC,MAAiC,CACtC8D,UAAWpE,EACXsE,OAAQtE,EACRqE,MAAO,MA2BX,OAvC6CE,EAAAA,EAAAA,GAe3CtG,OAAAuG,eAAI8B,EAAAzH,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxC6B,EAAAzH,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa0F,EAAAA,0BAA2B,CAC3CJ,mBAAoBxH,KAAKwH,mBACzBC,mBAAoBzH,KAAKyH,mBACzBnB,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGT2H,EAAAzH,UAAAqG,YAAP,SAAmBC,EAAmBqB,GACpCrB,EAAMC,iBACNzG,KAAK2B,MAAMgE,OAAOkC,wBA/DrB9C,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,0BACVC,SAAU,6sBA4CPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,sDAlB1BF,EAAAA,kCACAA,EAAAA,8BACAA,EAAAA,SAmCH0E,GAvC6ClG,GCxD7CqG,EAAA,WAKA,SAAAA,KAM4C,2BAN3ChB,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACY,GACfX,gBAAiB,CAACW,GAClBV,QAAS,CAACU,GACVT,QAAS,CAACC,EAAAA,kBAEgCW,EAX5C,iBCqEE,SAAAC,EAESxF,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,qBAAmBA,YAFlB0B,EAAAa,oBAAAA,EAZFb,EAAAC,MAA+B,CACpC8D,UAAS,WAAQ,MAAA,KACjBC,MAAO,GACPC,OAAQtE,KA2BZ,OA9C2CuE,EAAAA,EAAAA,GAsBzCtG,OAAAuG,eAAIkC,EAAA7H,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxCiC,EAAA7H,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa8F,EAAAA,wBAAyB,CACzCC,MAAO/G,EAAiBlB,KAAKiI,OAC7B7B,WAAYpG,KAAKoG,WACjBC,SAAUrG,KAAKqG,SACfJ,UAAWjG,KAAKiG,UAChBiC,gBAAiBlI,KAAKkI,gBACtBC,OAAQnI,KAAKmI,OACb7B,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BA/DjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,wBACVC,SAAU,qdA4CPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,8CA1B1BF,EAAAA,yBACAA,EAAAA,wBACAA,EAAAA,+BACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,8BAKAA,EAAAA,SAmCH8E,GA9C2CtG,GC3C3C2G,EAAA,WAOA,SAAAA,IAiCkBpI,KAAAqI,IAAc,EAKvBrI,KAAAiC,GAAKpB,EAAI,oBAiClB,OA/BSuH,EAAAlI,UAAA2C,aAAP,SAAoBC,OACdC,EAAY/C,KAAKiC,GAAG,QAUxB,OARIa,EAAKE,YACPD,EAAeA,EAAS,IAAI/C,KAAKiC,GAAG,OAAQ,aAG1CjC,KAAKsI,QAAQxF,EAAKyF,OAA4B,EAAnBzF,EAAKyF,KAAK5H,SACvCoC,EAAeA,EAAS,IAAI/C,KAAKiC,GAAG,OAAQ,WAGvCc,GAGFqF,EAAAlI,UAAAsI,aAAP,WACE,OAAUxI,KAAKiC,GAAG,QAAO,IAAIjC,KAAKiC,GAAG,OAAQ,SAAQ,IAAIjC,KAAKiC,GAC5D,OACA,MAAMjC,KAAKqI,MAIRD,EAAAlI,UAAAoI,QAAP,SAAeG,GACb,OAAOhJ,MAAM6I,QAAQG,IAGhBL,EAAAlI,UAAAqG,YAAP,SAAmBC,EAAmB1D,GACpC0D,EAAMC,iBACND,EAAME,kBAEN1G,KAAK2F,OAAO7C,EAAK6D,4BArEpB5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,6BACVC,SAAU,4yBA+BThC,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,oBACAA,EAAAA,SAmCHmF,EA9EA,GCAAM,EAAA,WAMA,SAAAA,KAM0C,2BANzC5B,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACgB,EAAuBK,GACtCpB,gBAAiB,CAACe,GAClBd,QAAS,CAACc,GACVb,QAAS,CAACC,EAAAA,kBAE8BuB,EAZ1C,iBCgEE,SAAAC,EAESpG,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,gBAAcA,YAFb0B,EAAAa,oBAAAA,EAZFb,EAAAC,MAA0B,CAC/B+D,MAAO,GACPC,OAAQtE,KAsBZ,OA/BsCuE,EAAAA,EAAAA,GAapCtG,OAAAuG,eAAI8C,EAAAzI,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxC6C,EAAAzI,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa0G,EAAAA,mBAAoB,CACpClD,MAAO1F,KAAK0F,MACZY,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BApDjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,oBACVC,SAAU,6fAuCPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,yCAjB1BF,EAAAA,8BACAA,EAAAA,SA6BH0F,GA/BsClH,GC/CtCoH,EAAA,WAKA,SAAAA,KAMqC,2BANpC/B,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC4B,GACf3B,gBAAiB,CAAC2B,GAClB1B,QAAS,CAAC0B,GACVzB,QAAS,CAACC,EAAAA,kBAEyB0B,EAXrC,GCAMC,EAAMC,QAAQ,cACpBC,EAAA,WAGA,SAAAA,IAOWhJ,KAAAiJ,QAAkB,KAE3BjJ,KAAAiC,GAAKpB,EAAI,aA8CX,OA5CEvB,OAAAuG,eAAImD,EAAA9I,UAAA,UAAO,KAAX,WACE,GAAuB,gBAAnBF,KAAKkJ,UACP,OAAOlJ,KAAKmJ,IAAIC,YACZpJ,KAAKqJ,mBAAmBrJ,KAAKmJ,IAAIC,aACjCpJ,KAAKmJ,IAAIG,MAGf,GAAItJ,KAAKmJ,IAAItJ,eAAe,oBAAqB,KACzC0J,EAAuBT,EAC3B9I,KAAKmJ,IAAIK,iBACTxJ,KAAKkJ,WAIP,GACEK,IAAyBE,WACa,iBAA/BF,EAAqB5C,MAE5B,OAAO3G,KAAKqJ,mBAAmBE,EAAqB5C,WAIlD+C,EAAWZ,EAAI9I,KAAKmJ,IAAKnJ,KAAKkJ,WACpC,OAAKQ,IACHC,QAAQC,KACN,6BACE5J,KAAKkJ,UAAS,oDAIX,qCAMXF,EAAA9I,UAAAmJ,mBAAA,SAAmB1C,GACjB,OAAOA,EACJkD,QACC,IAAIC,OAAO,OAAQ,KACnB,IAAI9J,KAAKiJ,QAAO,WAAWjJ,KAAKiC,GAAG,eAAc,MAElD4H,QAAQ,IAAIC,OAAO,QAAS,KAAM,KAAK9J,KAAKiJ,QAAO,0BArDzDlE,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,gBACVC,SAAU,4FAGThC,EAAAA,mBACAA,EAAAA,uBACAA,EAAAA,SAgDH+F,EA1DA,GCDAe,EAAA,WAKA,SAAAA,KAMmC,2BANlCjD,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACiC,GACfhC,gBAAiB,CAACgC,GAClB/B,QAAS,CAAC+B,GACV9B,QAAS,CAACC,EAAAA,kBAEuB4C,EAXnC,iBCkDE,SAAAC,EAESzH,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,SAAOA,YAFN0B,EAAAa,oBAAAA,EAPFb,EAAAC,MAAmB,CACxBsI,KAAM,GACNxG,QAAS,IAkBX/B,EAAAE,YAAW,SAAID,EAAOE,GAChBA,IACJH,EAAKC,MAAQA,MAEjB,OA9B+BiE,EAAAA,EAAAA,GAkB7BoE,EAAA9J,UAAAoC,SAAA,WACEtC,KAAKkC,aAAagI,EAAAA,wBAAyB,CACzCC,WAAYnK,KAAKmK,WACjB7D,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BA5CjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,WACVC,SAAU,ikBA+BPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,4CAX1BiH,EAAAA,aAAY9I,KAAA,CAAC+I,EAAAA,iCAEbpH,EAAAA,8BACAA,EAAAA,SA0BH+G,GA9B+BvI,GCvC/B6I,EAAA,WAMA,SAAAA,KAM8B,2BAN7BxD,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACiD,GACfhD,gBAAiB,CAACgD,GAClB/C,QAAS,CAAC+C,GACV9C,QAAS,CAACC,EAAAA,aAAc4C,OAEIO,EAZ9B,iBCkFE,SAAAC,EAEShI,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,iBAAeA,YAFd0B,EAAAa,oBAAAA,EAjBOb,EAAA8I,cAAwB,EACxB9I,EAAA+I,kBAA4B,wBAC5B/I,EAAAgJ,cAAwB,oBAIjChJ,EAAAC,MAA2B,CAChCsI,KAAM,GACNU,aAAa,EACbC,YAAY,EACZC,SAAUxJ,EACVmJ,aAAcnJ,EACdoC,QAAS,IA4BX/B,EAAAE,YAAW,SAAID,EAAOE,GAChBA,IACJH,EAAKC,MAAQA,MAEjB,OAjDuCiE,EAAAA,EAAAA,GA2BrC2E,EAAArK,UAAAoC,SAAA,WACEtC,KAAKkC,aAAa4I,EAAAA,gCAAiC,CACjDX,WAAYnK,KAAKmK,WACjB7D,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGTuK,EAAArK,UAAA6K,gBAAP,SAAuBvE,GACrBA,EAAMC,iBACNzG,KAAK2B,MAAMkJ,YAGNN,EAAArK,UAAA8K,oBAAP,SAA2BxE,GACzBA,EAAMC,iBACNzG,KAAK2B,MAAM6I,oCAjFdzF,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,oBACVC,SAAU,upCA0DPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,4CApB1BiH,EAAAA,aAAY9I,KAAA,CAAC+I,EAAAA,iCAGbpH,EAAAA,4BACAA,EAAAA,iCACAA,EAAAA,6BACAA,EAAAA,8BACAA,EAAAA,SAyCHsH,GAjDuC9I,GC9DvCwJ,EAAA,WAMA,SAAAA,KAMsC,2BANrCnE,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACwD,GACfvD,gBAAiB,CAACuD,GAClBtD,QAAS,CAACsD,GACVrD,QAAS,CAACC,EAAAA,aAAc4C,OAEYkB,EAZtC,GCAAC,EAAA,WAKA,SAAAA,KAaA,OANgBA,EAAAC,QAAd,WACE,MAAO,CACLC,SAAUF,EACVG,UAAW,yBAVhBvE,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC5D,GACf6D,gBAAiB,CAAC7D,GAClB8D,QAAS,CAAC9D,GACV+D,QAAS,CAACC,EAAAA,kBASZ+D,EAlBA,iBCqGE,SAAAI,EAES/I,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,SAAOA,YAFN0B,EAAAa,oBAAAA,EAxCOb,EAAAgJ,cAAwB,YACxBhJ,EAAA6J,cAAwB,YAcjC7J,EAAAC,MAAmB,CACxB+D,MAAO,GACPC,OAAQtE,EACRoE,UAAWpE,EACXmK,eAAe,EACfC,mBAAmB,EACnBC,eAAgBrK,KA2CpB,OAlE+BuE,EAAAA,EAAAA,GA0B7BtG,OAAAuG,eAAIyF,EAAApL,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAG/CxG,OAAAuG,eAAIyF,EAAApL,UAAA,gBAAa,KAAjB,eACM6C,EAAY/C,KAAKiC,GAAG,YAMxB,OAJKjC,KAAK2B,MAAM8J,oBACd1I,EAAeA,EAAS,IAAI/C,KAAKiC,GAAG,WAAY,aAG3Cc,mCAUFuI,EAAApL,UAAAoC,SAAP,WACEtC,KAAKkC,aAAayJ,EAAAA,YAAa,CAC7BzC,UAAWlJ,KAAKkJ,UAChB2B,SAAU7K,KAAK6K,SACf5C,MAAOjI,KAAKiI,MACZ2D,cAAe5L,KAAK4L,cACpBzD,OAAQnI,KAAKmI,OACb7B,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGhBsL,EAAApL,UAAAqG,YAAA,SAAYC,EAAmBG,GAC7BH,EAAMC,iBACND,EAAME,kBAEN1G,KAAK2B,MAAMgE,OAAOgB,wBAnGrB5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,WACVC,SAAU,w7BA0EPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,iDAvC1BF,EAAAA,6BACAA,EAAAA,yBAGAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,6BACAA,EAAAA,sBACAA,EAAAA,8BAIAA,EAAAA,SAoDHqI,GAlE+B7J,GC7D/BoK,EAAA,WAKA,SAAAA,KAM8B,2BAN7B/E,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACuE,GACftE,gBAAiB,CAACsE,GAClBrE,QAAS,CAACqE,GACVpE,QAAS,CAACC,EAAAA,kBAEkB0E,EAX9B,iBCiEE,SAAAC,EAESvJ,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,gBAAcA,YAFb0B,EAAAa,oBAAAA,EAZFb,EAAAC,MAA0B,CAC/B+D,MAAO,GACPC,OAAQtE,EACRoE,UAAWpE,KA4Bf,OAvCsCuE,EAAAA,EAAAA,GAcpCtG,OAAAuG,eAAIiG,EAAA5L,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxCgG,EAAA5L,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa6J,EAAAA,mBAAoB,CACpC7C,UAAWlJ,KAAKkJ,UAChBxD,MAAO1F,KAAK0F,MACZY,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGT8L,EAAA5L,UAAAyF,OAAP,SAAca,EAAmB1D,GAC/B0D,EAAMC,iBACND,EAAME,kBACN1G,KAAK2B,MAAMgE,OAAO7C,EAAK6D,4BAhE1B5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,mBACVC,SAAU,6qBA4CPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,6CAlB1BF,EAAAA,qBACAA,EAAAA,8BACAA,EAAAA,SAoCH6I,GAvCsCrK,GC/CtCuK,EAAA,WAKA,SAAAA,KAMqC,2BANpClF,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC+E,GACf9E,gBAAiB,CAAC8E,GAClB7E,QAAS,CAAC6E,GACV5E,QAAS,CAACC,EAAAA,kBAEyB6E,EAXrC,GCAMC,EAAQlD,QAAQ,gBACtBmD,EAAA,SAAA1G,GAqKE,SAAA0G,EAES3J,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,eAAaA,YAFZ0B,EAAAa,oBAAAA,EA7DOb,EAAAyK,WAAqB,EACrBzK,EAAA0K,UAAoB,EACpB1K,EAAA8I,cAAwB,EACxB9I,EAAA2K,UAAoB,EACpB3K,EAAA4K,QAA2B,EAKpC5K,EAAAC,MAAQ,CACb8D,UAAWpE,EACXkL,kBAAmB,EACnBC,OAAQ,EACRC,QAAS,EACT9G,OAAQtE,KAyEZ,OAzFqCuE,EAAAA,EAAAA,GAmBnCtG,OAAAuG,eAAIqG,EAAAhM,UAAA,QAAK,KAAT,WACQ,IAAAwM,EAAA1M,KAAA2B,MAAE8K,EAAAC,EAAAD,QAASF,EAAAG,EAAAH,kBAEXI,EAAalN,MAAMmN,MAAM,KAAM,CAAEjM,OAAQ8L,IAAW1G,IACxD8G,OAAOjM,KACPiM,QAGIC,EACoB,iBAAjB9M,KAAKsM,QACRlL,SAASpB,KAAKsM,QAAS,IACvBtM,KAAKsM,QAEX,GAAIQ,GAA+B,EAAfA,EAAkB,CAEpC,GAAIL,EAAyB,EAAfK,EAAmB,EAC/B,OAAOH,MAGHI,EAAWR,EAAoBO,EAAe,EAC9CE,EAAWT,EAAoBO,EAAe,EAEpD,OAAIC,EAAW,EACNd,EAAM,EAAGM,EAAoBO,EAAeG,KAAKC,IAAIH,IAG/CN,EAAXO,EACKf,EACLM,EAAoBO,GAAgBE,EAAWP,GAC/CA,GAIGR,EACLM,EAAoBO,EACpBP,EAAoBO,EAAe,GAIvC,OAAOH,mCAUFT,EAAAhM,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaiL,EAAAA,kBAAmB,CACnCC,SAAUlM,EAAiBlB,KAAKqN,cAElC7H,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGTkM,EAAAhM,UAAAyF,OAAP,SAAca,EAAmB8G,GAC/B9G,EAAME,kBACNF,EAAMC,iBAGJ6G,EAAO,GACPA,IAAStN,KAAK2B,MAAM4K,mBACpBe,GAAQtN,KAAK2B,MAAM8K,SAKrBzM,KAAK2B,MAAMgE,OAAO2H,wBAzLrBvI,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,iBACVC,SAAU,+mFA8JPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,6CA5D1BF,EAAAA,wBACAA,EAAAA,4BACAA,EAAAA,wBACAA,EAAAA,uBACAA,EAAAA,0BAGAA,EAAAA,SAgFHiJ,EAjMA,CAwGqCzK,GCzGrC8L,EAAA,WAKA,SAAAA,KAMoC,2BANnCzG,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACmF,GACflF,gBAAiB,CAACkF,GAClBjF,QAAS,CAACiF,GACVhF,QAAS,CAACC,EAAAA,kBAEwBoG,EAXpC,iBCoDE,SAAAC,EAESjL,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,gBAAcA,YAFb0B,EAAAa,oBAAAA,EAzBOb,EAAA+L,MAAgB,EAChB/L,EAAAgM,UAAoB,EAQ7BhM,EAAAC,MAA0B,CAC/BsK,MAAO,CAAE0B,IAAK,EAAGC,IAAK,GACtBjI,OAAQtE,EACR2C,MAAO,CAAC,EAAG,IA6BNtC,EAAAE,YAAW,SAAID,EAAOE,GAC3B,GAAIA,EAAkB,KAEdiC,EAAS,CACb+J,SAAS,EACTC,UAAW,OACXC,SAAS,EACT9B,MAAO,CAAE0B,IAAK,EAAGC,IAAK,GACtB5J,MAAO,CAAC,EAAG,GACXgK,KAAMtM,EAAKsM,KACXN,SAAUhM,EAAKgM,UAAY,CACzB,CAAEO,GAAIvM,EAAKwM,eACX,CAAED,GAAIvM,EAAKwM,kBAIG,IAAdxM,EAAK+L,MAAsC,oBAAd/L,EAAK+L,KACpCnO,OAAOe,OAAOyD,EAAQ,CACpB2J,KAAM,CACJU,QAAS,EACTC,KAAM,YACNC,SAAS,EACTC,OAAQ,CAAC,EAAG,GAAI,QAGX5M,EAAK+L,OAAShE,WACvBnK,OAAOe,OAAOyD,EAAQ,CAAE2J,KAAM/L,EAAK+L,OAGrC/L,EAAK6M,OAASC,EAAAA,OACZ9M,EAAK+M,gBAAgBC,cACrB5K,GAIFpC,EAAK+M,gBAAgBC,cAAcC,WAAW9J,GAC5C,SACAnD,EAAKkN,cASP,IAAAlC,GAJFhL,EAAKC,MAAQA,GAIXsK,MAAS0B,EAAAjB,EAAAiB,IAAKC,EAAAlB,EAAAkB,IACd5J,EAAArC,EAAAqC,MAGI6K,EAAWlB,IAAQC,EACnB3B,EAAQ4C,EAAW,CAAElB,IAAGA,EAAEC,IAAKA,EAAM,MAAW,CAAED,IAAGA,EAAEC,IAAGA,GAEhElM,EAAK6M,OAAOO,cAAc,CAAED,SAAQA,EAAE5C,MAAKA,EAAEjI,MAAKA,KAG7CtC,EAAAkN,aAAY,SAAIN,GACrB5M,EAAKC,MAAMgE,OAAO2I,IAGb5M,EAAAwM,cAAa,SAAIvH,GACtB,OAAOA,EAAMoI,QAAQ7N,EAAiBQ,EAAKsN,eAE/C,OA5GsCpJ,EAAAA,EAAAA,GAqBpCtG,OAAAuG,eAAI2H,EAAAtN,UAAA,OAAI,KAAR,eAEQ8O,EAAY9N,EAAiBlB,KAAKgP,YAAc,EACtD,OAAO,EAAI/B,KAAKgC,IAAI,GAAID,oCAUnBxB,EAAAtN,UAAAoC,SAAP,WACEtC,KAAKkC,aAAagN,EAAAA,aAAc,CAC9BhG,UAAWlJ,KAAKkJ,UAChB0E,IAAK1M,EAAiBlB,KAAK4N,KAC3BD,IAAKzM,EAAiBlB,KAAK2N,KAC3BqB,UAAW9N,EAAiBlB,KAAKgP,aAGnCxJ,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BApDjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,mBACVC,SAAU,8MAoCPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,mDA3B1BgM,EAAAA,UAAS7N,KAAA,CAAC,iCAGV2B,EAAAA,wBACAA,EAAAA,yBAGAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,yBACAA,EAAAA,SAiGHuK,GA5GsC/L,GCzBtC2N,EAAA,WAKA,SAAAA,KAMqC,2BANpCtI,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACyG,GACfxG,gBAAiB,CAACwG,GAClBvG,QAAS,CAACuG,GACVtG,QAAS,CAACC,EAAAA,kBAEyBiI,EAXrC,iBCoHE,SAAAC,EAES9M,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,mBAAiBA,YAFhB0B,EAAAa,oBAAAA,EAtCOb,EAAAgJ,cAAwB,YACxBhJ,EAAA6J,cAAwB,YAExB7J,EAAA4N,kBAA4B,iBAiBrC5N,EAAAC,MAA6B,CAClC4N,WAAW,EACX9D,mBAAmB,EACnBhG,UAAWpE,EACXmK,eAAe,EACf9F,MAAO,GACPC,OAAQtE,EACRqK,eAAgBrK,EAChBmO,eAAgBnO,EAChBoO,cAAc,KA4ClB,OA3EyC7J,EAAAA,EAAAA,GAkCvCtG,OAAAuG,eAAIwJ,EAAAnP,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxCuJ,EAAAnP,UAAAoC,SAAP,WACEtC,KAAKkC,aAAawN,EAAAA,sBAAuB,CACvC7E,SAAU7K,KAAK6K,SACf5C,MAAO/G,EAAiBlB,KAAKiI,OAC7B2D,cAAe1K,EAAiBlB,KAAK4L,eACrC1C,UAAWlJ,KAAKkJ,UAChByG,SAAU3P,KAAK2P,SACfxH,OAAQnI,KAAKmI,OACbyH,mBAAmB,EACnBtJ,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGTqP,EAAAnP,UAAAyF,OAAP,SACEa,EACA1D,GAEA0D,EAAMC,iBACND,EAAME,kBAEF1G,KAAK2B,MAAM4N,YAEbzM,EAAKE,WAAaF,EAAKE,UAGvBhD,KAAK2B,MAAMgE,OAAO7C,EAAK6D,6BA1H5B5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,sBACVC,SAAU,m1CAuFPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,iDArC1BF,EAAAA,6BACAA,EAAAA,0BACAA,EAAAA,iCACAA,EAAAA,yBAGAA,EAAAA,wBACAA,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,6BACAA,EAAAA,sBACAA,EAAAA,8BAIAA,EAAAA,SA0DHoM,GA3EyC5N,GC9EzCoO,EAAA,WAGA,SAAAA,IA2DS7P,KAAAiC,GAAKpB,EAAI,aAETb,KAAA8P,YAAc,GAWvB,OATSD,EAAA3P,UAAA0O,aAAP,SAAoBjI,GAClB3G,KAAK8P,YAAcnJ,EACnB3G,KAAK+P,OAAOpJ,IAGPkJ,EAAA3P,UAAA8P,aAAP,SAAoBxJ,GAClBA,EAAMC,iBACNzG,KAAK+P,OAAO/P,KAAK8P,kCAtEpB/K,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,oBACVC,SAAU,k2DAsDThC,EAAAA,sBACAA,EAAAA,SAeH4M,EA3EA,GCAAI,EAAA,WAOA,SAAAA,KAMwC,2BANvCnJ,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACsI,EAAqBQ,GACpC7I,gBAAiB,CAACqI,GAClBpI,QAAS,CAACoI,GACVnI,QAAS,CAACC,EAAAA,aAAc4C,OAEckG,EAbxC,iBCkGE,SAAAC,EAES3N,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,cAAYA,YAFX0B,EAAAa,oBAAAA,EAvBOb,EAAAyO,YAAsB,SACtBzO,EAAA0O,YAAsB,SACtB1O,EAAA2O,WAAqB,QACrB3O,EAAA4O,iBAA2B,EAC3B5O,EAAA6O,WAAqB,EAI3B7O,EAAA8O,OAAS,IAAIlN,EAAAA,aACb5B,EAAA+O,MAAQ,IAAInN,EAAAA,aAGZ5B,EAAA2B,OAAS,IAAIC,EAAAA,aACb5B,EAAAgP,MAAQ,IAAIpN,EAAAA,aACZ5B,EAAAiP,KAAO,IAAIrN,EAAAA,aAEd5B,EAAAC,MAAQ,CACbiP,MAAO,GACPjL,OAAQtE,GAQRK,EAAKQ,aAAa2O,EAAAA,oBAkCtB,OA9DoCjL,EAAAA,EAAAA,GA+B3BsK,EAAAhQ,UAAA6D,gBAAP,WACM/D,KAAKuQ,WACPvQ,KAAK8Q,UAAUpC,cAAcgC,SAI1BR,EAAAhQ,UAAA0O,aAAP,SAAoBgC,GAClB5Q,KAAKqD,OAAOG,KAAKoN,GACb5Q,KAAKsQ,iBACPtQ,KAAK2B,MAAMgE,OAAOiL,IAIfV,EAAAhQ,UAAA8P,aAAP,SAAoBxJ,GAElBxG,KAAKwQ,OAAOhN,KAAKgD,GAEjBA,EAAMC,iBAEDzG,KAAKsQ,iBACRtQ,KAAK2B,MAAMgE,OAAO3F,KAAK8Q,UAAUpC,cAAc/H,QAI5CuJ,EAAAhQ,UAAA6Q,YAAP,SAAmBvK,GAEjBxG,KAAKyQ,MAAMjN,KAAKgD,GAGhBxG,KAAK2B,MAAMgE,OAAO,yBAtHrBZ,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,iBACVC,SAAU,giEAgFPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,6CAvB1BgM,EAAAA,UAAS7N,KAAA,CAAC,kCACV2B,EAAAA,2BACAA,EAAAA,0BACAA,EAAAA,+BACAA,EAAAA,yBACAA,EAAAA,sBAIAqC,EAAAA,sBACAA,EAAAA,uBAGAA,EAAAA,sBACAA,EAAAA,qBACAA,EAAAA,UA8CH4K,GA9DoCzO,GC3EpCuP,GAAA,WAKA,SAAAA,KAMmC,2BANlClK,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACmJ,GACflJ,gBAAiB,CAACkJ,GAClBjJ,QAAS,CAACiJ,GACVhJ,QAAS,CAACC,EAAAA,kBAEuB6J,EAXnC,kBCmDE,SAAAC,EAES1O,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,WAASA,YAFR0B,EAAAa,oBAAAA,EATFb,EAAAC,MAAqB,CAC1B4K,kBAAmB,KACnBnK,QAAS,GACTuD,OAAQtE,KAkBZ,OA1BiCuE,EAAAA,EAAAA,GAmBxBqL,EAAA/Q,UAAAoC,SAAP,WACEtC,KAAKkC,aAAagP,EAAAA,cAAe,CAC/BxL,MAAO1F,KAAK0F,MACZY,eAAgBtG,KAAKsG,iBAEvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BA5CjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,cACVC,SAAU,ifA+BPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,yCAZ1BF,EAAAA,8BACAA,EAAAA,SAwBHgO,GA1BiCxP,GCvCjC0P,GAAA,WAKA,SAAAA,KAMgC,2BAN/BrK,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACkK,IACfjK,gBAAiB,CAACiK,IAClBhK,QAAS,CAACgK,IACV/J,QAAS,CAACC,EAAAA,kBAEoBgK,EAXhC,kBCyGE,SAAAC,EAES7O,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,eAAaA,YAFZ0B,EAAAa,oBAAAA,EAnBOb,EAAA2P,WAAqB,OAM9B3P,EAAAC,MAAyB,CAC9B8D,UAAWpE,EACXiQ,cAAc,EACd5L,MAAO,GACPC,OAAQtE,KA4BZ,OAxCqCuE,EAAAA,EAAAA,GAenCtG,OAAAuG,eAAIuL,EAAAlR,UAAA,WAAQ,KAAZ,WACE,OAAmC,IAA5BF,KAAK2B,MAAM+D,MAAM/E,QAAgBX,KAAK8F,mDAUxCsL,EAAAlR,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaqP,EAAAA,kBAAmB,CACnCrI,UAAWlJ,KAAKkJ,UAChB0E,IAAK1M,EAAiBlB,KAAK4N,OAE7BpI,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGToR,EAAAlR,UAAAqG,YAAP,SAAmBC,EAAmBG,GACpCH,EAAMC,iBACND,EAAME,kBAEN1G,KAAK2B,MAAMgE,OAAOgB,wBAtGrB5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,kBACVC,SAAU,yjEAkFPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,8CAlB1BF,EAAAA,yBAGAA,EAAAA,mBACAA,EAAAA,SAkCHmO,GAxCqC3P,GCtFrC+P,GAAA,WAKA,SAAAA,KAMoC,2BANnC1K,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACqK,IACfpK,gBAAiB,CAACoK,IAClBnK,QAAS,CAACmK,IACVlK,QAAS,CAACC,EAAAA,kBAEwBqK,EAXpC,kBC0CE,SAAAC,EAESlP,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,UAAQA,YAFP0B,EAAAa,oBAAAA,EAfFb,EAAAC,MAAQ,CACb+P,WAAY,EACZlF,OAAQ,EACRC,QAAS,EACTa,KAAM,EACNqE,iBAAkB,EAClBf,MAAO,IAYPlP,EAAKQ,aAAa0P,EAAAA,gBAEtB,OAvBgChM,EAAAA,EAAAA,GAY9BtG,OAAAuG,eAAI4L,EAAAvR,UAAA,kBAAe,KAAnB,WACE,MAAO,CAAEyB,MAAO3B,KAAK2B,4DA1BxBoD,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,YACVC,SAAU,2WA4BPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,4CAhB1BiH,EAAAA,aAAY9I,KAAA,CAAC+I,EAAAA,gBAsBhBoH,GAvBgChQ,GC1BhCoQ,GAAA,WAKA,SAAAA,KAM+B,2BAN9B/K,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC0K,IACfzK,gBAAiB,CAACyK,IAClBxK,QAAS,CAACwK,IACVvK,QAAS,CAACC,EAAAA,kBAEmB0K,EAX/B,kBC8DE,SAAAC,EAESvP,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,qBAAmBA,YAFlB0B,EAAAa,oBAAAA,EARFb,EAAAC,MAAqB,CAC1B8D,UAAWpE,EACXsE,OAAQtE,EACRsF,MAAO,MAwBX,OApCiCf,EAAAA,EAAAA,GAsBxBkM,EAAA5R,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa6P,EAAAA,wBAAyB,CACzC7I,UAAWlJ,KAAKkJ,UAChBrE,GAAI7E,KAAK6E,GACTmN,IAAKhS,KAAKgS,MAEZxM,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGT8R,EAAA5R,UAAA0O,aAAP,SAAoBpI,GAClBA,EAAMC,iBACND,EAAME,kBACN1G,KAAK2B,MAAMgE,OAAO3F,KAAK2B,MAAMgF,4BAxDhC5B,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,aACVC,SAAU,wjBAoCPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,yCAd1BF,EAAAA,yBAGAA,EAAAA,kBACAA,EAAAA,mBACAA,EAAAA,SA6BH6O,GApCiCrQ,GC/CjCwQ,GAAA,WAKA,SAAAA,KAMgC,2BAN/BnL,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC+K,IACf9K,gBAAiB,CAAC8K,IAClB7K,QAAS,CAAC6K,IACV5K,QAAS,CAACC,EAAAA,kBAEoB8K,EAXhC,kBCsGE,SAAAC,EAES3P,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,eAAaA,YAFZ0B,EAAAa,oBAAAA,EA/BOb,EAAAyQ,SAAmB,IACnBzQ,EAAAuE,UAAoB,KACpBvE,EAAA0Q,YAAsB,KAMtB1Q,EAAAsN,UAAqB,EAG9BtN,EAAA2Q,cAAkC,GAClC3Q,EAAA4Q,cAAkC,GAWlC5Q,EAAAC,MAA2B,CAChCsK,MAAO,CAAE0B,IAAKlE,UAAWmE,IAAKnE,WAC9B9D,OAAQtE,EACR2C,MAAO,CAAC,EAAG,MAmCf,OA/DqC4B,EAAAA,EAAAA,GAgBnCtG,OAAAuG,eAAIqM,EAAAhS,UAAA,OAAI,KAAR,eACQ8O,EAAY9N,EAAiBlB,KAAKgP,WACxC,OAAO,EAAI/B,KAAKgC,IAAI,GAAID,oCAG1B1P,OAAAuG,eAAIqM,EAAAhS,UAAA,YAAS,KAAb,WACE,OAAOF,KAAK2B,MAAMsK,MAAM0B,MAAQ3N,KAAK2B,MAAMsK,MAAM2B,qCAgB5CsE,EAAAhS,UAAAoC,SAAP,WACEtC,KAAKkC,aAAagN,EAAAA,aAAc,CAC9BhG,UAAWlJ,KAAKkJ,UAChB0E,IAAK1M,EAAiBlB,KAAK4N,KAC3BD,IAAKzM,EAAiBlB,KAAK2N,KAC3BqB,UAAW9N,EAAiBlB,KAAKgP,aAGnCxJ,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGTkS,EAAAhS,UAAA0O,aAAP,SAAoBpI,EAAYrB,OACxBwB,EAAQzF,EAAiBsF,EAAM+L,OAAO5L,OAE/B,QAATxB,EACFnF,KAAKqS,cAAgB1L,EAErB3G,KAAKsS,cAAgB3L,GAIlBuL,EAAAhS,UAAA8P,aAAP,SAAoBxJ,GAClBA,EAAMC,iBACNzG,KAAK2B,MAAMgE,OAAO,CAAC3F,KAAKqS,cAAerS,KAAKsS,qCAvH/CvN,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,kBACVC,SAAU,wkDAwFPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,4CA9B1BF,EAAAA,yBACAA,EAAAA,2BACAA,EAAAA,yBAGAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,yBACAA,EAAAA,SAqDHiP,GA/DqCzQ,GCvErC+Q,GAAA,WAKA,SAAAA,KAMoC,2BANnC1L,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACmL,IACflL,gBAAiB,CAACkL,IAClBjL,QAAS,CAACiL,IACVhL,QAAS,CAACC,EAAAA,kBAEwBqL,EAXpC,GCAAC,GAAA,WAEA,SAAAA,KAqBA,2BArBC1N,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,YACVC,SAAU,2VAiBThC,EAAAA,sBACAA,EAAAA,SACHwP,EAvBA,GCAAC,GAAA,WAMA,SAAAA,KAM+B,2BAN9B5L,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC0L,IACfzL,gBAAiB,CAACyL,IAClBxL,QAAS,CAACwL,IACVvL,QAAS,CAACC,EAAAA,kBAEmBuL,EAZ/B,kBCmCE,SAAAC,EACUC,EAEDrQ,GAHT,IAAAb,EAKE8D,EAAA5E,KAAAZ,KAAM,cAAYA,YAJV0B,EAAAkR,QAAAA,EAEDlR,EAAAa,oBAAAA,EAPFb,EAAAC,MAAwB,CAC7BgE,OAAQtE,KAkCZ,OAzCoCuE,EAAAA,EAAAA,GAkBlCtG,OAAAuG,eACI8M,EAAAzS,UAAA,mBAAgB,KADpB,SACqBoO,GACnBtO,KAAK6S,yBAA2BvE,GAC3BtO,KAAK8S,QAAUxE,IAClBtO,KAAK8S,OAAS9S,KAAK4S,QAAQG,KAAKzE,GAAQnO,2CAIrCwS,EAAAzS,UAAAoC,SAAP,WACEtC,KAAKkC,aAAa8Q,EAAAA,iBAAkB,CAClC7O,iBAAkBnE,KAAK6S,2BAEzBrN,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,OAGhB2S,EAAAzS,UAAA+S,UAAA,WACMjT,KAAK8S,SACS9S,KAAK8S,OAAOI,KAAKlT,KAAK6S,2BAEpC7S,KAAK2B,MAAMgE,OAAO3F,KAAK6S,gDAzC9B9N,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,gBACVC,SAAU,gDAjBVkO,EAAAA,mDA+BG/N,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,oDAM1BF,EAAAA,SAuBH0P,GAzCoClR,GCzBpC2R,GAAA,WAKA,SAAAA,KAMmC,2BANlCtM,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC4L,IACf3L,gBAAiB,CAAC2L,IAClB1L,QAAS,CAAC0L,IACVzL,QAAS,CAACC,EAAAA,kBAEuBiM,EAXnC,kBC4CE,SAAAC,EAES9Q,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,wBAAsBA,YAFrB0B,EAAAa,oBAAAA,EAZFb,EAAAC,MAAQ,CACb+D,MAAO,MAuBX,OA7B8CE,EAAAA,EAAAA,GAS5CtG,OAAAuG,eAAIwN,EAAAnT,UAAA,kBAAe,KAAnB,WACE,MAAO,CACLwF,MAAO1F,KAAK2B,MAAM+D,wCAWf2N,EAAAnT,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaoR,EAAAA,kBAAmB,CACnChN,eAAgBtG,KAAKsG,iBAGvBd,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BA1CjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,6BACVC,SAAU,iXA6BPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,4CAf1BiH,EAAAA,aAAY9I,KAAA,CAAC+I,EAAAA,qCAEbpH,EAAAA,SA0BHoQ,GA7B8C5R,GC7B9C8R,GAAA,WAKA,SAAAA,KAM6C,2BAN5CzM,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACsM,IACfrM,gBAAiB,CAACqM,IAClBpM,QAAS,CAACoM,IACVnM,QAAS,CAACC,EAAAA,kBAEiCoM,EAX7C,kBCmBE,SAAAC,EAESjR,GAFT,IAAAb,EAIE8D,EAAA5E,KAAAZ,KAAM,qBAAmBA,YAFlB0B,EAAAa,oBAAAA,IAaX,OAtB2CqD,EAAAA,EAAAA,GAclC4N,EAAAtT,UAAAoC,SAAP,WACEtC,KAAKkC,aAAaoR,EAAAA,kBAAmB,CACnCG,eAAgBzT,KAAKyT,eACrBC,sBAAuB1T,KAAK0T,wBAG9BlO,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BAxBjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,yBACVC,SAAU,4EAUPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,kDAP1BF,EAAAA,qCAIAA,EAAAA,SAiBHuQ,GAtB2C/R,GCZ3CkS,GAAA,WAKA,SAAAA,KAM0C,2BANzC7M,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAACyM,IACfxM,gBAAiB,CAACwM,IAClBvM,QAAS,CAACuM,IACVtM,QAAS,CAACC,EAAAA,kBAE8BwM,EAX1C,kBCgJE,SAAAC,EAESrR,EACCsR,GAHV,IAAAnS,EAKE8D,EAAA5E,KAAAZ,KAAM,gBAAcA,YAHb0B,EAAAa,oBAAAA,EACCb,EAAAmS,KAAAA,EA5BMnS,EAAAoS,YAAsB,kBAE/BpS,EAAAqS,oBACL,kDAEKrS,EAAAC,MAAe,CACpBqS,mBAAoBvK,UACpBwK,YAAaxK,UACbyK,gBAAiB7S,EACjB8S,oBAAqB,CACnBC,OAAQ,UACRC,WAAY,GACZC,eAAe,EACfC,UAAW9K,WAEb+K,gBAAiB,CACfJ,OAAQ,UACRG,UAAW9K,UACX4K,WAAY,GACZC,eAAe,EACfL,aAAa,EACbD,oBAAoB,IAmBjBtS,EAAA6E,YAAW,SAAIC,GACnBA,EAAmB,cAAiBmK,OACrCjP,EAAKC,MAAMuS,mBAGNxS,EAAA+S,kBAAiB,WACtB,MAA0C,UAA1C/S,EAAKC,MAAMwS,oBAAoBC,QACc,gBAA7C1S,EAAKC,MAAMwS,oBAAoBI,WAE1B7S,EAAAE,YAAW,SAAID,GACpBD,EAAKmS,KAAKa,IAAG,WACXhT,EAAKC,MAAKvB,EAAA,GACLuB,EAAK,CACR6S,gBAAiB,CACfJ,OAAQzS,EAAMwS,oBAAoBC,OAClCG,UAAW5S,EAAMwS,oBAAoBI,UACrCF,WAAY1S,EAAMwS,oBAAoBE,WACtCC,cAAe3S,EAAMwS,oBAAoBG,cACzCL,YAAatS,EAAMsS,YACnBD,mBAAoBrS,EAAMqS,2BAKpC,OArEsCpO,EAAAA,EAAAA,GAsCpCgO,EAAA1T,UAAAoC,SAAA,WACEtC,KAAKkC,aAAayS,EAAAA,mBAAoB,CACpCC,iBAAkB5U,KAAK4U,mBAEzBpP,EAAAtF,UAAMoC,SAAQ1B,KAAAZ,2BAjGjB+E,EAAAA,UAASzD,KAAA,CAAC,CACT0D,SAAU,mBACVC,SAAU,inEAoFPG,EAAAA,OAAM9D,KAAA,CAACsF,EAAAA,WAAU,WAAO,OAAAzD,cA5I3B0R,EAAAA,0CA8GCzK,EAAAA,aAAY9I,KAAA,CAAC,0BACb8I,EAAAA,aAAY9I,KAAA,CAAC,oCAEb2B,EAAAA,2BACAA,EAAAA,mCACAA,EAAAA,SA+DH2Q,GArEsCnS,GClHtCqT,GAAA,WAKA,SAAAA,KAMqC,2BANpChO,EAAAA,SAAQxF,KAAA,CAAC,CACRyF,aAAc,CAAC6M,IACf5M,gBAAiB,CAAC4M,IAClB3M,QAAS,CAAC2M,IACV1M,QAAS,CAACC,EAAAA,kBAEyB2N,EAXrC,GCyBMC,GAAgBC,GAA8BC,EAC9CC,GAASC,GAAuBC,MC0ChCC,GAAe,CACnBnK,EACAZ,EACA0G,GACAtJ,EACAmE,EACA0B,EACA0C,EACApH,EACAsI,GACAnF,EACA6F,GACAI,GACAhH,EACAnD,EACAY,EACA8I,GACApC,EACAvI,EACAkD,EACAyI,GACAE,GACAU,GACAG,GACAI,GACAmB,IAGFQ,GAAA,WAAA,SAAAA,KAI8B,2BAJ7BxO,EAAAA,SAAQxF,KAAA,CAAC,CACR2F,QAASoO,GACTnO,QAAS,CAACgE,EAAyBC,eAEPmK,EAJ9B,iBAMA,SAAAC,KAKA,OAHgBA,EAAApK,QAAd,WACE,MAAO,CAAEC,SAAUkK,yBAHtBxO,EAAAA,SAAQxF,KAAA,CAAC,CAAE4F,QAASmO,GAAcpO,QAASoO,OAK5CE,isBD/EA,SAAgBC,GAAsB9I,OACpC+I,EAAA/I,EAAA+I,MACAC,EAAAhJ,EAAAgJ,OACAC,EAAAjJ,EAAAiJ,WACAC,EAAAlJ,EAAAkJ,YACAC,EAAAnJ,EAAAmJ,cACAC,EAAApJ,EAAAoJ,aACAC,EAAArJ,EAAAtK,QAEMoC,EAAeuQ,GAAcU,EAAOC,OAF1C,IAAAK,EAAA,GAAAA,GAmEA,OA/DAvR,EAAaC,gBAAgB,YAAYC,EAAAA,QAAeC,KAAI,KAC5DH,EAAaC,gBAAgB,0BAA0BvB,EAAO,KAC9DsB,EAAaC,gBAAgB,iCAAiCvB,EAAO,KAErE,EAAsB8S,SAAQ,SAC5BC,EACA7T,OAEI8T,EAAU,IAAIN,EASlBM,GAPAA,EAAUA,EAAQC,IAChB,eACmB,SAAnB/T,EAAQgU,OACJ,oCACA,qBAGYD,IAAI,SAAU,wBAE1BE,EACJJ,GAAUA,EAAOK,SAAS,KAAO,IAAM,KAAOpB,GAAO9S,EAAQ8T,SAEzDK,EAAmBT,EAAa,SAAS1T,EAAQoU,KAAI,KAE3D,GAAIX,EAAcY,OAAOF,GAAmB,KACpCG,EAAWC,KAAKC,MACpBf,EAAc/M,IAAIyN,EAAkBI,KAAKE,UAAU,MAGrD,OAAO/U,QAAQC,QAAQ,CACrB+U,WAAYJ,EAAStC,OACrBoC,KAAME,EAASF,KACfN,QAASQ,EAASR,UAItB,OAAO,IAAIpU,QAAO,SAAEC,EAASgV,GAC3BpB,EACGqB,QAAQ5U,EAAQgU,OAAQC,EAAK,CAC5BH,QAAOA,EACPM,KAAMpU,EAAQoU,KACdS,QAAS,aAEVC,UAAS,SACRR,GACEb,EAAcM,IAAII,EAAkBI,KAAKE,UAAUH,IAEnD3U,EAAQ,CACN+U,WAAYJ,EAAStC,OACrBoC,KAAME,EAASF,KACfN,QAASQ,EAASR,WAErB,SACDQ,GACE,OAAAK,EAAO,CACLD,WAAYJ,EAAStC,OACrBoC,KAAME,EAASF,KACfN,QAASQ,EAASR,eAMvB1R,wBEnGT,SAAgB2S,GAAmBC,GACjC,GAAIA,GAAOA,EAAIf,KAAOe,EAAIf,IAAIC,SAAS,KAAM,KACrC1F,EAAQwG,EAAIf,IAAIgB,MAAM,KAAK,GACjC,OAAOC,EAAAA,oBAAoBC,gCAAgC3G,GAG7D,MAAO","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export function bem(widgetName: string) {\n  const cx = function(element?: string, subElement?: string) {\n    let cssClass = `ais-${widgetName}`;\n    if (element) {\n      cssClass += `-${element}`;\n    }\n    if (subElement) {\n      cssClass += `--${subElement}`;\n    }\n    return cssClass;\n  };\n  return cx;\n}\n\nexport function parseNumberInput(input?: number | string) {\n  return typeof input === 'string' ? parseInt(input, 10) : input;\n}\n\nexport function noop(...args: any[]): void {}\n\nexport function capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1);\n}\n","import { Input, OnDestroy, OnInit } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { bem, noop } from './utils';\n\nexport class Widget {\n  public init: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: object[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public getConfiguration?: () => object;\n  public render: (\n    params: {\n      templatesConfig: object;\n      state: object;\n      results: {}[];\n      createURL: (value: any) => string;\n      instantSearchInstance: object;\n    }\n  ) => void;\n  public dispose: (\n    params: {\n      helper: object;\n      state: object;\n    }\n  ) => object | void;\n}\n\nexport type Connector = (\n  renderFn: (state: object, isFirstRendering: boolean) => void,\n  unmountFn: () => void\n) => (widgetOptions?: object) => Widget;\n\nexport class BaseWidget implements OnInit, OnDestroy {\n  public instantSearchParent: any;\n\n  @Input() public autoHideContainer?: boolean;\n\n  public widget?: Widget;\n  public state?: object = {};\n  public cx: Function;\n\n  constructor(widgetName: string) {\n    this.cx = bem(widgetName);\n  }\n\n  public createWidget(connector: Connector, options: object = {}) {\n    this.widget = connector(this.updateState, noop)(options);\n  }\n\n  public ngOnInit() {\n    // add widget to the InstantSearch Instance\n    this.instantSearchParent.addWidget(this.widget);\n  }\n\n  public ngOnDestroy() {\n    if (isPlatformBrowser(this.instantSearchParent.platformId)) {\n      this.instantSearchParent.removeWidget(this.widget);\n    }\n  }\n\n  public updateState = (\n    state: {},\n    isFirstRendering: boolean\n  ): Promise<void> | void => {\n    if (isFirstRendering) {\n      return Promise.resolve().then(() => {\n        this.state = state;\n      });\n    }\n\n    this.state = state;\n  };\n\n  // helper method for genering item list className\n  public getItemClass(item: { isRefined?: boolean }) {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    return className;\n  }\n}\n","export const VERSION = '3.0.0-beta.5';\n","import {\n  AfterViewInit,\n  Component,\n  Input,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  PLATFORM_ID,\n  VERSION as AngularVersion,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\nimport * as algoliasearchProxy from 'algoliasearch/lite';\nimport instantsearch from 'instantsearch.js/es';\nimport { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\nimport { Widget } from '../base-widget';\nimport { VERSION } from '../version';\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\n\nexport type SearchRequest = {\n  indexName: string;\n  params: SearchRequestParameters;\n};\n\nexport type SearchForFacetValuesRequest = {\n  indexName: string;\n  params: SearchForFacetValuesRequestParameters;\n};\n\n// Documentation: https://www.algolia.com/doc/api-reference/search-api-parameters/\nexport type SearchParameters = {\n  // Attributes\n  attributesToRetrieve?: string[];\n  restrictSearchableAttributes?: string[];\n\n  // Filtering\n  filters?: string;\n  facetFilters?: string[];\n  optionalFilters?: string[];\n  numericFilters?: string[];\n  sumOrFiltersScores?: boolean;\n\n  // Faceting\n  facets?: string[];\n  maxValuesPerFacet?: number;\n  facetingAfterDistinct?: boolean;\n  sortFacetValuesBy?: string;\n\n  // Highlighting / Snippeting\n  attributesToHighlight?: string[];\n  attributesToSnippet?: string[];\n  highlightPreTag?: string;\n  highlightPostTag?: string;\n  snippetEllipsisText?: string;\n  restrictHighlightAndSnippetArrays?: boolean;\n\n  // Pagination\n  page?: number;\n  hitsPerPage?: number;\n  offset?: number;\n  length?: number;\n\n  // Typos\n  minWordSizefor1Typo?: number;\n  minWordSizefor2Typos?: number;\n  typoTolerance?: string | boolean;\n  allowTyposOnNumericTokens?: boolean;\n  ignorePlurals?: boolean | string[];\n  disableTypoToleranceOnAttributes?: string[];\n\n  // Geo-Search\n  aroundLatLng?: string;\n  aroundLatLngViaIP?: boolean;\n  aroundRadius?: number | 'all';\n  aroundPrecision?: number;\n  minimumAroundRadius?: number;\n  insideBoundingBox?: GeoRectangle | GeoRectangle[];\n  insidePolygon?: GeoPolygon | GeoPolygon[];\n\n  // Query Strategy\n  queryType?: string;\n  removeWordsIfNoResults?: string;\n  advancedSyntax?: boolean;\n  optionalWords?: string | string[];\n  removeStopWords?: boolean | string[];\n  disableExactOnAttributes?: string[];\n  exactOnSingleWordQuery?: string;\n  alternativesAsExact?: string[];\n\n  // Query Rules\n  enableRules?: boolean;\n  ruleContexts?: string[];\n\n  // Advanced\n  minProximity?: number;\n  responseFields?: string[];\n  maxFacetHits?: number;\n  percentileComputation?: boolean;\n  distinct?: number | boolean;\n  getRankingInfo?: boolean;\n  clickAnalytics?: boolean;\n  analytics?: boolean;\n  analyticsTags?: string[];\n  synonyms?: boolean;\n  replaceSynonymsInHighlight?: boolean;\n};\n\nexport interface SearchRequestParameters extends SearchParameters {\n  query: string;\n}\n\nexport interface SearchForFacetValuesRequestParameters\n  extends SearchParameters {\n  facetQuery: string;\n  facetName: string;\n}\n\nexport type GeoRectangle = [number, number, number, number];\nexport type GeoPolygon = [number, number, number, number, number, number];\n\nexport type FacetSortByStringOptions =\n  | 'count'\n  | 'count:asc'\n  | 'count:desc'\n  | 'name'\n  | 'name:asc'\n  | 'name:desc'\n  | 'isRefined';\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-multiple-indexes\nexport type SearchResponse = {\n  hits: Hit[];\n  page?: number;\n  nbHits?: number;\n  nbPages?: number;\n  hitsPerPage?: number;\n  processingTimeMS?: number;\n  query?: string;\n  params?: string;\n  index?: string;\n};\n\ntype HitAttributeHighlightResult = {\n  value: string;\n  matchLevel: 'none' | 'partial' | 'full';\n  matchedWords: string[];\n  fullyHighlighted?: boolean;\n};\n\ntype HitHighlightResult = {\n  [attribute: string]:\n    | HitAttributeHighlightResult\n    | HitAttributeHighlightResult[]\n    | HitHighlightResult;\n};\n\ntype HitAttributeSnippetResult = Pick<\n  HitAttributeHighlightResult,\n  'value' | 'matchLevel'\n>;\n\ntype HitSnippetResult = {\n  [attribute: string]:\n    | HitAttributeSnippetResult\n    | HitAttributeSnippetResult[]\n    | HitSnippetResult;\n};\n\nexport type Hit = {\n  [attribute: string]: any;\n  objectID: string;\n  _highlightResult?: HitHighlightResult;\n  _snippetResult?: HitSnippetResult;\n  _rankingInfo?: {\n    promoted: boolean;\n    nbTypos: number;\n    firstMatchedWord: number;\n    proximityDistance?: number;\n    geoDistance: number;\n    geoPrecision?: number;\n    nbExactWords: number;\n    words: number;\n    filters: number;\n    userScore: number;\n    matchedGeoLocation?: {\n      lat: number;\n      lng: number;\n      distance: number;\n    };\n  };\n  _distinctSeqID?: number;\n  __position: number;\n  __queryID?: string;\n};\n\n// Documentation: https://www.algolia.com/doc/rest-api/search/?language=javascript#search-for-facet-values\nexport type SearchForFacetValuesResponse = {\n  value: string;\n  highlighted?: string;\n  count?: number;\n};\n\nexport type SearchClient = {\n  addAlgoliaAgent?: (agent: string) => void;\n  search: (requests: SearchRequest[]) => Promise<{ results: SearchResponse[] }>;\n  searchForFacetValues?: (\n    requests: SearchForFacetValuesRequest[]\n  ) => Promise<{ facetHits: SearchForFacetValuesResponse[] }[]>;\n};\n\nexport type InstantSearchConfig = {\n  searchClient: SearchClient;\n  indexName: string;\n\n  numberLocale?: string;\n  searchFunction?: (helper: AlgoliaSearchHelper) => void;\n  searchParameters?: SearchParameters | void;\n  urlSync?:\n    | boolean\n    | {\n        mapping?: object;\n        threshold?: number;\n        trackedParameters?: string[];\n        useHash?: boolean;\n        getHistoryState?: () => object;\n      };\n  routing?:\n    | boolean\n    | {\n        router?: {\n          onUpdate: (cb: (object) => void) => void;\n          read: () => object;\n          write: (routeState: object) => void;\n          createURL: (routeState: object) => string;\n          dispose: () => void;\n        };\n        stateMapping?: {\n          stateToRoute(object): object;\n          routeToState(object): object;\n        };\n      };\n};\n\nexport class InstantSearchInstance {\n  public start: () => void;\n\n  public addWidget: (widget: Widget) => void;\n  public addWidgets: (widgets: Widget[]) => void;\n\n  public removeWidget: (widget: Widget) => void;\n  public removeWidgets: (widgets: Widget[]) => void;\n\n  // EventEmmiter\n  public on: (eventName: string, callback: Function) => void;\n  public removeListener: (eventName: string, callback: Function) => void;\n\n  public helper: {\n    lastResults: Object;\n    state: Object;\n  };\n\n  public refresh: () => void;\n  public dispose: () => void;\n}\n\n@Component({\n  selector: 'ais-instantsearch',\n  template: `<ng-content></ng-content>`,\n})\nexport class NgAisInstantSearch implements AfterViewInit, OnInit, OnDestroy {\n  @Input() public config: InstantSearchConfig;\n  @Input() public instanceName: string = 'default';\n\n  @Output()\n  change: EventEmitter<{ results: {}; state: {} }> = new EventEmitter<{\n    results: {};\n    state: {};\n  }>();\n\n  public instantSearchInstance: InstantSearchInstance;\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n\n  public ngOnInit() {\n    this.createInstantSearchInstance(this.config);\n  }\n\n  public ngAfterViewInit() {\n    this.instantSearchInstance.start();\n  }\n\n  public ngOnDestroy() {\n    this.instantSearchInstance.removeListener('render', this.onRender);\n    this.instantSearchInstance.dispose();\n  }\n\n  public createInstantSearchInstance(config: InstantSearchConfig) {\n    // add default searchParameters with highlighting config\n    if (!config.searchParameters) config.searchParameters = {};\n    Object.assign(config.searchParameters, {\n      highlightPreTag: '__ais-highlight__',\n      highlightPostTag: '__/ais-highlight__',\n    });\n\n    // remove URLSync widget if on SSR\n    if (!isPlatformBrowser(this.platformId)) {\n      if (typeof config.urlSync !== 'undefined') delete config.urlSync;\n      if (typeof config.routing !== 'undefined') delete config.routing;\n    }\n\n    if (typeof config.searchClient.addAlgoliaAgent === 'function') {\n      config.searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n      config.searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n    }\n\n    this.instantSearchInstance = instantsearch(config);\n    this.instantSearchInstance.on('render', this.onRender);\n  }\n\n  public addWidget(widget: Widget) {\n    this.instantSearchInstance.addWidget(widget);\n  }\n\n  public removeWidget(widget: Widget) {\n    this.instantSearchInstance.removeWidget(widget);\n  }\n\n  public refresh() {\n    this.instantSearchInstance.refresh();\n  }\n\n  onRender = () => {\n    this.change.emit({\n      results: this.instantSearchInstance.helper.lastResults,\n      state: this.instantSearchInstance.helper.state,\n    });\n  };\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectBreadcrumb } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type BreadcrumbState = {\n  createURL: (value: string) => string;\n  items: BreadcrumbItem[];\n  refine: (value: string) => void;\n};\n\nexport type BreadcrumbItem = {\n  name: string;\n  value: string;\n};\n\n@Component({\n  selector: 'ais-breadcrumb',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of items\"\n          [ngClass]=\"[cx('item'), item.isLast ? cx('item', 'selected') : '']\"\n          (click)=\"handleClick($event, item)\"\n        >\n          <span\n            *ngIf=\"item.separator\"\n            [class]=\"cx('separator')\"\n            aria-hidden=\"true\"\n          >\n            >\n          </span>\n          <a\n            [class]=\"cx('link')\"\n            href=\"{{state.createURL(item.value)}}\"\n            *ngIf=\"!item.isLast\"\n            (click)=\"handleClick($event, item)\"\n          >\n            {{item.label}}\n          </a>\n\n          <span *ngIf=\"item.isLast\">\n            {{item.label}}\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisBreadcrumb extends BaseWidget {\n  // instance options\n  @Input() public attributes: string[];\n  @Input() public rootPath?: string;\n  @Input() public separator?: string;\n  @Input()\n  public transformItems?: <U extends BreadcrumbItem>(\n    items: BreadcrumbItem[]\n  ) => U[];\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get items() {\n    return this.state.items.map((item, idx) => ({\n      ...item,\n      separator: idx !== 0,\n      isLast: idx === this.state.items.length - 1,\n      // FIXME: get rid of this. We can use `last` local variable\n      // https://angular.io/api/common/NgForOf#local-variables\n    }));\n  }\n\n  public state: BreadcrumbState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Breadcrumb');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectBreadcrumb, {\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, item: BreadcrumbItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (item.value) {\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisBreadcrumb } from './breadcrumb';\n\n@NgModule({\n  declarations: [NgAisBreadcrumb],\n  entryComponents: [NgAisBreadcrumb],\n  exports: [NgAisBreadcrumb],\n  imports: [CommonModule],\n})\nexport class NgAisBreadcrumbModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectClearRefinements } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\ntype ClearRefinementsState = {\n  hasRefinements: boolean;\n  refine: () => void;\n  createURL: () => string;\n};\n\n@Component({\n  selector: 'ais-clear-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <button\n        [class]=\"cx('button') + (!state.hasRefinements ? (' ' + cx('button', 'disabled')) : '')\"\n        (click)=\"handleClick($event)\"\n        [disabled]=\"!state.hasRefinements\"\n      >\n        {{resetLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisClearRefinements extends BaseWidget {\n  // rendering options\n  @Input() public resetLabel: string = 'Clear refinements';\n\n  // instance options\n  @Input() public includedAttributes: string[];\n  @Input() public excludedAttributes: string[];\n  @Input() public transformItems?: (items: string[]) => string[];\n\n  public state: ClearRefinementsState = {\n    hasRefinements: false,\n    refine: noop,\n    createURL: () => '#',\n  };\n\n  get isHidden(): boolean {\n    return !this.state.hasRefinements && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ClearRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectClearRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent) {\n    event.preventDefault();\n\n    if (this.state.hasRefinements) {\n      this.state.refine();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisClearRefinements } from './clear-refinements';\n\n@NgModule({\n  declarations: [NgAisClearRefinements],\n  entryComponents: [NgAisClearRefinements],\n  exports: [NgAisClearRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisClearRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectCurrentRefinements } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type CurrentRefinementsItem = {\n  attribute: string;\n  label: string;\n  refine: Function;\n  refinements: {\n    type: string;\n    // TODO: create multiple types for each of the available refinement\n    // https://github.com/algolia/angular-instantsearch/pull/463#discussion_r255911232\n    attribute: string;\n    label: string;\n    value: string;\n    operator?: string;\n    exhaustive?: boolean;\n    count?: number;\n  }[];\n};\n\nexport type CurrentRefinementsState = {\n  createURL: Function;\n  refine: Function;\n  items: CurrentRefinementsItem[];\n};\n\n@Component({\n  selector: 'ais-current-refinements',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul\n        [class]=\"cx('list')\"\n        *ngFor=\"let item of state.items\"\n      >\n        <li [class]=\"cx('item')\">\n          <span [class]=\"cx('label')\">{{item.label | titlecase}}:</span>\n\n          <span\n            [class]=\"cx('category')\"\n            *ngFor=\"let refinement of item.refinements\"\n          >\n            <span [class]=\"cx('categoryLabel')\">{{refinement.label}}</span>\n            <button [class]=\"cx('delete')\" (click)=\"handleClick($event, refinement)\">â</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisCurrentRefinements extends BaseWidget {\n  // instance options\n  @Input() public includedAttributes?: string[];\n  @Input() public excludedAttributes?: string[];\n  @Input()\n  public transformItems?: <U extends CurrentRefinementsItem>(\n    items: CurrentRefinementsItem[]\n  ) => U[];\n\n  public state: CurrentRefinementsState = {\n    createURL: noop,\n    refine: noop,\n    items: [],\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('CurrentRefinements');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectCurrentRefinements, {\n      includedAttributes: this.includedAttributes,\n      excludedAttributes: this.excludedAttributes,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, refinement: {}) {\n    event.preventDefault();\n    this.state.refine(refinement);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisCurrentRefinements } from './current-refinements';\n\n@NgModule({\n  declarations: [NgAisCurrentRefinements],\n  entryComponents: [NgAisCurrentRefinements],\n  exports: [NgAisCurrentRefinements],\n  imports: [CommonModule],\n})\nexport class NgAisCurrentRefinementsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHierarchicalMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type HierarchicalMenuState = {\n  createURL: (value: string) => string;\n  items: HierarchicalMenuItem[];\n  refine: (value: string) => void;\n};\n\nexport type HierarchicalMenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n  data: HierarchicalMenuItem[] | null;\n};\n\n@Component({\n  selector: 'ais-hierarchical-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list') + ' ' + cx('list', 'lvl0')\">\n        <ais-hierarchical-menu-item\n          *ngFor=\"let item of state.items\"\n          [item]=\"item\"\n          [createURL]=\"state.createURL\"\n          [refine]=\"state.refine\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisHierarchicalMenu extends BaseWidget {\n  @Input() public attributes: string[];\n  @Input() public separator?: string;\n  @Input() public rootPath?: string;\n  @Input() public showParentLevel?: boolean;\n  @Input() public limit?: number | string;\n  @Input()\n  public sortBy?:\n    | FacetSortByStringOptions[]\n    | ((a: HierarchicalMenuItem, b: HierarchicalMenuItem) => number);\n\n  @Input()\n  public transformItems?: <U extends HierarchicalMenuItem>(\n    items: HierarchicalMenuItem[]\n  ) => U[];\n\n  public state: HierarchicalMenuState = {\n    createURL: () => '#',\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HierarchicalMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHierarchicalMenu, {\n      limit: parseNumberInput(this.limit),\n      attributes: this.attributes,\n      rootPath: this.rootPath,\n      separator: this.separator,\n      showParentLevel: this.showParentLevel,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\nimport {\n  HierarchicalMenuItem,\n  HierarchicalMenuState,\n} from './hierarchical-menu';\n\n@Component({\n  selector: 'ais-hierarchical-menu-item',\n  template: `\n    <li\n      [class]=\"getItemClass(item)\"\n      (click)=\"handleClick($event, item)\"\n    >\n      <a\n        [class]=\"cx('link')\"\n        href=\"{{createURL(item.value)}}\"\n        (click)=\"handleClick($event, item)\"\n      >\n        <span [class]=\"cx('label')\">{{item.label}}</span>\n        <span [class]=\"cx('count')\">{{item.count}}</span>\n      </a>\n\n      <ul\n        [class]=\"getListClass()\"\n        *ngIf=\"item.isRefined && isArray(item.data) && item.data.length > 0\"\n      >\n        <ais-hierarchical-menu-item\n          *ngFor=\"let child of item.data\"\n          [item]=\"child\"\n          [createURL]=\"createURL\"\n          [refine]=\"refine\"\n          [lvl]=\"lvl + 1\"\n        >\n        </ais-hierarchical-menu-item>\n      </ul>\n    </li>\n  `,\n})\nexport class NgAisHierarchicalMenuItem {\n  @Input() public lvl: number = 1;\n  @Input() public refine: HierarchicalMenuState['refine'];\n  @Input() public createURL: HierarchicalMenuState['createURL'];\n  @Input() public item: HierarchicalMenuItem;\n\n  public cx = bem('HierarchicalMenu');\n\n  public getItemClass(item): string {\n    let className = this.cx('item');\n\n    if (item.isRefined) {\n      className = `${className} ${this.cx('item', 'selected')}`;\n    }\n\n    if (this.isArray(item.data) && item.data.length > 0) {\n      className = `${className} ${this.cx('item', 'parent')}`;\n    }\n\n    return className;\n  }\n\n  public getListClass(): string {\n    return `${this.cx('list')} ${this.cx('list', 'child')} ${this.cx(\n      'list',\n      `lvl${this.lvl}`\n    )}`;\n  }\n\n  public isArray(potentialArray: any): boolean {\n    return Array.isArray(potentialArray);\n  }\n\n  public handleClick(event: MouseEvent, item: HierarchicalMenuItem): void {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHierarchicalMenu } from './hierarchical-menu';\nimport { NgAisHierarchicalMenuItem } from './hierarchical-menu-item';\n\n@NgModule({\n  declarations: [NgAisHierarchicalMenu, NgAisHierarchicalMenuItem],\n  entryComponents: [NgAisHierarchicalMenu],\n  exports: [NgAisHierarchicalMenu],\n  imports: [CommonModule],\n})\nexport class NgAisHierarchicalMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectHitsPerPage } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type HitsPerPageState = {\n  items: HitsPerPageRenderingItem[];\n  refine: (value: number) => void;\n};\n\nexport type HitsPerPageInstanceItem = {\n  value: number;\n  label: string;\n  default?: boolean;\n};\n\nexport type HitsPerPageRenderingItem = {\n  value: number;\n  label: string;\n  isRefined: boolean;\n};\n\n@Component({\n  selector: 'ais-hits-per-page',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.items\"\n          [value]=\"item.value\"\n          [selected]=\"item.isRefined\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisHitsPerPage extends BaseWidget {\n  @Input() public items: HitsPerPageInstanceItem[];\n  @Input()\n  public transformItems?: <U extends HitsPerPageRenderingItem>(\n    items: HitsPerPageRenderingItem[]\n  ) => U[];\n\n  public state: HitsPerPageState = {\n    items: [],\n    refine: noop,\n    // TODO: add hasNoResults and disable <select> when true\n  };\n\n  get isHidden(): boolean {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('HitsPerPage');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectHitsPerPage, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHitsPerPage } from './hits-per-page';\n\n@NgModule({\n  declarations: [NgAisHitsPerPage],\n  entryComponents: [NgAisHitsPerPage],\n  exports: [NgAisHitsPerPage],\n  imports: [CommonModule],\n})\nexport class NgAisHitsPerPageModule {}\n","const get = require('lodash/get');\nimport { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-highlight',\n  template: `<span [class]=\"cx()\" [innerHtml]=\"content\"></span>`,\n})\nexport class NgAisHighlight {\n  @Input() attribute: string;\n  @Input() hit: { _highlightResult?: {}; label?: string; highlighted?: string };\n  @Input() tagName: string = 'em';\n\n  cx = bem('Highlight');\n\n  get content() {\n    if (this.attribute === 'highlighted') {\n      return this.hit.highlighted\n        ? this.replaceWithTagName(this.hit.highlighted)\n        : this.hit.label;\n    }\n\n    if (this.hit.hasOwnProperty('_highlightResult')) {\n      const attributeHighlighted = get(\n        this.hit._highlightResult,\n        this.attribute\n      );\n\n      // check that the attributeHighlighted is a string\n      if (\n        attributeHighlighted !== undefined &&\n        typeof attributeHighlighted.value === 'string'\n      ) {\n        return this.replaceWithTagName(attributeHighlighted.value);\n      }\n    }\n\n    const fallback = get(this.hit, this.attribute);\n    if (!fallback) {\n      console.warn(\n        `Could not find attribute [${\n          this.attribute\n        }] into hit object, will display an empty string.`\n      );\n\n      return '';\n    }\n\n    return fallback;\n  }\n\n  replaceWithTagName(value: string) {\n    return value\n      .replace(\n        new RegExp('<em>', 'g'),\n        `<${this.tagName} class=\"${this.cx('highlighted')}\">`\n      )\n      .replace(new RegExp('</em>', 'g'), `</${this.tagName}>`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlight } from './highlight';\n\n@NgModule({\n  declarations: [NgAisHighlight],\n  entryComponents: [NgAisHighlight],\n  exports: [NgAisHighlight],\n  imports: [CommonModule],\n})\nexport class NgAisHighlightModule {}\n","import {\n  Inject,\n  Input,\n  Component,\n  ContentChild,\n  TemplateRef,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch, Hit } from '../instantsearch/instantsearch';\n\nexport type HitsState = {\n  hits: Hit[];\n  results: {};\n};\n\n@Component({\n  selector: 'ais-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: TemplateRef<any>;\n\n  @Input() public escapeHTML?: boolean;\n  @Input() public transformItems?: <U extends Hit>(items: Hit[]) => U[];\n\n  public state: HitsState = {\n    hits: [],\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Hits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisHits } from './hits';\n\n@NgModule({\n  declarations: [NgAisHits],\n  entryComponents: [NgAisHits],\n  exports: [NgAisHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisHitsModule {}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectInfiniteHitsWithInsights } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch, Hit } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type InfiniteHitsState = {\n  hits: Hit[];\n  results: any;\n  isFirstPage: boolean;\n  isLastPage: boolean;\n  showMore: Function;\n  showPrevious: Function;\n};\n\n@Component({\n  selector: 'ais-infinite-hits',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: state\"></ng-container>\n\n      <!-- default rendering if no template specified -->\n      <button\n        [ngClass]=\"[cx('loadPrevious'), this.state.isFirstPage ? cx('loadPrevious', 'disabled') : '']\"\n        (click)=\"showPreviousHandler($event)\"\n        [disabled]=\"state.isFirstPage\"\n        *ngIf=\"showPrevious && !template\"\n      >\n        {{showPreviousLabel}}\n      </button>\n\n      <div *ngIf=\"!template\">\n        <ul [class]=\"cx('list')\">\n          <li\n            [class]=\"cx('item')\"\n            *ngFor=\"let hit of state.hits\"\n          >\n            <ais-highlight attribute=\"name\" [hit]=\"hit\">\n            </ais-highlight>\n          </li>\n        </ul>\n      </div>\n\n      <button\n        [ngClass]=\"[cx('loadMore'), this.state.isLastPage ? cx('loadMore', 'disabled') : '']\"\n        (click)=\"showMoreHandler($event)\"\n        [disabled]=\"state.isLastPage\"\n        *ngIf=\"!template\"\n      >\n        {{showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisInfiniteHits extends BaseWidget {\n  @ContentChild(TemplateRef) public template?: any;\n\n  // rendering options\n  @Input() public escapeHTML: boolean;\n  @Input() public showPrevious: boolean = false;\n  @Input() public showPreviousLabel: string = 'Show previous results';\n  @Input() public showMoreLabel: string = 'Show more results';\n  @Input() public transformItems?: <U extends Hit>(items: Hit[]) => U[];\n\n  // inner widget state returned from connector\n  public state: InfiniteHitsState = {\n    hits: [],\n    isFirstPage: false,\n    isLastPage: false,\n    showMore: noop,\n    showPrevious: noop,\n    results: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('InfiniteHits');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectInfiniteHitsWithInsights, {\n      escapeHTML: this.escapeHTML,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public showMoreHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showMore();\n  }\n\n  public showPreviousHandler(event: MouseEvent) {\n    event.preventDefault();\n    this.state.showPrevious();\n  }\n\n  updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) return;\n    this.state = state;\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisInfiniteHits } from './infinite-hits';\n\n@NgModule({\n  declarations: [NgAisInfiniteHits],\n  entryComponents: [NgAisInfiniteHits],\n  exports: [NgAisInfiniteHits],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisInfiniteHitsModule {}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { NgAisInstantSearch } from './instantsearch';\n\n@NgModule({\n  declarations: [NgAisInstantSearch],\n  entryComponents: [NgAisInstantSearch],\n  exports: [NgAisInstantSearch],\n  imports: [CommonModule],\n})\nexport class NgAisInstantSearchModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgAisInstantSearchModule,\n      providers: [],\n    };\n  }\n}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type MenuItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n};\n\nexport type MenuState = {\n  items: MenuItem[];\n  refine: Function;\n  createURL: Function;\n  isShowingMore: boolean;\n  canToggleShowMore: boolean;\n  toggleShowMore: Function;\n};\n\n@Component({\n  selector: 'ais-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <span [class]=\"cx('label')\">{{item.label}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n\n      <button\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [class]=\"showMoreClass\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisMenu extends BaseWidget {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public showMore?: boolean;\n  @Input() public limit?: number;\n  @Input() public showMoreLimit?: number;\n  @Input()\n  public sortBy?:\n    | FacetSortByStringOptions[]\n    | ((a: MenuItem, b: MenuItem) => number);\n  @Input()\n  public transformItems?: <U extends MenuItem>(items: MenuItem[]) => U[];\n\n  public state: MenuState = {\n    items: [],\n    refine: noop,\n    createURL: noop,\n    isShowingMore: false,\n    canToggleShowMore: false,\n    toggleShowMore: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  get showMoreClass() {\n    let className = this.cx('showMore');\n\n    if (!this.state.canToggleShowMore) {\n      className = `${className} ${this.cx('showMore', 'disabled')}`;\n    }\n\n    return className;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Menu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectMenu, {\n      attribute: this.attribute,\n      showMore: this.showMore,\n      limit: this.limit,\n      showMoreLimit: this.showMoreLimit,\n      sortBy: this.sortBy,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisMenu } from './menu';\n\n@NgModule({\n  declarations: [NgAisMenu],\n  entryComponents: [NgAisMenu],\n  exports: [NgAisMenu],\n  imports: [CommonModule],\n})\nexport class NgAisMenuModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectNumericMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type NumericMenuItem = {\n  label: string;\n  value: string;\n  isRefined: boolean;\n};\n\nexport type NumericMenuState = {\n  createURL: Function;\n  items: NumericMenuItem[];\n  refine: Function;\n  hasNoResults?: boolean;\n};\n\n@Component({\n  selector: 'ais-numeric-menu',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('radio')\"\n              type=\"radio\"\n              name=\"NumericMenu\"\n              [checked]=\"item.isRefined\"\n              (change)=\"refine($event, item)\"\n            />\n            <span [class]=\"cx('labelText')\">{{item.label}}</span>\n          </label>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisNumericMenu extends BaseWidget {\n  @Input() public attribute: string;\n  @Input() public items: { label: string; start?: number; end?: number }[];\n  @Input()\n  public transformItems?: <U extends NumericMenuItem>(\n    items: NumericMenuItem[]\n  ) => U[];\n\n  public state: NumericMenuState = {\n    items: [],\n    refine: noop,\n    createURL: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('NumericMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectNumericMenu, {\n      attribute: this.attribute,\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, item: { value: string }) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(item.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisNumericMenu } from './numeric-menu';\n\n@NgModule({\n  declarations: [NgAisNumericMenu],\n  entryComponents: [NgAisNumericMenu],\n  exports: [NgAisNumericMenu],\n  imports: [CommonModule],\n})\nexport class NgAisNumericMenuModule {}\n","const range = require('lodash/range');\nimport { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectPagination } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\n@Component({\n  selector: 'ais-pagination',\n  template: `\n    <div [ngClass]=\"[cx(), state.nbPages <= 1 ? cx('', 'noRefinement') : '']\">\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngIf=\"showFirst\"\n          (click)=\"refine($event, 0)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'firstPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(0)\"\n            [class]=\"cx('link')\"\n          >\n            â¹â¹\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showPrevious\"\n          (click)=\"refine($event, state.currentRefinement - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'previousPage') +\n            (state.currentRefinement === 0 ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement - 1)\"\n            [class]=\"cx('link')\"\n          >\n            â¹\n          </a>\n        </li>\n\n        <li\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'page') +\n            (state.currentRefinement === page ? ' ' + cx('item', 'selected') : '')\n          \"\n          *ngFor=\"let page of pages\"\n          (click)=\"refine($event, page)\"\n        >\n          <a\n            [class]=\"cx('link')\"\n            [href]=\"state.createURL(page)\"\n          >\n            {{page + 1}}\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showNext\"\n          (click)=\"refine($event, state.currentRefinement + 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'nextPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.currentRefinement + 1)\"\n            [class]=\"cx('link')\"\n          >\n            âº\n          </a>\n        </li>\n\n        <li\n          *ngIf=\"showLast\"\n          (click)=\"refine($event, state.nbPages - 1)\"\n          [class]=\"\n            cx('item') +\n            ' ' +\n            cx('item', 'lastPage') +\n            (state.currentRefinement + 1 === state.nbPages ? ' ' + cx('item', 'disabled') : '')\n          \"\n        >\n          <a\n            [href]=\"state.createURL(state.nbPages - 1)\"\n            [class]=\"cx('link')\"\n          >\n            âºâº\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisPagination extends BaseWidget {\n  // rendering options\n  @Input() public showFirst: boolean = true;\n  @Input() public showLast: boolean = true;\n  @Input() public showPrevious: boolean = true;\n  @Input() public showNext: boolean = true;\n  @Input() public padding: number | string = 3;\n\n  // instance options\n  @Input() public totalPages?: number | string;\n\n  public state = {\n    createURL: noop,\n    currentRefinement: 0,\n    nbHits: 0,\n    nbPages: 0,\n    refine: noop,\n  };\n\n  get pages() {\n    const { nbPages, currentRefinement } = this.state;\n\n    const pagesArray = Array.apply(null, { length: nbPages }).map(\n      Number.call,\n      Number\n    );\n\n    const pagesPadding =\n      typeof this.padding === 'string'\n        ? parseInt(this.padding, 10)\n        : this.padding;\n\n    if (pagesPadding && pagesPadding > 0) {\n      // should not display pages that does not exists\n      if (nbPages < pagesPadding * 2 + 1) {\n        return pagesArray;\n      }\n\n      const minDelta = currentRefinement - pagesPadding - 1;\n      const maxDelta = currentRefinement + pagesPadding + 1;\n\n      if (minDelta < 0) {\n        return range(0, currentRefinement + pagesPadding + Math.abs(minDelta));\n      }\n\n      if (maxDelta > nbPages) {\n        return range(\n          currentRefinement - pagesPadding - (maxDelta - nbPages),\n          nbPages\n        );\n      }\n\n      return range(\n        currentRefinement - pagesPadding,\n        currentRefinement + pagesPadding + 1\n      );\n    }\n\n    return pagesArray;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Pagination');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectPagination, {\n      maxPages: parseNumberInput(this.totalPages),\n    });\n    super.ngOnInit();\n  }\n\n  public refine(event: MouseEvent, page: number) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    if (\n      page < 0 ||\n      page === this.state.currentRefinement ||\n      page >= this.state.nbPages\n    ) {\n      return;\n    }\n\n    this.state.refine(page);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPagination } from './pagination';\n\n@NgModule({\n  declarations: [NgAisPagination],\n  entryComponents: [NgAisPagination],\n  exports: [NgAisPagination],\n  imports: [CommonModule],\n})\nexport class NgAisPaginationModule {}\n","import { Component, Input, ViewChild, Inject, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport * as noUiSlider from 'nouislider';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type RangeSliderState = {\n  range: { min: number; max: number };\n  refine: Function;\n  start: number[];\n};\n\n@Component({\n  selector: 'ais-range-slider',\n  template: `\n    <div [class]=\"cx()\">\n      <div [class]=\"cx('body')\">\n        <div #sliderContainer></div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisRangeSlider extends BaseWidget {\n  @ViewChild('sliderContainer') public sliderContainer: any;\n\n  // rendering options\n  @Input() public pips: boolean = true;\n  @Input() public tooltips: boolean = true;\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public min?: number;\n  @Input() public max?: number;\n  @Input() public precision?: number;\n\n  public state: RangeSliderState = {\n    range: { min: 0, max: 1 },\n    refine: noop,\n    start: [0, 1],\n  };\n\n  private slider: any;\n\n  get step() {\n    // compute step from the precision value\n    const precision = parseNumberInput(this.precision) || 2;\n    return 1 / Math.pow(10, precision);\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeSlider');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public updateState = (state, isFirstRendering: boolean) => {\n    if (isFirstRendering) {\n      // create slider\n      const config = {\n        animate: false,\n        behaviour: 'snap',\n        connect: true,\n        range: { min: 0, max: 1 },\n        start: [0, 1],\n        step: this.step,\n        tooltips: this.tooltips && [\n          { to: this.formatTooltip },\n          { to: this.formatTooltip },\n        ],\n      };\n\n      if (this.pips === true || typeof this.pips === 'undefined') {\n        Object.assign(config, {\n          pips: {\n            density: 3,\n            mode: 'positions',\n            stepped: true,\n            values: [0, 50, 100],\n          },\n        });\n      } else if (this.pips !== undefined) {\n        Object.assign(config, { pips: this.pips });\n      }\n\n      this.slider = noUiSlider.create(\n        this.sliderContainer.nativeElement,\n        config\n      );\n\n      // register listen events\n      this.sliderContainer.nativeElement.noUiSlider.on(\n        'change',\n        this.handleChange\n      );\n    }\n\n    // update component inner state\n    this.state = state;\n\n    // update the slider state\n    const {\n      range: { min, max },\n      start,\n    } = state;\n\n    const disabled = min === max;\n    const range = disabled ? { min, max: max + 0.0001 } : { min, max };\n\n    this.slider.updateOptions({ disabled, range, start });\n  };\n\n  public handleChange = (values: string[] | number[]) => {\n    this.state.refine(values);\n  };\n\n  public formatTooltip = (value: number) => {\n    return value.toFixed(parseNumberInput(this.precision));\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeSlider } from './range-slider';\n\n@NgModule({\n  declarations: [NgAisRangeSlider],\n  entryComponents: [NgAisRangeSlider],\n  exports: [NgAisRangeSlider],\n  imports: [CommonModule],\n})\nexport class NgAisRangeSliderModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\nimport { connectRefinementList } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  FacetSortByStringOptions,\n} from '../instantsearch/instantsearch';\nimport { noop, parseNumberInput } from '../utils';\n\nexport type RefinementListItem = {\n  value: string;\n  label: string;\n  count: number;\n  isRefined: boolean;\n};\n\nexport type RefinementListState = {\n  canRefine: boolean;\n  canToggleShowMore: boolean;\n  createURL: Function;\n  isShowingMore: boolean;\n  items: RefinementListItem[];\n  refine: Function;\n  toggleShowMore: Function;\n  searchForItems: Function;\n  isFormSearch: boolean;\n};\n\n@Component({\n  selector: 'ais-refinement-list',\n  template: `\n    <div\n      [class]=\"cx()\"\n      *ngIf=\"!isHidden\"\n    >\n      <div\n        *ngIf=\"searchable\"\n        [class]=\"cx('searchBox')\"\n      >\n        <ais-facets-search\n          [search]=\"state.searchForItems\"\n          [searchPlaceholder]=\"searchPlaceholder\"\n        >\n        </ais-facets-search>\n      </div>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          [class]=\"getItemClass(item)\"\n          *ngFor=\"let item of state.items\"\n          (click)=\"refine($event, item)\"\n        >\n          <label [class]=\"cx('label')\">\n            <input\n              [class]=\"cx('checkbox')\"\n              type=\"checkbox\"\n              value=\"{{item.value}}\"\n              [checked]=\"item.isRefined\"\n            />\n            <span [class]=\"cx('labelText')\">\n              <ais-highlight attribute=\"highlighted\" [hit]=\"item\"></ais-highlight>\n            </span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </label>\n        </li>\n      </ul>\n\n      <button\n        [class]=\"cx('showMore')\"\n        *ngIf=\"showMore\"\n        (click)=\"state.toggleShowMore()\"\n        [disabled]=\"!state.canToggleShowMore\"\n      >\n        {{state.isShowingMore ? showLessLabel : showMoreLabel}}\n      </button>\n    </div>\n  `,\n})\nexport class NgAisRefinementList extends BaseWidget {\n  // rendering options\n  @Input() public showMoreLabel: string = 'Show more';\n  @Input() public showLessLabel: string = 'Show less';\n  @Input() public searchable?: boolean;\n  @Input() public searchPlaceholder: string = 'Search here...';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public operator: 'or' | 'and';\n  @Input() public limit: number;\n  @Input() public showMore: boolean;\n  @Input() public showMoreLimit: number;\n  @Input()\n  public sortBy:\n    | FacetSortByStringOptions[]\n    | ((a: RefinementListItem, b: RefinementListItem) => number);\n  @Input()\n  public transformItems?: <U extends RefinementListItem>(\n    items: RefinementListItem[]\n  ) => U[];\n\n  public state: RefinementListState = {\n    canRefine: false,\n    canToggleShowMore: false,\n    createURL: noop,\n    isShowingMore: false,\n    items: [],\n    refine: noop,\n    toggleShowMore: noop,\n    searchForItems: noop,\n    isFormSearch: false,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RefinementList');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRefinementList, {\n      showMore: this.showMore,\n      limit: parseNumberInput(this.limit),\n      showMoreLimit: parseNumberInput(this.showMoreLimit),\n      attribute: this.attribute,\n      operator: this.operator,\n      sortBy: this.sortBy,\n      escapeFacetValues: true,\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n\n  public refine(\n    event: MouseEvent,\n    item: { isRefined: boolean; value: string }\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (this.state.canRefine) {\n      // update UI directly, it will update the checkbox state\n      item.isRefined = !item.isRefined;\n\n      // refine through Algolia API\n      this.state.refine(item.value);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { bem } from '../utils';\n\n@Component({\n  selector: 'ais-facets-search',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{searchPlaceholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"searchQuery\"\n          (input)=\"handleChange($event.target.value)\"\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          title=\"Submit the search query.\"\n          type=\"submit\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"Clear the search query.\"\n          hidden\n        >\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"10\"\n            height=\"10\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisFacetsSearch {\n  @Input() public searchPlaceholder: string;\n  @Input() public search: Function;\n\n  public cx = bem('SearchBox');\n\n  public searchQuery = '';\n\n  public handleChange(value: string) {\n    this.searchQuery = value;\n    this.search(value);\n  }\n\n  public handleSubmit(event) {\n    event.preventDefault();\n    this.search(this.searchQuery);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisHighlightModule } from '../highlight/highlight.module';\nimport { NgAisRefinementList } from './refinement-list';\nimport { NgAisFacetsSearch } from './facets-search';\n\n@NgModule({\n  declarations: [NgAisRefinementList, NgAisFacetsSearch],\n  entryComponents: [NgAisRefinementList],\n  exports: [NgAisRefinementList],\n  imports: [CommonModule, NgAisHighlightModule],\n})\nexport class NgAisRefinementListModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  Inject,\n  forwardRef,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n} from '@angular/core';\n\nimport { connectSearchBox } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\n@Component({\n  selector: 'ais-search-box',\n  template: `\n    <div [class]=\"cx()\">\n      <form\n        [class]=\"cx('form')\"\n        novalidate\n        (submit)=\"handleSubmit($event)\"\n      >\n        <input\n          [class]=\"cx('input')\"\n          autocapitalize=\"off\"\n          autocorrect=\"off\"\n          placeholder=\"{{placeholder}}\"\n          role=\"textbox\"\n          spellcheck=\"false\"\n          type=\"text\"\n          [value]=\"state.query\"\n          (input)=\"handleChange($event.target.value)\"\n          (focus)=\"focus.emit($event)\"\n          (blur)=\"blur.emit($event)\"\n          #searchBox\n        />\n\n        <button\n          [class]=\"cx('submit')\"\n          type=\"submit\"\n          title=\"{{submitTitle}}\"\n        >\n          <svg\n            [ngClass]=\"cx('submitIcon')\"\n            viewBox=\"0 0 40 40\"\n            width=\"40\"\n            height=\"40\"\n          >\n            <path d=\"M26.804 29.01c-2.832 2.34-6.465 3.746-10.426 3.746C7.333 32.756 0 25.424 0 16.378 0 7.333 7.333 0 16.378 0c9.046 0 16.378 7.333 16.378 16.378 0 3.96-1.406 7.594-3.746 10.426l10.534 10.534c.607.607.61 1.59-.004 2.202-.61.61-1.597.61-2.202.004L26.804 29.01zm-10.426.627c7.323 0 13.26-5.936 13.26-13.26 0-7.32-5.937-13.257-13.26-13.257C9.056 3.12 3.12 9.056 3.12 16.378c0 7.323 5.936 13.26 13.258 13.26z\"></path>\n          </svg>\n        </button>\n\n        <button\n          [class]=\"cx('reset')\"\n          type=\"reset\"\n          title=\"{{resetTitle}}\"\n          (click)=\"handleReset($event)\"\n          [hidden]=\"!state.query || (state.query && !state.query.trim())\">\n          <svg\n            [ngClass]=\"cx('resetIcon')\"\n            viewBox=\"0 0 20 20\"\n            width=\"20\"\n            height=\"20\"\n          >\n            <path d=\"M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z\"></path>\n          </svg>\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisSearchBox extends BaseWidget implements AfterViewInit {\n  @ViewChild('searchBox') searchBox: ElementRef;\n  @Input() public placeholder: string = 'Search';\n  @Input() public submitTitle: string = 'Submit';\n  @Input() public resetTitle: string = 'Reset';\n  @Input() public searchAsYouType: boolean = true;\n  @Input() public autofocus: boolean = false;\n\n  // Output events\n  // form\n  @Output() submit = new EventEmitter();\n  @Output() reset = new EventEmitter();\n\n  // input\n  @Output() change = new EventEmitter();\n  @Output() focus = new EventEmitter();\n  @Output() blur = new EventEmitter();\n\n  public state = {\n    query: '',\n    refine: noop,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SearchBox');\n    this.createWidget(connectSearchBox);\n  }\n\n  public ngAfterViewInit() {\n    if (this.autofocus) {\n      this.searchBox.nativeElement.focus();\n    }\n  }\n\n  public handleChange(query: string) {\n    this.change.emit(query);\n    if (this.searchAsYouType) {\n      this.state.refine(query);\n    }\n  }\n\n  public handleSubmit(event: Event) {\n    // send submit event to parent component\n    this.submit.emit(event);\n\n    event.preventDefault();\n\n    if (!this.searchAsYouType) {\n      this.state.refine(this.searchBox.nativeElement.value);\n    }\n  }\n\n  public handleReset(event: MouseEvent) {\n    // send reset event to parent component\n    this.reset.emit(event);\n\n    // reset search\n    this.state.refine('');\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSearchBox } from './search-box';\n\n@NgModule({\n  declarations: [NgAisSearchBox],\n  entryComponents: [NgAisSearchBox],\n  exports: [NgAisSearchBox],\n  imports: [CommonModule],\n})\nexport class NgAisSearchBoxModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectSortBy } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type SortByItem = {\n  value: string;\n  label: string;\n};\n\nexport type SortByState = {\n  currentRefinement: string | null;\n  options: SortByItem[];\n  refine: Function;\n  // TODO: add hasNoResults: boolean;\n};\n\n@Component({\n  selector: 'ais-sort-by',\n  template: `\n    <div [class]=\"cx()\">\n      <select\n        [class]=\"cx('select')\"\n        (change)=\"state.refine($event.target.value)\"\n      >\n        <option\n          [class]=\"cx('option')\"\n          *ngFor=\"let item of state.options\"\n          [value]=\"item.value\"\n          [selected]=\"item.value === state.currentRefinement\"\n        >\n          {{item.label}}\n        </option>\n      </select>\n    </div>\n  `,\n})\nexport class NgAisSortBy extends BaseWidget {\n  @Input() public items: SortByItem[];\n  @Input()\n  public transformItems?: <U extends SortByItem>(items: SortByItem[]) => U[];\n\n  public state: SortByState = {\n    currentRefinement: null,\n    options: [],\n    refine: noop,\n    // TODO: Add hasNoResults: null,\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('SortBy');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectSortBy, {\n      items: this.items,\n      transformItems: this.transformItems,\n    });\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisSortBy } from './sort-by';\n\n@NgModule({\n  declarations: [NgAisSortBy],\n  entryComponents: [NgAisSortBy],\n  exports: [NgAisSortBy],\n  imports: [CommonModule],\n})\nexport class NgAisSortByModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectRatingMenu } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop, parseNumberInput } from '../utils';\n\nexport type RatingMenuItem = {\n  count: number;\n  isRefined: boolean;\n  name: string;\n  value: string;\n  stars: boolean[];\n};\n\nexport type RatingMenuState = {\n  createURL: Function;\n  hasNoResults: boolean;\n  items: RatingMenuItem[];\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-rating-menu',\n  template: `\n    <div\n      [ngClass]=\"[\n        cx(),\n        state.items.length === 0 ? cx('', 'noRefinement') : ''\n      ]\"\n      *ngIf=\"!isHidden\"\n    >\n      <svg style=\"display:none;\">\n        <symbol\n          id=\"ais-StarRating-starSymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 .288l2.833 8.718h9.167l-7.417 5.389 2.833 8.718-7.416-5.388-7.417 5.388 2.833-8.718-7.416-5.389h9.167z\"/>\n        </symbol>\n        <symbol\n          id=\"ais-StarRating-starEmptySymbol\"\n          viewBox=\"0 0 24 24\"\n        >\n          <path d=\"M12 6.76l1.379 4.246h4.465l-3.612 2.625 1.379 4.246-3.611-2.625-3.612 2.625 1.379-4.246-3.612-2.625h4.465l1.38-4.246zm0-6.472l-2.833 8.718h-9.167l7.416 5.389-2.833 8.718 7.417-5.388 7.416 5.388-2.833-8.718 7.417-5.389h-9.167l-2.833-8.718z\"/>\n        </symbol>\n      </svg>\n\n      <ul [class]=\"cx('list')\">\n        <li\n          *ngFor=\"let item of state.items\"\n          [class]=\"getItemClass(item)\"\n          (click)=\"handleClick($event, item.value)\"\n        >\n          <a\n            href=\"{{state.createURL(item.value)}}\"\n            [class]=\"cx('link')\"\n            (click)=\"handleClick($event, item.value)\"\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              *ngFor=\"let star of item.stars\"\n              [ngClass]=\"cx('starIcon') + ' ' + (star ? cx('starIcon', 'full') : cx('starIcon', 'empty'))\"\n              aria-hidden=\"true\"\n            >\n              <use\n                *ngIf=\"star\"\n                xlink:href=\"#ais-StarRating-starSymbol\"\n              >\n              </use>\n\n              <use\n                *ngIf=\"!star\"\n                xlink:href=\"#ais-StarRating-starEmptySymbol\"\n              >\n              </use>\n            </svg>\n\n            <span [class]=\"cx('label')\" aria-hidden=\"true\">{{andUpLabel}}</span>\n            <span [class]=\"cx('count')\">{{item.count}}</span>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class NgAisRatingMenu extends BaseWidget {\n  // rendering options\n  @Input() public andUpLabel: string = '& Up';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public max?: number;\n\n  public state: RatingMenuState = {\n    createURL: noop,\n    hasNoResults: false,\n    items: [],\n    refine: noop,\n  };\n\n  get isHidden() {\n    return this.state.items.length === 0 && this.autoHideContainer;\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RatingMenu');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRatingMenu, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick(event: MouseEvent, value: string) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.state.refine(value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRatingMenu } from './rating-menu';\n\n@NgModule({\n  declarations: [NgAisRatingMenu],\n  entryComponents: [NgAisRatingMenu],\n  exports: [NgAisRatingMenu],\n  imports: [CommonModule],\n})\nexport class NgAisRatingMenuModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n} from '@angular/core';\n\nimport { connectStats } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-stats',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <span *ngIf=\"!template\" [class]=\"cx('text')\">\n        {{state.nbHits}} results found in {{state.processingTimeMS}}ms.\n      </span>\n    </div>\n  `,\n})\nexport class NgAisStats extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  public state = {\n    hitPerPage: 0,\n    nbHits: 0,\n    nbPages: 0,\n    page: 0,\n    processingTimeMS: 0,\n    query: '',\n  };\n\n  get templateContext() {\n    return { state: this.state };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Stats');\n    this.createWidget(connectStats);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisStats } from './stats';\n\n@NgModule({\n  declarations: [NgAisStats],\n  entryComponents: [NgAisStats],\n  exports: [NgAisStats],\n  imports: [CommonModule],\n})\nexport class NgAisStatsModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectToggleRefinement } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ToggleState = {\n  createURL: Function;\n  refine: Function;\n  value: {\n    name?: string;\n    count?: number;\n    isRefined?: boolean;\n    onFacetValue?: {\n      isRefined: boolean;\n      count: number;\n    };\n    offFacetValue?: {\n      isRefined: boolean;\n      count: number;\n    };\n  };\n};\n\n@Component({\n  selector: 'ais-toggle',\n  template: `\n    <div [class]=\"cx()\">\n      <label [class]=\"cx('label')\">\n        <input\n          [class]=\"cx('checkbox')\"\n          type=\"checkbox\"\n          value=\"{{state.value.name}}\"\n          [checked]=\"state.value.isRefined\"\n          (change)=\"handleChange($event)\"\n        />\n\n        <span [class]=\"cx('labelText')\">\n          {{label || state.value.name}}\n        </span>\n\n        <span [class]=\"cx('count')\">{{state.value.count}}</span>\n      </label>\n    </div>\n  `,\n})\nexport class NgAisToggle extends BaseWidget {\n  // rendering options\n  @Input() public label: string;\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public on?: boolean | number | string;\n  @Input() public off?: boolean | number | string;\n\n  public state: ToggleState = {\n    createURL: noop,\n    refine: noop,\n    value: {},\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('ToggleRefinement');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectToggleRefinement, {\n      attribute: this.attribute,\n      on: this.on,\n      off: this.off,\n    });\n    super.ngOnInit();\n  }\n\n  public handleChange(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.state.refine(this.state.value);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisToggle } from './toggle';\n\n@NgModule({\n  declarations: [NgAisToggle],\n  entryComponents: [NgAisToggle],\n  exports: [NgAisToggle],\n  imports: [CommonModule],\n})\nexport class NgAisToggleModule {}\n","import { Inject, Component, Input, forwardRef } from '@angular/core';\n\nimport { connectRange } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { parseNumberInput, noop } from '../utils';\n\nexport type NumericRangeState = {\n  start: number[];\n  range: { min?: number; max?: number };\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-range-input',\n  template: `\n    <div [ngClass]=\"[\n        cx(), \n        !canRefine ? cx('', 'noRefinement') : ''\n      ]\">\n      <form\n        [class]=\"cx('form')\"\n        (submit)=\"handleSubmit($event)\"\n        novalidate\n      >\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'min')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.min\"\n            [value]=\"minInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'min')\"\n          />\n        </label>\n\n        <span [class]=\"cx('separator')\">{{separator}}</span>\n\n        <label [class]=\"cx('label')\">\n          <span [class]=\"cx('currency')\">{{currency}}</span>\n          <input\n            [ngClass]=\"[\n              cx('input'),\n              cx('input', 'max')\n            ]\"\n            type=\"number\"\n            [min]=\"state.range.min\"\n            [max]=\"state.range.max\"\n            [placeholder]=\"state.range.max\"\n            [value]=\"maxInputValue\"\n            [step]=\"step\"\n            (change)=\"handleChange($event, 'max')\"\n          />\n        </label>\n\n        <button\n          [class]=\"cx('submit')\"\n          (click)=\"handleSubmit($event)\"\n        >\n          {{submitLabel}}\n        </button>\n      </form>\n    </div>\n  `,\n})\nexport class NgAisRangeInput extends BaseWidget {\n  // rendering options\n  @Input() public currency: string = '$';\n  @Input() public separator: string = 'to';\n  @Input() public submitLabel: string = 'Go';\n\n  // instance options\n  @Input() public attribute: string;\n  @Input() public min?: number;\n  @Input() public max?: number;\n  @Input() public precision?: number = 0;\n\n  // inner state\n  public minInputValue?: number | string = '';\n  public maxInputValue?: number | string = '';\n\n  get step() {\n    const precision = parseNumberInput(this.precision);\n    return 1 / Math.pow(10, precision);\n  }\n\n  get canRefine() {\n    return this.state.range.min !== this.state.range.max;\n  }\n\n  public state: NumericRangeState = {\n    range: { min: undefined, max: undefined },\n    refine: noop,\n    start: [0, 0],\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('RangeInput');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectRange, {\n      attribute: this.attribute,\n      max: parseNumberInput(this.max),\n      min: parseNumberInput(this.min),\n      precision: parseNumberInput(this.precision),\n    });\n\n    super.ngOnInit();\n  }\n\n  public handleChange(event: any, type: string) {\n    const value = parseNumberInput(event.target.value);\n\n    if (type === 'min') {\n      this.minInputValue = value;\n    } else {\n      this.maxInputValue = value;\n    }\n  }\n\n  public handleSubmit(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    this.state.refine([this.minInputValue, this.maxInputValue]);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisRangeInput } from './range-input';\n\n@NgModule({\n  declarations: [NgAisRangeInput],\n  entryComponents: [NgAisRangeInput],\n  exports: [NgAisRangeInput],\n  imports: [CommonModule],\n})\nexport class NgAisRangeInputModule {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'ais-panel',\n  template: `\n    <div class=\"ais-Panel\">\n      <div *ngIf=\"header\" class=\"ais-Panel-header\">\n        {{header}}\n      </div>\n\n      <div class=\"ais-Panel-body\">\n        <ng-content></ng-content>\n      </div>\n\n      <div *ngIf=\"footer\" class=\"ais-Panel-footer\">\n        {{footer}}\n      </div>\n    </div>\n  `,\n})\nexport class NgAisPanel {\n  @Input() public header?: string;\n  @Input() public footer?: string;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisPanel } from './panel';\nexport { NgAisPanel } from './panel';\n\n@NgModule({\n  declarations: [NgAisPanel],\n  entryComponents: [NgAisPanel],\n  exports: [NgAisPanel],\n  imports: [CommonModule],\n})\nexport class NgAisPanelModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  KeyValueDiffer,\n  KeyValueDiffers,\n} from '@angular/core';\n\nimport { connectConfigure } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport {\n  NgAisInstantSearch,\n  SearchParameters,\n} from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\nexport type ConfigureState = {\n  refine: Function;\n};\n\n@Component({\n  selector: 'ais-configure',\n  template: '',\n})\nexport class NgAisConfigure extends BaseWidget {\n  // instance options\n  private internalSearchParameters: SearchParameters;\n\n  private differ: KeyValueDiffer<string, any>; // SearchParameters (I don't know how to get the values of the type)\n\n  public state: ConfigureState = {\n    refine: noop,\n  };\n\n  constructor(\n    private differs: KeyValueDiffers,\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('Configure');\n  }\n\n  @Input()\n  set searchParameters(values: SearchParameters) {\n    this.internalSearchParameters = values;\n    if (!this.differ && values) {\n      this.differ = this.differs.find(values).create();\n    }\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectConfigure, {\n      searchParameters: this.internalSearchParameters,\n    });\n    super.ngOnInit();\n  }\n\n  ngDoCheck() {\n    if (this.differ) {\n      const changes = this.differ.diff(this.internalSearchParameters);\n      if (changes) {\n        this.state.refine(this.internalSearchParameters);\n      }\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisConfigure } from './configure';\n\n@NgModule({\n  declarations: [NgAisConfigure],\n  entryComponents: [NgAisConfigure],\n  exports: [NgAisConfigure],\n  imports: [CommonModule],\n})\nexport class NgAisConfigureModule {}\n","import {\n  Component,\n  ContentChild,\n  TemplateRef,\n  Inject,\n  forwardRef,\n  Input,\n} from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\n\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\n@Component({\n  selector: 'ais-query-rule-custom-data',\n  template: `\n    <div [class]=\"cx()\">\n      <ng-container *ngTemplateOutlet=\"template; context: templateContext\">\n      </ng-container>\n\n      <div *ngIf=\"!template\">\n        <div *ngFor=\"let item of state.items\">\n          <pre>{{ item | json }}</pre>\n        </div>\n      </div>\n    </div>\n  `,\n})\nexport class NgAisQueryRuleCustomData extends BaseWidget {\n  @ContentChild(TemplateRef) public template: any;\n\n  @Input() public transformItems?: (items: any[]) => any[];\n\n  public state = {\n    items: [],\n  };\n\n  get templateContext() {\n    return {\n      items: this.state.items,\n    };\n  }\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('QueryRuleCustomData');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      transformItems: this.transformItems,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleCustomData } from './query-rule-custom-data';\n\n@NgModule({\n  declarations: [NgAisQueryRuleCustomData],\n  entryComponents: [NgAisQueryRuleCustomData],\n  exports: [NgAisQueryRuleCustomData],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleCustomDataModule {}\n","import { Component, Input, Inject, forwardRef } from '@angular/core';\n\nimport { connectQueryRules } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\n\ntype FacetValue = string | number | boolean;\n\n@Component({\n  selector: 'ais-query-rule-context',\n  template: '',\n})\nexport class NgAisQueryRuleContext extends BaseWidget {\n  @Input()\n  public trackedFilters: {\n    [facetName: string]: (facetValues: FacetValue[]) => FacetValue[];\n  };\n  @Input() public transformRuleContexts?: (items: string[]) => string[];\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any\n  ) {\n    super('QueryRuleContext');\n  }\n\n  public ngOnInit() {\n    this.createWidget(connectQueryRules, {\n      trackedFilters: this.trackedFilters,\n      transformRuleContexts: this.transformRuleContexts,\n    });\n\n    super.ngOnInit();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisQueryRuleContext } from './query-rule-context';\n\n@NgModule({\n  declarations: [NgAisQueryRuleContext],\n  entryComponents: [NgAisQueryRuleContext],\n  exports: [NgAisQueryRuleContext],\n  imports: [CommonModule],\n})\nexport class NgAisQueryRuleContextModule {}\n","import {\n  Component,\n  Input,\n  Inject,\n  forwardRef,\n  NgZone,\n  ContentChild,\n  ElementRef,\n  TemplateRef,\n  OnInit,\n} from '@angular/core';\n\nimport { connectVoiceSearch } from 'instantsearch.js/es/connectors';\nimport { BaseWidget } from '../base-widget';\nimport { NgAisInstantSearch } from '../instantsearch/instantsearch';\nimport { noop } from '../utils';\n\ntype Status =\n  | 'initial'\n  | 'askingPermission'\n  | 'waiting'\n  | 'recognizing'\n  | 'finished'\n  | 'error';\n\ntype ErrorCode =\n  | 'no-speech'\n  | 'aborted'\n  | 'audio-capture'\n  | 'network'\n  | 'not-allowed'\n  | 'service-not-allowed'\n  | 'bad-grammar'\n  | 'language-not-supported';\n\ntype TemplateContext = {\n  status: Status;\n  transcript: string;\n  isSpeechFinal: boolean;\n  errorCode?: ErrorCode;\n  isBrowserSupported: boolean;\n  isListening: boolean;\n};\n\ntype VoiceListeningState = {\n  status: Status;\n  transcript: string;\n  isSpeechFinal: boolean;\n  errorCode?: ErrorCode;\n};\n\ntype State = {\n  isBrowserSupported: boolean;\n  isListening: boolean;\n  toggleListening: () => void;\n  voiceListeningState: VoiceListeningState;\n  templateContext: TemplateContext;\n};\n\n@Component({\n  selector: 'ais-voice-search',\n  template: `\n    <div [class]=\"cx()\">\n      <button\n        type=\"button\"\n        [class]=\"cx('button')\"\n        [title]=\"state.isBrowserSupported ? buttonTitle : disabledButtonTitle\"\n        [disabled]=\"!state.isBrowserSupported\"\n        (click)=\"handleClick($event)\"\n      >\n        <ng-container *ngTemplateOutlet=\"button ? button : defaultButton; context: state.templateContext\"></ng-container>\n      </button>\n      <div [class]=\"cx('status')\">\n        <ng-container *ngTemplateOutlet=\"status ? status : defaultStatus; context: state.templateContext\"></ng-container>\n      </div>\n    </div>\n\n    <ng-template #defaultButton let-status=\"status\" let-errorCode=\"errorCode\" let-isListening=\"isListening\">\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 24 24'\n        fill='none'\n        stroke='currentColor'\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n      >\n        <ng-container *ngIf=\"isNotAllowedError(); then errorSvgContent else normalSvgContent\">\n        </ng-container>\n        <ng-template #errorSvgContent>\n          <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"></line>\n          <path d=\"M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6\"></path>\n          <path d=\"M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n        <ng-template #normalSvgContent>\n          <path\n            d=\"M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z\"\n            [attr.fill]=\"isListening ? 'currentColor' : 'none'\"\n          ></path>\n          <path d=\"M19 10v2a7 7 0 0 1-14 0v-2\"></path>\n          <line x1=\"12\" y1=\"19\" x2=\"12\" y2=\"23\"></line>\n          <line x1=\"8\" y1=\"23\" x2=\"16\" y2=\"23\"></line>\n        </ng-template>\n      </svg>\n    </ng-template>\n    <ng-template #defaultStatus let-transcript=\"transcript\">\n      <p>{{transcript}}</p>\n    </ng-template>\n  `,\n})\nexport class NgAisVoiceSearch extends BaseWidget implements OnInit {\n  @ContentChild('button') button: TemplateRef<ElementRef>;\n  @ContentChild('status') status: TemplateRef<ElementRef>;\n\n  @Input() public searchAsYouSpeak?: boolean;\n  @Input() public buttonTitle: string = 'Search by voice';\n  @Input()\n  public disabledButtonTitle: string =\n    'Search by voice (not supported on this browser)';\n\n  public state: State = {\n    isBrowserSupported: undefined,\n    isListening: undefined,\n    toggleListening: noop,\n    voiceListeningState: {\n      status: 'initial',\n      transcript: '',\n      isSpeechFinal: false,\n      errorCode: undefined,\n    },\n    templateContext: {\n      status: 'initial',\n      errorCode: undefined,\n      transcript: '',\n      isSpeechFinal: false,\n      isListening: false,\n      isBrowserSupported: false,\n    },\n  };\n\n  constructor(\n    @Inject(forwardRef(() => NgAisInstantSearch))\n    public instantSearchParent: any,\n    private zone: NgZone\n  ) {\n    super('VoiceSearch');\n  }\n\n  ngOnInit() {\n    this.createWidget(connectVoiceSearch, {\n      searchAsYouSpeak: this.searchAsYouSpeak,\n    });\n    super.ngOnInit();\n  }\n\n  public handleClick = (event: MouseEvent): void => {\n    (event.currentTarget as HTMLElement).blur();\n    this.state.toggleListening();\n  };\n\n  public isNotAllowedError = (): boolean =>\n    this.state.voiceListeningState.status === 'error' &&\n    this.state.voiceListeningState.errorCode === 'not-allowed';\n\n  public updateState = (state: State): void => {\n    this.zone.run(() => {\n      this.state = {\n        ...state,\n        templateContext: {\n          status: state.voiceListeningState.status,\n          errorCode: state.voiceListeningState.errorCode,\n          transcript: state.voiceListeningState.transcript,\n          isSpeechFinal: state.voiceListeningState.isSpeechFinal,\n          isListening: state.isListening,\n          isBrowserSupported: state.isBrowserSupported,\n        },\n      };\n    });\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NgAisVoiceSearch } from './voice-search';\n\n@NgModule({\n  declarations: [NgAisVoiceSearch],\n  entryComponents: [NgAisVoiceSearch],\n  exports: [NgAisVoiceSearch],\n  imports: [CommonModule],\n})\nexport class NgAisVoiceSearchModule {}\n","import * as algoliasearchProxy from 'algoliasearch';\nimport * as encodeProxy from 'querystring-es3/encode';\nimport { VERSION as AngularVersion } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { TransferState, StateKey } from '@angular/platform-browser';\nimport { VERSION } from './version';\n\ntype SSRSearchClientOptions = {\n  appId: string;\n  apiKey: string;\n  httpClient: HttpClient;\n  HttpHeaders: typeof HttpHeaders;\n  transferState: TransferState;\n  options?: object;\n  makeStateKey<T = void>(key: string): StateKey<T>;\n};\n\ntype RequestOptions = {\n  // Algolia only uses GET and POST methods for searching.\n  // See: https://www.algolia.com/doc/rest-api/search/#search-endpoints\n  method: 'GET' | 'POST';\n  headers: string;\n  body: string;\n};\n\nconst algoliasearch = algoliasearchProxy.default || algoliasearchProxy;\nconst encode = encodeProxy.default || encodeProxy;\n\nexport function createSSRSearchClient({\n  appId,\n  apiKey,\n  httpClient,\n  HttpHeaders,\n  transferState,\n  makeStateKey,\n  options = {},\n}: SSRSearchClientOptions) {\n  const searchClient = algoliasearch(appId, apiKey, options);\n\n  searchClient.addAlgoliaAgent(`angular (${AngularVersion.full})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch (${VERSION})`);\n  searchClient.addAlgoliaAgent(`angular-instantsearch-server (${VERSION})`);\n\n  (searchClient as any)._request = (\n    rawUrl: string,\n    options: RequestOptions\n  ) => {\n    let headers = new HttpHeaders();\n\n    headers = headers.set(\n      'content-type',\n      options.method === 'POST'\n        ? 'application/x-www-form-urlencoded'\n        : 'application/json'\n    );\n\n    headers = headers.set('accept', 'application/json');\n\n    const url =\n      rawUrl + (rawUrl.includes('?') ? '&' : '?') + encode(options.headers);\n\n    const transferStateKey = makeStateKey(`ngais(${options.body})`);\n\n    if (transferState.hasKey(transferStateKey)) {\n      const response = JSON.parse(\n        transferState.get(transferStateKey, JSON.stringify({}))\n      );\n\n      return Promise.resolve({\n        statusCode: response.status,\n        body: response.body,\n        headers: response.headers,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      httpClient\n        .request(options.method, url, {\n          headers,\n          body: options.body,\n          observe: 'response',\n        })\n        .subscribe(\n          response => {\n            transferState.set(transferStateKey, JSON.stringify(response));\n\n            resolve({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            });\n          },\n          response =>\n            reject({\n              statusCode: response.status,\n              body: response.body,\n              headers: response.headers,\n            })\n        );\n    });\n  };\n\n  return searchClient;\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\n// Modules\nimport { NgAisBreadcrumbModule } from './breadcrumb/breadcrumb.module';\nexport { NgAisBreadcrumbModule };\nimport { NgAisClearRefinementsModule } from './clear-refinements/clear-refinements.module';\nexport { NgAisClearRefinementsModule };\nimport { NgAisCurrentRefinementsModule } from './current-refinements/current-refinements.module';\nexport { NgAisCurrentRefinementsModule };\nimport { NgAisHierarchicalMenuModule } from './hierarchical-menu/hierarchical-menu.module';\nexport { NgAisHierarchicalMenuModule };\nimport { NgAisHitsPerPageModule } from './hits-per-page/hits-per-page.module';\nexport { NgAisHitsPerPageModule };\nimport { NgAisHitsModule } from './hits/hits.module';\nexport { NgAisHitsModule };\nimport { NgAisInfiniteHitsModule } from './infinite-hits/infinite-hits.module';\nexport { NgAisInfiniteHitsModule };\nimport { NgAisInstantSearchModule } from './instantsearch/instantsearch.module';\nexport { NgAisInstantSearchModule };\nimport { NgAisMenuModule } from './menu/menu.module';\nexport { NgAisMenuModule };\nimport { NgAisNumericMenuModule } from './numeric-menu/numeric-menu.module';\nexport { NgAisNumericMenuModule };\nimport { NgAisPaginationModule } from './pagination/pagination.module';\nexport { NgAisPaginationModule };\nimport { NgAisRangeSliderModule } from './range-slider/range-slider.module';\nexport { NgAisRangeSliderModule };\nimport { NgAisRefinementListModule } from './refinement-list/refinement-list.module';\nexport { NgAisRefinementListModule };\nimport { NgAisSearchBoxModule } from './search-box/search-box.module';\nexport { NgAisSearchBoxModule };\nimport { NgAisSortByModule } from './sort-by/sort-by.module';\nexport { NgAisSortByModule };\nimport { NgAisRatingMenuModule } from './rating-menu/rating-menu.module';\nexport { NgAisRatingMenuModule };\nimport { NgAisStatsModule } from './stats/stats.module';\nexport { NgAisStatsModule };\nimport { NgAisToggleModule } from './toggle/toggle.module';\nexport { NgAisToggleModule };\nimport { NgAisHighlightModule } from './highlight/highlight.module';\nexport { NgAisHighlightModule };\nimport { NgAisRangeInputModule } from './range-input/range-input.module';\nexport { NgAisRangeInputModule };\nimport { NgAisPanelModule } from './panel/panel.module';\nexport { NgAisPanelModule };\nimport { NgAisConfigureModule } from './configure/configure.module';\nexport { NgAisConfigureModule };\nimport { NgAisQueryRuleCustomDataModule } from './query-rule-custom-data/query-rule-custom-data.module';\nexport { NgAisQueryRuleCustomDataModule };\nimport { NgAisQueryRuleContextModule } from './query-rule-context/query-rule-context.module';\nexport { NgAisQueryRuleContextModule };\nimport { NgAisVoiceSearchModule } from './voice-search/voice-search.module';\nexport { NgAisVoiceSearchModule };\n\n// Server-side rendering search client\nimport { createSSRSearchClient } from './create-ssr-search-client';\nexport { createSSRSearchClient };\n\nimport { parseServerRequest } from './parse-server-request';\nexport { parseServerRequest };\n\n// Custom widget with BaseWidget class\nimport { BaseWidget, Widget, Connector } from './base-widget';\nexport { BaseWidget, Widget, Connector };\n\nimport { NgAisInstantSearch } from './instantsearch/instantsearch';\nexport { NgAisInstantSearch };\n\nconst NGIS_MODULES = [\n  NgAisInstantSearchModule,\n  NgAisHitsModule,\n  NgAisSearchBoxModule,\n  NgAisClearRefinementsModule,\n  NgAisMenuModule,\n  NgAisPaginationModule,\n  NgAisRefinementListModule,\n  NgAisHitsPerPageModule,\n  NgAisSortByModule,\n  NgAisNumericMenuModule,\n  NgAisStatsModule,\n  NgAisToggleModule,\n  NgAisInfiniteHitsModule,\n  NgAisCurrentRefinementsModule,\n  NgAisHierarchicalMenuModule,\n  NgAisRatingMenuModule,\n  NgAisRangeSliderModule,\n  NgAisBreadcrumbModule,\n  NgAisHighlightModule,\n  NgAisRangeInputModule,\n  NgAisPanelModule,\n  NgAisConfigureModule,\n  NgAisQueryRuleCustomDataModule,\n  NgAisQueryRuleContextModule,\n  NgAisVoiceSearchModule,\n];\n\n@NgModule({\n  exports: NGIS_MODULES,\n  imports: [NgAisInstantSearchModule.forRoot()],\n})\nexport class NgAisRootModule {}\n\n@NgModule({ imports: NGIS_MODULES, exports: NGIS_MODULES })\nexport class NgAisModule {\n  public static forRoot(): ModuleWithProviders {\n    return { ngModule: NgAisRootModule };\n  }\n}\n","import { AlgoliaSearchHelper } from 'algoliasearch-helper';\n\n// Transforms url query to SearchParameters\nexport function parseServerRequest(req: { url: string } | void) {\n  if (req && req.url && req.url.includes('?')) {\n    const query = req.url.split('?')[1];\n    return AlgoliaSearchHelper.getConfigurationFromQueryString(query);\n  }\n\n  return {};\n}\n"]}